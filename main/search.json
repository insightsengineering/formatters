[{"path":[]},{"path":"https://insightsengineering.github.io/formatters/main/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others‚Äô private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://insightsengineering.github.io/formatters/main/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team support@github.com. complaints reviewed investigated result response deemed necessary appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project‚Äôs leadership.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available https://www.contributor-covenant.org/version/1/4/code--conduct.html answers common questions code conduct, see https://www.contributor-covenant.org/faq","code":""},{"path":"https://insightsengineering.github.io/formatters/main/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contribution Guidelines","title":"Contribution Guidelines","text":"üôè Thank taking time contribute! input deeply valued, whether issue, pull request, even feedback, regardless size, content scope.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of contents","title":"Contribution Guidelines","text":"üë∂ Getting started üìî Code Conduct üóÉ License üìú Issues üö© Pull requests üíª Coding guidelines üèÜ Recognition model ‚ùì Questions","code":""},{"path":"https://insightsengineering.github.io/formatters/main/CONTRIBUTING.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Contribution Guidelines","text":"Please refer project documentation brief introduction. Please also see articles within project documentation additional information.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contribution Guidelines","text":"Code Conduct governs project. Participants contributors expected follow rules outlined therein.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/CONTRIBUTING.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Contribution Guidelines","text":"contributions covered project‚Äôs license.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contribution Guidelines","text":"use GitHub track issues, feature requests, bugs. submitting new issue, please check issue already reported. issue already exists, please upvote existing issue üëç. new feature requests, please elaborate context benefit feature users, developers, relevant personas.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/formatters/main/CONTRIBUTING.html","id":"github-flow","dir":"","previous_headings":"Pull requests","what":"GitHub Flow","title":"Contribution Guidelines","text":"repository uses GitHub Flow model collaboration. submit pull request: Create branch Please see branch naming convention . don‚Äôt write access repository, please fork . Make changes Make sure code passes checks imposed GitHub Actions well documented well tested unit tests sufficiently covering changes introduced Create pull request (PR) pull request description, please link relevant issue (), provide detailed description change, include assumptions. Address review comments, Post approval Merge PR write access. Otherwise, reviewer merge PR behalf. Pat back Congratulations! üéâ now official contributor project! grateful contribution.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/CONTRIBUTING.html","id":"branch-naming-convention","dir":"","previous_headings":"Pull requests","what":"Branch naming convention","title":"Contribution Guidelines","text":"Suppose changes related current issue current project; please name branch follows: <issue_id>_<short_description>. Please use underscore (_) delimiter word separation. example, 420_fix_ui_bug suitable branch name change resolving UI-related bug reported issue number 420 current project. change affects multiple repositories, please name branches follows: <issue_id>_<issue_repo>_<short description>. example, 69_awesomeproject_fix_spelling_error reference issue 69 reported project awesomeproject aims resolve one spelling errors multiple (likely related) repositories.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/CONTRIBUTING.html","id":"monorepo-and-stageddependencies","dir":"","previous_headings":"Pull requests","what":"monorepo and staged.dependencies","title":"Contribution Guidelines","text":"Sometimes might need change upstream dependent package(s) able submit meaningful change. using staged.dependencies functionality simulate monorepo behavior. dependency configuration already specified project‚Äôs staged_dependencies.yaml file. need name feature branches appropriately. exception branch naming convention described . Please refer staged.dependencies package documentation details.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/CONTRIBUTING.html","id":"coding-guidelines","dir":"","previous_headings":"","what":"Coding guidelines","title":"Contribution Guidelines","text":"repository follows unified processes standards adopted maintainers ensure software development carried consistently within teams cohesively across repositories.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/CONTRIBUTING.html","id":"style-guide","dir":"","previous_headings":"Coding guidelines","what":"Style guide","title":"Contribution Guidelines","text":"repository follows standard tidyverse style guide uses lintr lint checks. Customized lint configurations available repository‚Äôs .lintr file.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/CONTRIBUTING.html","id":"dependency-management","dir":"","previous_headings":"Coding guidelines","what":"Dependency management","title":"Contribution Guidelines","text":"Lightweight right weight. repository follows tinyverse recommedations limiting dependencies minimum.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/CONTRIBUTING.html","id":"dependency-version-management","dir":"","previous_headings":"Coding guidelines","what":"Dependency version management","title":"Contribution Guidelines","text":"code compatible (!) historical versions given dependenct package, required specify minimal version DESCRIPTION file. particular: development version requires (imports) development version another package - required put abc (>= 1.2.3.9000).","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/formatters/main/CONTRIBUTING.html","id":"r--package-versions","dir":"","previous_headings":"Coding guidelines > Recommended development environment & tools","what":"R & package versions","title":"Contribution Guidelines","text":"continuously test packages newest R version along recent dependencies CRAN BioConductor. recommend working environment also set way. can find details R version packages used R CMD check GitHub Action execution log - step prints R sessionInfo(). discover bugs older R versions older set dependencies, please create relevant bug reports.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/CONTRIBUTING.html","id":"pre-commit","dir":"","previous_headings":"Coding guidelines > Recommended development environment & tools","what":"pre-commit","title":"Contribution Guidelines","text":"highly recommend use pre-commit tool combined R hooks pre-commit execute checks committing pushing changes. Pre-commit hooks already available repository‚Äôs .pre-commit-config.yaml file.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/CONTRIBUTING.html","id":"recognition-model","dir":"","previous_headings":"","what":"Recognition model","title":"Contribution Guidelines","text":"mentioned previously, contributions deeply valued appreciated. contribution data available part repository insights, recognize significant contribution hence add contributor package authors list, following rules enforced: Minimum 5% lines code authored* (determined git blame query) top 5 contributors terms number commits lines added lines removed* *Excluding auto-generated code, including limited roxygen comments renv.lock files. package maintainer also reserves right adjust criteria recognize contributions.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/CONTRIBUTING.html","id":"questions","dir":"","previous_headings":"","what":"Questions","title":"Contribution Guidelines","text":"questions regarding contribution guidelines, please contact package/repository maintainer.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/articles/formatters.html","id":"formatters","dir":"Articles","previous_headings":"","what":"formatters","title":"Introduction to the formatters package","text":"formatters package provides two core pieces functionality, related ASCII rendering: format_value provides ability format single- multi-valued elements ASCII display-ready strings matrix_form framework provides generics implementing ASCII rendering support display tables feature sets used rtables package.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/articles/formatters.html","id":"formatting-values","dir":"Articles","previous_headings":"","what":"Formatting values","title":"Introduction to the formatters package","text":"core motivation formatters rendering reporting tables ASCII. context ‚Äòvalue‚Äô raw content appear single table cell. commonly numeric vector length 1, 2 ‚Äì occasionally ‚Äì 3.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/articles/formatters.html","id":"format-labels","dir":"Articles","previous_headings":"Formatting values","what":"Format labels","title":"Introduction to the formatters package","text":"formatters ships large number pre-defined formats appropriate rendering values ASCII strings. existing formats specified labels. can see list calling list_valid_format_labels function: labels describes incoming (possibly multi-element) raw value formatted. xx indicates element value printed , modification. xx. indicates numeric value element rounded 0 decimal places, xx.x indicates rounding 1 decimal place, etc.","code":"list_valid_format_labels() $`1d`  [1] \"xx\"                 \"xx.\"                \"xx.x\"                [4] \"xx.xx\"              \"xx.xxx\"             \"xx.xxxx\"             [7] \"xx%\"                \"xx.%\"               \"xx.x%\"              [10] \"xx.xx%\"             \"xx.xxx%\"            \"(N=xx)\"             [13] \"N=xx\"               \">999.9\"             \">999.99\"            [16] \"x.xxxx | (<0.0001)\"  $`2d`  [1] \"xx / xx\"            \"xx. / xx.\"          \"xx.x / xx.x\"         [4] \"xx.xx / xx.xx\"      \"xx.xxx / xx.xxx\"    \"N=xx (xx%)\"          [7] \"xx (xx%)\"           \"xx (xx.%)\"          \"xx (xx.x%)\"         [10] \"xx (xx.xx%)\"        \"xx. (xx.%)\"         \"xx.x (xx.x%)\"       [13] \"xx.xx (xx.xx%)\"     \"(xx, xx)\"           \"(xx., xx.)\"         [16] \"(xx.x, xx.x)\"       \"(xx.xx, xx.xx)\"     \"(xx.xxx, xx.xxx)\"   [19] \"(xx.xxxx, xx.xxxx)\" \"xx - xx\"            \"xx.x - xx.x\"        [22] \"xx.xx - xx.xx\"      \"xx (xx)\"            \"xx. (xx.)\"          [25] \"xx.x (xx.x)\"        \"xx.xx (xx.xx)\"      \"xx (xx.)\"           [28] \"xx (xx.x)\"          \"xx (xx.xx)\"         \"xx. (xx.x)\"         [31] \"xx.x (xx.xx)\"       \"xx.xx (xx.xxx)\"     \"xx, xx\"             [34] \"xx.x, xx.x\"         \"xx.xx, xx.xx\"       \"xx.x to xx.x\"        $`3d` [1] \"xx. (xx. - xx.)\"          \"xx.x (xx.x - xx.x)\"       [3] \"xx.xx (xx.xx - xx.xx)\"    \"xx.xxx (xx.xxx - xx.xxx)\" [5] \"xx / xx (xx.%)\"           \"xx / xx (xx.x%)\"          [7] \"xx / xx (xx.xx%)\"          attr(,\"info\") [1] \"xx does not modify the element, and xx. rounds a number to 0 digits\""},{"path":"https://insightsengineering.github.io/formatters/main/articles/formatters.html","id":"formatting-values-1","dir":"Articles","previous_headings":"Formatting values","what":"Formatting values","title":"Introduction to the formatters package","text":"Values formatted via calls format_value, like :","code":"format_value(5.1235, format = \"xx.xx\") [1] \"5.12\" format_value(c(1.2355, 2.6789), \"(xx.xx, xx.xx)\") [1] \"(1.24, 2.68)\""},{"path":"https://insightsengineering.github.io/formatters/main/articles/formatters.html","id":"table-rendering-framework","dir":"Articles","previous_headings":"","what":"Table Rendering Framework","title":"Introduction to the formatters package","text":"Advanced Usage features supported, fact used rtables experimental rlistings. said, API currently low-level tailored rtables rlistings need. useful table frameworks may vary. second major piece functionality formatters ability render tables ASCII (thus directly terminal) based -called MatrixPrintForm representation table. hook rtables-style ASCII display tables, suffices export method exported matrix_form generic formatters provides. method must return MatrixPrintForm object representing table. can build baby example method data.frames illustrate process:","code":"## pagdfrow supports a large number of pieces of information regarding ## siblings and what information should be repeated after a pagination. ## we ignore all that here and just give the absolutely crucial info: ## nm (name), lab (label), rnum (absolute row position), pth (\"path\"), ## extent (how many lines it takes up), rclass (\"class of row\") fake_pagdf_row <- function(i, rnms) {   nm <- rnms[i]   pagdfrow(     nm = nm, lab = nm, rnum = i, pth = nm, extent = 1L,     rclass = \"NA\"   ) }  matrix_form.data.frame <- function(df) {   fmts <- lapply(df, function(x) if (is.null(obj_format(x))) \"xx\" else obj_format(x))    bodystrs <- mapply(function(x, fmt) {     sapply(x, format_value, format = fmt)   }, x = df, fmt = fmts)    rnms <- row.names(df)   if (is.null(rnms)) {     rnms <- as.character(seq_len(NROW(df)))   }    cnms <- names(df)    strings <- rbind(     c(\"\", cnms),     cbind(rnms, bodystrs)   )    fnr <- nrow(strings)   fnc <- ncol(strings)    ## center alignment for column labels, left alignment for everything else   aligns <- rbind(     \"center\",     matrix(\"left\", nrow = NROW(df), ncol = fnc)   )     ## build up fake pagination df,   rowdf <- basic_pagdf(row.names(df))   MatrixPrintForm(     strings = strings,     aligns = aligns,     spans = matrix(1, nrow = fnr, ncol = fnc),     formats = matrix(\"\", nrow = fnr, ncol = fnc),     row_info = rowdf,     has_topleft = FALSE,     nlines_header = 1,     nrow_header = 1   ) }  cat(toString(matrix_form.data.frame(mtcars))) mpg    cyl   disp    hp    drat    wt     qsec    vs   am   gear   carb ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî Mazda RX4             21     6     160     110   3.9    2.62    16.46   0    1    4      4    Mazda RX4 Wag         21     6     160     110   3.9    2.875   17.02   0    1    4      4    Datsun 710            22.8   4     108     93    3.85   2.32    18.61   1    1    4      1    Hornet 4 Drive        21.4   6     258     110   3.08   3.215   19.44   1    0    3      1    Hornet Sportabout     18.7   8     360     175   3.15   3.44    17.02   0    0    3      2    Valiant               18.1   6     225     105   2.76   3.46    20.22   1    0    3      1    Duster 360            14.3   8     360     245   3.21   3.57    15.84   0    0    3      4    Merc 240D             24.4   4     146.7   62    3.69   3.19    20      1    0    4      2    Merc 230              22.8   4     140.8   95    3.92   3.15    22.9    1    0    4      2    Merc 280              19.2   6     167.6   123   3.92   3.44    18.3    1    0    4      4    Merc 280C             17.8   6     167.6   123   3.92   3.44    18.9    1    0    4      4    Merc 450SE            16.4   8     275.8   180   3.07   4.07    17.4    0    0    3      3    Merc 450SL            17.3   8     275.8   180   3.07   3.73    17.6    0    0    3      3    Merc 450SLC           15.2   8     275.8   180   3.07   3.78    18      0    0    3      3    Cadillac Fleetwood    10.4   8     472     205   2.93   5.25    17.98   0    0    3      4    Lincoln Continental   10.4   8     460     215   3      5.424   17.82   0    0    3      4    Chrysler Imperial     14.7   8     440     230   3.23   5.345   17.42   0    0    3      4    Fiat 128              32.4   4     78.7    66    4.08   2.2     19.47   1    1    4      1    Honda Civic           30.4   4     75.7    52    4.93   1.615   18.52   1    1    4      2    Toyota Corolla        33.9   4     71.1    65    4.22   1.835   19.9    1    1    4      1    Toyota Corona         21.5   4     120.1   97    3.7    2.465   20.01   1    0    3      1    Dodge Challenger      15.5   8     318     150   2.76   3.52    16.87   0    0    3      2    AMC Javelin           15.2   8     304     150   3.15   3.435   17.3    0    0    3      2    Camaro Z28            13.3   8     350     245   3.73   3.84    15.41   0    0    3      4    Pontiac Firebird      19.2   8     400     175   3.08   3.845   17.05   0    0    3      2    Fiat X1-9             27.3   4     79      66    4.08   1.935   18.9    1    1    4      1    Porsche 914-2         26     4     120.3   91    4.43   2.14    16.7    0    1    5      2    Lotus Europa          30.4   4     95.1    113   3.77   1.513   16.9    1    1    5      2    Ford Pantera L        15.8   8     351     264   4.22   3.17    14.5    0    1    5      4    Ferrari Dino          19.7   6     145     175   3.62   2.77    15.5    0    1    5      6    Maserati Bora         15     8     301     335   3.54   3.57    14.6    0    1    5      8    Volvo 142E            21.4   4     121     109   4.11   2.78    18.6    1    1    4      2"},{"path":"https://insightsengineering.github.io/formatters/main/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gabriel Becker. Author.           original creator package Adrian Waddell. Author. Davide Garolini. Author. Emily de la Rua. Author. Abinaya Yogasekaram. Contributor. Joe Zhu. Author, maintainer. F. Hoffmann-La Roche AG. Copyright holder, funder.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Becker G, Waddell , Garolini D, de la Rua E, Zhu J (2025). formatters: ASCII Formatting Values Tables. R package version 0.5.10.9002, https://github.com/insightsengineering/formatters/, https://insightsengineering.github.io/formatters/main/.","code":"@Manual{,   title = {formatters: ASCII Formatting for Values and Tables},   author = {Gabriel Becker and Adrian Waddell and Davide Garolini and Emily {de la Rua} and Joe Zhu},   year = {2025},   note = {R package version 0.5.10.9002,     https://github.com/insightsengineering/formatters/},   url = {https://insightsengineering.github.io/formatters/main/}, }"},{"path":"https://insightsengineering.github.io/formatters/main/index.html","id":"formatters-","dir":"","previous_headings":"","what":"ASCII Formatting for Values and Tables","title":"ASCII Formatting for Values and Tables","text":"formatters package provides two core pieces functionality, related ASCII rendering: format_value provides ability format single- multi-valued elements ASCII display-ready strings matrix_form framework provides generics implementing ASCII rendering support display tables feature sets used rtables package.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/index.html","id":"motivation","dir":"","previous_headings":"","what":"Motivation","title":"ASCII Formatting for Values and Tables","text":"core motivation formatters rendering reporting tables ASCII. context ‚Äúvalue‚Äù raw content appear single table cell. commonly numeric vector length 1, 2 ‚Äì occasionally ‚Äì 3.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"ASCII Formatting for Values and Tables","text":"formatters available CRAN can install latest released version : can install latest development version directly GitHub : Packaged releases (CRAN official CRAN releases) can found releases list. understand use package, please refer Introduction formatters article, provides multiple examples code implementation.","code":"install.packages(\"formatters\") # install.packages(\"pak\") pak::pak(\"insightsengineering/formatters\")"},{"path":"https://insightsengineering.github.io/formatters/main/index.html","id":"format-labels","dir":"","previous_headings":"","what":"Format labels","title":"ASCII Formatting for Values and Tables","text":"formatters ships large number pre-defined formats appropriate rendering values ASCII strings. existing formats specified labels. can see list calling list_valid_format_labels function: labels describes incoming (possibly multi-element) raw value formatted. xx indicates element value printed , modification. xx. indicates numeric value element rounded 0 decimal places, xx.x indicates rounding 1 decimal place, etc.","code":"list_valid_format_labels()  $`1d`  [1] \"xx\"                 \"xx.\"                \"xx.x\"  [4] \"xx.xx\"              \"xx.xxx\"             \"xx.xxxx\"  [7] \"xx%\"                \"xx.%\"               \"xx.x%\" [10] \"xx.xx%\"             \"xx.xxx%\"            \"(N=xx)\" [13] \">999.9\"             \">999.99\"            \"x.xxxx | (<0.0001)\"  $`2d`  [1] \"xx / xx\"            \"xx. / xx.\"          \"xx.x / xx.x\"  [4] \"xx.xx / xx.xx\"      \"xx.xxx / xx.xxx\"    \"xx (xx%)\"  [7] \"xx (xx.%)\"          \"xx (xx.x%)\"         \"xx (xx.xx%)\" [10] \"xx. (xx.%)\"         \"xx.x (xx.x%)\"       \"xx.xx (xx.xx%)\" [13] \"(xx, xx)\"           \"(xx., xx.)\"         \"(xx.x, xx.x)\" [16] \"(xx.xx, xx.xx)\"     \"(xx.xxx, xx.xxx)\"   \"(xx.xxxx, xx.xxxx)\" [19] \"xx - xx\"            \"xx.x - xx.x\"        \"xx.xx - xx.xx\" [22] \"xx (xx)\"            \"xx. (xx.)\"          \"xx.x (xx.x)\" [25] \"xx.xx (xx.xx)\"      \"xx (xx.)\"           \"xx (xx.x)\" [28] \"xx (xx.xx)\"         \"xx.x, xx.x\"         \"xx.x to xx.x\"  $`3d` [1] \"xx.xx (xx.xx - xx.xx)\"  attr(,\"info\") [1] \"xx does not modify the element, and xx. rounds a number to 0 digits\""},{"path":"https://insightsengineering.github.io/formatters/main/index.html","id":"formatting-values","dir":"","previous_headings":"","what":"Formatting values","title":"ASCII Formatting for Values and Tables","text":"Values formatted via calls format_value, like :","code":"format_value(5.1235, format = \"xx.xx\")  [1] \"5.12\"  format_value(c(1.2355, 2.6789), \"(xx.xx, xx.xx)\")  [1] \"(1.24, 2.68)\""},{"path":"https://insightsengineering.github.io/formatters/main/index.html","id":"table-rendering-framework","dir":"","previous_headings":"","what":"Table Rendering Framework","title":"ASCII Formatting for Values and Tables","text":"Advanced Usage features supported, fact used rtables experimental rlistings. said, API currently low-level tailored rtables rlistings need. useful table frameworks may vary. second major piece functionality formatters ability render tables ASCII (thus directly terminal) based -called MatrixPrintForm representation table. hook rtables-style ASCII display tables, suffices export method exported matrix_form generic formatters provides. method must return MatrixPrintForm object representing table. can build baby example method data.frames illustrate process:","code":"## pagdfrow supports a large number of pieces of information regarding ## siblings and what information should be repeated after a pagination. ## we ignore all that here and just give the absolutely crucial info: ## nm (name), lab (label), rnum (absolute row position), pth (\"path\"), ## extent (how many lines it takes up), rclass (\"class of row\") fake_pagdf_row <- function(i, rnms) {     nm <- rnms[i]     pagdfrow(nm = nm, lab = nm, rnum = i, pth = nm, extent = 1L,              rclass = \"NA\") }  matrix_form.data.frame <- function(df) {     fmts <- lapply(df, function(x) if(is.null(obj_format(x))) \"xx\" else obj_format(x))      bodystrs <- mapply(function(x, fmt) {         sapply(x, format_value, format = fmt)     }, x = df, fmt = fmts)      rnms <- row.names(df)     if(is.null(rnms))         rnms <- as.character(seq_len(NROW(df)))      cnms <- names(df)      strings <- rbind(c(\"\", cnms),                      cbind(rnms, bodystrs))      fnr <- nrow(strings)     fnc <- ncol(strings)      ## center alignment for column labels, left alignment for everything else     aligns <- rbind(\"center\",                     matrix(\"left\", nrow = NROW(df), ncol = fnc))     ## build up fake pagination df,     rowdf <- basic_pagdf(row.names(df))     MatrixPrintForm(strings = strings,                       aligns = aligns,                       spans = matrix(1, nrow = fnr, ncol = fnc),                       formats = NULL,                       row_info = rowdf,                       has_topleft = FALSE,                       nlines_header = 1,                       nrow_header = 1) } cat(toString(matrix_form.data.frame(mtcars)))                        mpg    cyl   disp    hp    drat    wt     qsec    vs   am   gear   carb ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî Mazda RX4             21     6     160     110   3.9    2.62    16.46   0    1    4      4 Mazda RX4 Wag         21     6     160     110   3.9    2.875   17.02   0    1    4      4 Datsun 710            22.8   4     108     93    3.85   2.32    18.61   1    1    4      1 Hornet 4 Drive        21.4   6     258     110   3.08   3.215   19.44   1    0    3      1 Hornet Sportabout     18.7   8     360     175   3.15   3.44    17.02   0    0    3      2 Valiant               18.1   6     225     105   2.76   3.46    20.22   1    0    3      1 Duster 360            14.3   8     360     245   3.21   3.57    15.84   0    0    3      4 Merc 240D             24.4   4     146.7   62    3.69   3.19    20      1    0    4      2 Merc 230              22.8   4     140.8   95    3.92   3.15    22.9    1    0    4      2 Merc 280              19.2   6     167.6   123   3.92   3.44    18.3    1    0    4      4 Merc 280C             17.8   6     167.6   123   3.92   3.44    18.9    1    0    4      4 Merc 450SE            16.4   8     275.8   180   3.07   4.07    17.4    0    0    3      3 Merc 450SL            17.3   8     275.8   180   3.07   3.73    17.6    0    0    3      3 Merc 450SLC           15.2   8     275.8   180   3.07   3.78    18      0    0    3      3 Cadillac Fleetwood    10.4   8     472     205   2.93   5.25    17.98   0    0    3      4 Lincoln Continental   10.4   8     460     215   3      5.424   17.82   0    0    3      4 Chrysler Imperial     14.7   8     440     230   3.23   5.345   17.42   0    0    3      4 Fiat 128              32.4   4     78.7    66    4.08   2.2     19.47   1    1    4      1 Honda Civic           30.4   4     75.7    52    4.93   1.615   18.52   1    1    4      2 Toyota Corolla        33.9   4     71.1    65    4.22   1.835   19.9    1    1    4      1 Toyota Corona         21.5   4     120.1   97    3.7    2.465   20.01   1    0    3      1 Dodge Challenger      15.5   8     318     150   2.76   3.52    16.87   0    0    3      2 AMC Javelin           15.2   8     304     150   3.15   3.435   17.3    0    0    3      2 Camaro Z28            13.3   8     350     245   3.73   3.84    15.41   0    0    3      4 Pontiac Firebird      19.2   8     400     175   3.08   3.845   17.05   0    0    3      2 Fiat X1-9             27.3   4     79      66    4.08   1.935   18.9    1    1    4      1 Porsche 914-2         26     4     120.3   91    4.43   2.14    16.7    0    1    5      2 Lotus Europa          30.4   4     95.1    113   3.77   1.513   16.9    1    1    5      2 Ford Pantera L        15.8   8     351     264   4.22   3.17    14.5    0    1    5      4 Ferrari Dino          19.7   6     145     175   3.62   2.77    15.5    0    1    5      6 Maserati Bora         15     8     301     335   3.54   3.57    14.6    0    1    5      8 Volvo 142E            21.4   4     121     109   4.11   2.78    18.6    1    1    4      2"},{"path":"https://insightsengineering.github.io/formatters/main/reference/DM.html","id":null,"dir":"Reference","previous_headings":"","what":"DM data ‚Äî DM","title":"DM data ‚Äî DM","text":"DM data","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/DM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DM data ‚Äî DM","text":"","code":"DM"},{"path":"https://insightsengineering.github.io/formatters/main/reference/DM.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DM data ‚Äî DM","text":"rds (data.frame)","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/MatrixPrintForm.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for Matrix Print Form ‚Äî MatrixPrintForm","title":"Constructor for Matrix Print Form ‚Äî MatrixPrintForm","text":"Constructor MatrixPrintForm, intermediate representation ASCII table printing.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/MatrixPrintForm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for Matrix Print Form ‚Äî MatrixPrintForm","text":"","code":"MatrixPrintForm(   strings = NULL,   spans,   aligns,   formats,   row_info,   colpaths = NULL,   line_grouping = seq_len(NROW(strings)),   ref_fnotes = list(),   nlines_header,   nrow_header,   has_topleft = TRUE,   has_rowlabs = has_topleft,   expand_newlines = TRUE,   main_title = \"\",   subtitles = character(),   page_titles = character(),   listing_keycols = NULL,   main_footer = \"\",   prov_footer = character(),   header_section_div = NA_character_,   horizontal_sep = default_hsep(),   col_gap = 3,   table_inset = 0L,   colwidths = NULL,   indent_size = 2,   fontspec = font_spec(),   rep_cols = 0L )"},{"path":"https://insightsengineering.github.io/formatters/main/reference/MatrixPrintForm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for Matrix Print Form ‚Äî MatrixPrintForm","text":"strings (character matrix) matrix formatted, ready--display strings organized positioned rendered. Elements span one column must followed correct number placeholders (typically either empty strings repeats value). spans (numeric matrix) matrix dimension strings giving spanning information element. Must repeated match placeholders strings. aligns (character matrix) matrix dimension strings giving text alignment information element. Must repeated match placeholders strings. Must supported text alignment. See decimal_align allowed values. formats (matrix) matrix dimension strings giving text format information element. Must repeated match placeholders strings. row_info (data.frame) data frame row-information necessary pagination (see basic_pagdf() details). colpaths (list NULL)NULL, list paths leaf column, use horizontal pagination. line_grouping (integer) sequence integers indicating print lines correspond semantic rows object. Typically set manually unless expand_newlines set FALSE. ref_fnotes (list) referential footnote information, applicable. nlines_header (numeric(1)) number lines taken values header (.e. including divider). nrow_header (numeric(1)) number rows corresponding header. has_topleft (flag) corresponding table \"top left information\" treated differently expanding newlines. Ignored expand_newlines FALSE. has_rowlabs (flag) matrices (strings, spans, aligns) contain column corresponds row labels (rather table cell values). Defaults TRUE. expand_newlines (flag) whether matrix form generated expand rows whose values contain newlines multiple 'physical' rows (appear rendered ASCII). Defaults TRUE. main_title (string) main title string. subtitles (character) subtitles, character vector. page_titles (character) page-specific titles, character vector. listing_keycols (character). matrix form listing, contains key columns character vector. main_footer (character) main footer, character vector. prov_footer (character) provenance footer information, character vector. header_section_div (string) divider used header body sections. horizontal_sep (string) horizontal separator used printing divisors header table body different footers. col_gap (numeric(1)) space (characters) columns. table_inset (numeric(1)) table inset. See table_inset(). colwidths (numeric NULL) column rendering widths. non-NULL, must length equal ncol(strings). indent_size (numeric(1)) number spaces used per level indent (supported relevant method). Defaults 2. fontspec (font_spec) font_spec object specifying font information use calculating string widths heights, returned font_spec(). rep_cols (numeric(1)) number columns repeated context horizontal pagination.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/MatrixPrintForm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for Matrix Print Form ‚Äî MatrixPrintForm","text":"object class MatrixPrintForm. Currently implemented S3 class inheriting list following elements: strings see argument. spans see argument. aligns see argument. display logical matrix dimension strings specifies whether element strings displayed table rendered. formats see argument. row_info see argument. line_grouping see argument. ref_footnotes see argument. main_title see argument. subtitles see argument. page_titles see argument. main_footer see argument. prov_footer see argument. header_section_div see argument. horizontal_sep see argument. col_gap see argument. table_inset see argument. well following attributes: nlines_header see argument. nrow_header see argument. ncols number columns table, including row names/row labels","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/MatrixPrintForm.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Constructor for Matrix Print Form ‚Äî MatrixPrintForm","text":"bare constructor MatrixPrintForm generally called matrix_form custom methods, almost never code.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/MatrixPrintForm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructor for Matrix Print Form ‚Äî MatrixPrintForm","text":"","code":"basic_matrix_form(iris) # calls matrix_form which calls this constructor #> $strings #>        rnms  Sepal.Length   Sepal.Width   Petal.Length   Petal.Width   #>   [1,] \"\"    \"Sepal.Length\" \"Sepal.Width\" \"Petal.Length\" \"Petal.Width\" #>   [2,] \"1\"   \"5.1\"          \"3.5\"         \"1.4\"          \"0.2\"         #>   [3,] \"2\"   \"4.9\"          \"3\"           \"1.4\"          \"0.2\"         #>   [4,] \"3\"   \"4.7\"          \"3.2\"         \"1.3\"          \"0.2\"         #>   [5,] \"4\"   \"4.6\"          \"3.1\"         \"1.5\"          \"0.2\"         #>   [6,] \"5\"   \"5\"            \"3.6\"         \"1.4\"          \"0.2\"         #>   [7,] \"6\"   \"5.4\"          \"3.9\"         \"1.7\"          \"0.4\"         #>   [8,] \"7\"   \"4.6\"          \"3.4\"         \"1.4\"          \"0.3\"         #>   [9,] \"8\"   \"5\"            \"3.4\"         \"1.5\"          \"0.2\"         #>  [10,] \"9\"   \"4.4\"          \"2.9\"         \"1.4\"          \"0.2\"         #>  [11,] \"10\"  \"4.9\"          \"3.1\"         \"1.5\"          \"0.1\"         #>  [12,] \"11\"  \"5.4\"          \"3.7\"         \"1.5\"          \"0.2\"         #>  [13,] \"12\"  \"4.8\"          \"3.4\"         \"1.6\"          \"0.2\"         #>  [14,] \"13\"  \"4.8\"          \"3\"           \"1.4\"          \"0.1\"         #>  [15,] \"14\"  \"4.3\"          \"3\"           \"1.1\"          \"0.1\"         #>  [16,] \"15\"  \"5.8\"          \"4\"           \"1.2\"          \"0.2\"         #>  [17,] \"16\"  \"5.7\"          \"4.4\"         \"1.5\"          \"0.4\"         #>  [18,] \"17\"  \"5.4\"          \"3.9\"         \"1.3\"          \"0.4\"         #>  [19,] \"18\"  \"5.1\"          \"3.5\"         \"1.4\"          \"0.3\"         #>  [20,] \"19\"  \"5.7\"          \"3.8\"         \"1.7\"          \"0.3\"         #>  [21,] \"20\"  \"5.1\"          \"3.8\"         \"1.5\"          \"0.3\"         #>  [22,] \"21\"  \"5.4\"          \"3.4\"         \"1.7\"          \"0.2\"         #>  [23,] \"22\"  \"5.1\"          \"3.7\"         \"1.5\"          \"0.4\"         #>  [24,] \"23\"  \"4.6\"          \"3.6\"         \"1\"            \"0.2\"         #>  [25,] \"24\"  \"5.1\"          \"3.3\"         \"1.7\"          \"0.5\"         #>  [26,] \"25\"  \"4.8\"          \"3.4\"         \"1.9\"          \"0.2\"         #>  [27,] \"26\"  \"5\"            \"3\"           \"1.6\"          \"0.2\"         #>  [28,] \"27\"  \"5\"            \"3.4\"         \"1.6\"          \"0.4\"         #>  [29,] \"28\"  \"5.2\"          \"3.5\"         \"1.5\"          \"0.2\"         #>  [30,] \"29\"  \"5.2\"          \"3.4\"         \"1.4\"          \"0.2\"         #>  [31,] \"30\"  \"4.7\"          \"3.2\"         \"1.6\"          \"0.2\"         #>  [32,] \"31\"  \"4.8\"          \"3.1\"         \"1.6\"          \"0.2\"         #>  [33,] \"32\"  \"5.4\"          \"3.4\"         \"1.5\"          \"0.4\"         #>  [34,] \"33\"  \"5.2\"          \"4.1\"         \"1.5\"          \"0.1\"         #>  [35,] \"34\"  \"5.5\"          \"4.2\"         \"1.4\"          \"0.2\"         #>  [36,] \"35\"  \"4.9\"          \"3.1\"         \"1.5\"          \"0.2\"         #>  [37,] \"36\"  \"5\"            \"3.2\"         \"1.2\"          \"0.2\"         #>  [38,] \"37\"  \"5.5\"          \"3.5\"         \"1.3\"          \"0.2\"         #>  [39,] \"38\"  \"4.9\"          \"3.6\"         \"1.4\"          \"0.1\"         #>  [40,] \"39\"  \"4.4\"          \"3\"           \"1.3\"          \"0.2\"         #>  [41,] \"40\"  \"5.1\"          \"3.4\"         \"1.5\"          \"0.2\"         #>  [42,] \"41\"  \"5\"            \"3.5\"         \"1.3\"          \"0.3\"         #>  [43,] \"42\"  \"4.5\"          \"2.3\"         \"1.3\"          \"0.3\"         #>  [44,] \"43\"  \"4.4\"          \"3.2\"         \"1.3\"          \"0.2\"         #>  [45,] \"44\"  \"5\"            \"3.5\"         \"1.6\"          \"0.6\"         #>  [46,] \"45\"  \"5.1\"          \"3.8\"         \"1.9\"          \"0.4\"         #>  [47,] \"46\"  \"4.8\"          \"3\"           \"1.4\"          \"0.3\"         #>  [48,] \"47\"  \"5.1\"          \"3.8\"         \"1.6\"          \"0.2\"         #>  [49,] \"48\"  \"4.6\"          \"3.2\"         \"1.4\"          \"0.2\"         #>  [50,] \"49\"  \"5.3\"          \"3.7\"         \"1.5\"          \"0.2\"         #>  [51,] \"50\"  \"5\"            \"3.3\"         \"1.4\"          \"0.2\"         #>  [52,] \"51\"  \"7\"            \"3.2\"         \"4.7\"          \"1.4\"         #>  [53,] \"52\"  \"6.4\"          \"3.2\"         \"4.5\"          \"1.5\"         #>  [54,] \"53\"  \"6.9\"          \"3.1\"         \"4.9\"          \"1.5\"         #>  [55,] \"54\"  \"5.5\"          \"2.3\"         \"4\"            \"1.3\"         #>  [56,] \"55\"  \"6.5\"          \"2.8\"         \"4.6\"          \"1.5\"         #>  [57,] \"56\"  \"5.7\"          \"2.8\"         \"4.5\"          \"1.3\"         #>  [58,] \"57\"  \"6.3\"          \"3.3\"         \"4.7\"          \"1.6\"         #>  [59,] \"58\"  \"4.9\"          \"2.4\"         \"3.3\"          \"1\"           #>  [60,] \"59\"  \"6.6\"          \"2.9\"         \"4.6\"          \"1.3\"         #>  [61,] \"60\"  \"5.2\"          \"2.7\"         \"3.9\"          \"1.4\"         #>  [62,] \"61\"  \"5\"            \"2\"           \"3.5\"          \"1\"           #>  [63,] \"62\"  \"5.9\"          \"3\"           \"4.2\"          \"1.5\"         #>  [64,] \"63\"  \"6\"            \"2.2\"         \"4\"            \"1\"           #>  [65,] \"64\"  \"6.1\"          \"2.9\"         \"4.7\"          \"1.4\"         #>  [66,] \"65\"  \"5.6\"          \"2.9\"         \"3.6\"          \"1.3\"         #>  [67,] \"66\"  \"6.7\"          \"3.1\"         \"4.4\"          \"1.4\"         #>  [68,] \"67\"  \"5.6\"          \"3\"           \"4.5\"          \"1.5\"         #>  [69,] \"68\"  \"5.8\"          \"2.7\"         \"4.1\"          \"1\"           #>  [70,] \"69\"  \"6.2\"          \"2.2\"         \"4.5\"          \"1.5\"         #>  [71,] \"70\"  \"5.6\"          \"2.5\"         \"3.9\"          \"1.1\"         #>  [72,] \"71\"  \"5.9\"          \"3.2\"         \"4.8\"          \"1.8\"         #>  [73,] \"72\"  \"6.1\"          \"2.8\"         \"4\"            \"1.3\"         #>  [74,] \"73\"  \"6.3\"          \"2.5\"         \"4.9\"          \"1.5\"         #>  [75,] \"74\"  \"6.1\"          \"2.8\"         \"4.7\"          \"1.2\"         #>  [76,] \"75\"  \"6.4\"          \"2.9\"         \"4.3\"          \"1.3\"         #>  [77,] \"76\"  \"6.6\"          \"3\"           \"4.4\"          \"1.4\"         #>  [78,] \"77\"  \"6.8\"          \"2.8\"         \"4.8\"          \"1.4\"         #>  [79,] \"78\"  \"6.7\"          \"3\"           \"5\"            \"1.7\"         #>  [80,] \"79\"  \"6\"            \"2.9\"         \"4.5\"          \"1.5\"         #>  [81,] \"80\"  \"5.7\"          \"2.6\"         \"3.5\"          \"1\"           #>  [82,] \"81\"  \"5.5\"          \"2.4\"         \"3.8\"          \"1.1\"         #>  [83,] \"82\"  \"5.5\"          \"2.4\"         \"3.7\"          \"1\"           #>  [84,] \"83\"  \"5.8\"          \"2.7\"         \"3.9\"          \"1.2\"         #>  [85,] \"84\"  \"6\"            \"2.7\"         \"5.1\"          \"1.6\"         #>  [86,] \"85\"  \"5.4\"          \"3\"           \"4.5\"          \"1.5\"         #>  [87,] \"86\"  \"6\"            \"3.4\"         \"4.5\"          \"1.6\"         #>  [88,] \"87\"  \"6.7\"          \"3.1\"         \"4.7\"          \"1.5\"         #>  [89,] \"88\"  \"6.3\"          \"2.3\"         \"4.4\"          \"1.3\"         #>  [90,] \"89\"  \"5.6\"          \"3\"           \"4.1\"          \"1.3\"         #>  [91,] \"90\"  \"5.5\"          \"2.5\"         \"4\"            \"1.3\"         #>  [92,] \"91\"  \"5.5\"          \"2.6\"         \"4.4\"          \"1.2\"         #>  [93,] \"92\"  \"6.1\"          \"3\"           \"4.6\"          \"1.4\"         #>  [94,] \"93\"  \"5.8\"          \"2.6\"         \"4\"            \"1.2\"         #>  [95,] \"94\"  \"5\"            \"2.3\"         \"3.3\"          \"1\"           #>  [96,] \"95\"  \"5.6\"          \"2.7\"         \"4.2\"          \"1.3\"         #>  [97,] \"96\"  \"5.7\"          \"3\"           \"4.2\"          \"1.2\"         #>  [98,] \"97\"  \"5.7\"          \"2.9\"         \"4.2\"          \"1.3\"         #>  [99,] \"98\"  \"6.2\"          \"2.9\"         \"4.3\"          \"1.3\"         #> [100,] \"99\"  \"5.1\"          \"2.5\"         \"3\"            \"1.1\"         #> [101,] \"100\" \"5.7\"          \"2.8\"         \"4.1\"          \"1.3\"         #> [102,] \"101\" \"6.3\"          \"3.3\"         \"6\"            \"2.5\"         #> [103,] \"102\" \"5.8\"          \"2.7\"         \"5.1\"          \"1.9\"         #> [104,] \"103\" \"7.1\"          \"3\"           \"5.9\"          \"2.1\"         #> [105,] \"104\" \"6.3\"          \"2.9\"         \"5.6\"          \"1.8\"         #> [106,] \"105\" \"6.5\"          \"3\"           \"5.8\"          \"2.2\"         #> [107,] \"106\" \"7.6\"          \"3\"           \"6.6\"          \"2.1\"         #> [108,] \"107\" \"4.9\"          \"2.5\"         \"4.5\"          \"1.7\"         #> [109,] \"108\" \"7.3\"          \"2.9\"         \"6.3\"          \"1.8\"         #> [110,] \"109\" \"6.7\"          \"2.5\"         \"5.8\"          \"1.8\"         #> [111,] \"110\" \"7.2\"          \"3.6\"         \"6.1\"          \"2.5\"         #> [112,] \"111\" \"6.5\"          \"3.2\"         \"5.1\"          \"2\"           #> [113,] \"112\" \"6.4\"          \"2.7\"         \"5.3\"          \"1.9\"         #> [114,] \"113\" \"6.8\"          \"3\"           \"5.5\"          \"2.1\"         #> [115,] \"114\" \"5.7\"          \"2.5\"         \"5\"            \"2\"           #> [116,] \"115\" \"5.8\"          \"2.8\"         \"5.1\"          \"2.4\"         #> [117,] \"116\" \"6.4\"          \"3.2\"         \"5.3\"          \"2.3\"         #> [118,] \"117\" \"6.5\"          \"3\"           \"5.5\"          \"1.8\"         #> [119,] \"118\" \"7.7\"          \"3.8\"         \"6.7\"          \"2.2\"         #> [120,] \"119\" \"7.7\"          \"2.6\"         \"6.9\"          \"2.3\"         #> [121,] \"120\" \"6\"            \"2.2\"         \"5\"            \"1.5\"         #> [122,] \"121\" \"6.9\"          \"3.2\"         \"5.7\"          \"2.3\"         #> [123,] \"122\" \"5.6\"          \"2.8\"         \"4.9\"          \"2\"           #> [124,] \"123\" \"7.7\"          \"2.8\"         \"6.7\"          \"2\"           #> [125,] \"124\" \"6.3\"          \"2.7\"         \"4.9\"          \"1.8\"         #> [126,] \"125\" \"6.7\"          \"3.3\"         \"5.7\"          \"2.1\"         #> [127,] \"126\" \"7.2\"          \"3.2\"         \"6\"            \"1.8\"         #> [128,] \"127\" \"6.2\"          \"2.8\"         \"4.8\"          \"1.8\"         #> [129,] \"128\" \"6.1\"          \"3\"           \"4.9\"          \"1.8\"         #> [130,] \"129\" \"6.4\"          \"2.8\"         \"5.6\"          \"2.1\"         #> [131,] \"130\" \"7.2\"          \"3\"           \"5.8\"          \"1.6\"         #> [132,] \"131\" \"7.4\"          \"2.8\"         \"6.1\"          \"1.9\"         #> [133,] \"132\" \"7.9\"          \"3.8\"         \"6.4\"          \"2\"           #> [134,] \"133\" \"6.4\"          \"2.8\"         \"5.6\"          \"2.2\"         #> [135,] \"134\" \"6.3\"          \"2.8\"         \"5.1\"          \"1.5\"         #> [136,] \"135\" \"6.1\"          \"2.6\"         \"5.6\"          \"1.4\"         #> [137,] \"136\" \"7.7\"          \"3\"           \"6.1\"          \"2.3\"         #> [138,] \"137\" \"6.3\"          \"3.4\"         \"5.6\"          \"2.4\"         #> [139,] \"138\" \"6.4\"          \"3.1\"         \"5.5\"          \"1.8\"         #> [140,] \"139\" \"6\"            \"3\"           \"4.8\"          \"1.8\"         #> [141,] \"140\" \"6.9\"          \"3.1\"         \"5.4\"          \"2.1\"         #> [142,] \"141\" \"6.7\"          \"3.1\"         \"5.6\"          \"2.4\"         #> [143,] \"142\" \"6.9\"          \"3.1\"         \"5.1\"          \"2.3\"         #> [144,] \"143\" \"5.8\"          \"2.7\"         \"5.1\"          \"1.9\"         #> [145,] \"144\" \"6.8\"          \"3.2\"         \"5.9\"          \"2.3\"         #> [146,] \"145\" \"6.7\"          \"3.3\"         \"5.7\"          \"2.5\"         #> [147,] \"146\" \"6.7\"          \"3\"           \"5.2\"          \"2.3\"         #> [148,] \"147\" \"6.3\"          \"2.5\"         \"5\"            \"1.9\"         #> [149,] \"148\" \"6.5\"          \"3\"           \"5.2\"          \"2\"           #> [150,] \"149\" \"6.2\"          \"3.4\"         \"5.4\"          \"2.3\"         #> [151,] \"150\" \"5.9\"          \"3\"           \"5.1\"          \"1.8\"         #>        Species      #>   [1,] \"Species\"    #>   [2,] \"setosa\"     #>   [3,] \"setosa\"     #>   [4,] \"setosa\"     #>   [5,] \"setosa\"     #>   [6,] \"setosa\"     #>   [7,] \"setosa\"     #>   [8,] \"setosa\"     #>   [9,] \"setosa\"     #>  [10,] \"setosa\"     #>  [11,] \"setosa\"     #>  [12,] \"setosa\"     #>  [13,] \"setosa\"     #>  [14,] \"setosa\"     #>  [15,] \"setosa\"     #>  [16,] \"setosa\"     #>  [17,] \"setosa\"     #>  [18,] \"setosa\"     #>  [19,] \"setosa\"     #>  [20,] \"setosa\"     #>  [21,] \"setosa\"     #>  [22,] \"setosa\"     #>  [23,] \"setosa\"     #>  [24,] \"setosa\"     #>  [25,] \"setosa\"     #>  [26,] \"setosa\"     #>  [27,] \"setosa\"     #>  [28,] \"setosa\"     #>  [29,] \"setosa\"     #>  [30,] \"setosa\"     #>  [31,] \"setosa\"     #>  [32,] \"setosa\"     #>  [33,] \"setosa\"     #>  [34,] \"setosa\"     #>  [35,] \"setosa\"     #>  [36,] \"setosa\"     #>  [37,] \"setosa\"     #>  [38,] \"setosa\"     #>  [39,] \"setosa\"     #>  [40,] \"setosa\"     #>  [41,] \"setosa\"     #>  [42,] \"setosa\"     #>  [43,] \"setosa\"     #>  [44,] \"setosa\"     #>  [45,] \"setosa\"     #>  [46,] \"setosa\"     #>  [47,] \"setosa\"     #>  [48,] \"setosa\"     #>  [49,] \"setosa\"     #>  [50,] \"setosa\"     #>  [51,] \"setosa\"     #>  [52,] \"versicolor\" #>  [53,] \"versicolor\" #>  [54,] \"versicolor\" #>  [55,] \"versicolor\" #>  [56,] \"versicolor\" #>  [57,] \"versicolor\" #>  [58,] \"versicolor\" #>  [59,] \"versicolor\" #>  [60,] \"versicolor\" #>  [61,] \"versicolor\" #>  [62,] \"versicolor\" #>  [63,] \"versicolor\" #>  [64,] \"versicolor\" #>  [65,] \"versicolor\" #>  [66,] \"versicolor\" #>  [67,] \"versicolor\" #>  [68,] \"versicolor\" #>  [69,] \"versicolor\" #>  [70,] \"versicolor\" #>  [71,] \"versicolor\" #>  [72,] \"versicolor\" #>  [73,] \"versicolor\" #>  [74,] \"versicolor\" #>  [75,] \"versicolor\" #>  [76,] \"versicolor\" #>  [77,] \"versicolor\" #>  [78,] \"versicolor\" #>  [79,] \"versicolor\" #>  [80,] \"versicolor\" #>  [81,] \"versicolor\" #>  [82,] \"versicolor\" #>  [83,] \"versicolor\" #>  [84,] \"versicolor\" #>  [85,] \"versicolor\" #>  [86,] \"versicolor\" #>  [87,] \"versicolor\" #>  [88,] \"versicolor\" #>  [89,] \"versicolor\" #>  [90,] \"versicolor\" #>  [91,] \"versicolor\" #>  [92,] \"versicolor\" #>  [93,] \"versicolor\" #>  [94,] \"versicolor\" #>  [95,] \"versicolor\" #>  [96,] \"versicolor\" #>  [97,] \"versicolor\" #>  [98,] \"versicolor\" #>  [99,] \"versicolor\" #> [100,] \"versicolor\" #> [101,] \"versicolor\" #> [102,] \"virginica\"  #> [103,] \"virginica\"  #> [104,] \"virginica\"  #> [105,] \"virginica\"  #> [106,] \"virginica\"  #> [107,] \"virginica\"  #> [108,] \"virginica\"  #> [109,] \"virginica\"  #> [110,] \"virginica\"  #> [111,] \"virginica\"  #> [112,] \"virginica\"  #> [113,] \"virginica\"  #> [114,] \"virginica\"  #> [115,] \"virginica\"  #> [116,] \"virginica\"  #> [117,] \"virginica\"  #> [118,] \"virginica\"  #> [119,] \"virginica\"  #> [120,] \"virginica\"  #> [121,] \"virginica\"  #> [122,] \"virginica\"  #> [123,] \"virginica\"  #> [124,] \"virginica\"  #> [125,] \"virginica\"  #> [126,] \"virginica\"  #> [127,] \"virginica\"  #> [128,] \"virginica\"  #> [129,] \"virginica\"  #> [130,] \"virginica\"  #> [131,] \"virginica\"  #> [132,] \"virginica\"  #> [133,] \"virginica\"  #> [134,] \"virginica\"  #> [135,] \"virginica\"  #> [136,] \"virginica\"  #> [137,] \"virginica\"  #> [138,] \"virginica\"  #> [139,] \"virginica\"  #> [140,] \"virginica\"  #> [141,] \"virginica\"  #> [142,] \"virginica\"  #> [143,] \"virginica\"  #> [144,] \"virginica\"  #> [145,] \"virginica\"  #> [146,] \"virginica\"  #> [147,] \"virginica\"  #> [148,] \"virginica\"  #> [149,] \"virginica\"  #> [150,] \"virginica\"  #> [151,] \"virginica\"  #>  #> $spans #>        [,1] [,2] [,3] [,4] [,5] [,6] #>   [1,]    1    1    1    1    1    1 #>   [2,]    1    1    1    1    1    1 #>   [3,]    1    1    1    1    1    1 #>   [4,]    1    1    1    1    1    1 #>   [5,]    1    1    1    1    1    1 #>   [6,]    1    1    1    1    1    1 #>   [7,]    1    1    1    1    1    1 #>   [8,]    1    1    1    1    1    1 #>   [9,]    1    1    1    1    1    1 #>  [10,]    1    1    1    1    1    1 #>  [11,]    1    1    1    1    1    1 #>  [12,]    1    1    1    1    1    1 #>  [13,]    1    1    1    1    1    1 #>  [14,]    1    1    1    1    1    1 #>  [15,]    1    1    1    1    1    1 #>  [16,]    1    1    1    1    1    1 #>  [17,]    1    1    1    1    1    1 #>  [18,]    1    1    1    1    1    1 #>  [19,]    1    1    1    1    1    1 #>  [20,]    1    1    1    1    1    1 #>  [21,]    1    1    1    1    1    1 #>  [22,]    1    1    1    1    1    1 #>  [23,]    1    1    1    1    1    1 #>  [24,]    1    1    1    1    1    1 #>  [25,]    1    1    1    1    1    1 #>  [26,]    1    1    1    1    1    1 #>  [27,]    1    1    1    1    1    1 #>  [28,]    1    1    1    1    1    1 #>  [29,]    1    1    1    1    1    1 #>  [30,]    1    1    1    1    1    1 #>  [31,]    1    1    1    1    1    1 #>  [32,]    1    1    1    1    1    1 #>  [33,]    1    1    1    1    1    1 #>  [34,]    1    1    1    1    1    1 #>  [35,]    1    1    1    1    1    1 #>  [36,]    1    1    1    1    1    1 #>  [37,]    1    1    1    1    1    1 #>  [38,]    1    1    1    1    1    1 #>  [39,]    1    1    1    1    1    1 #>  [40,]    1    1    1    1    1    1 #>  [41,]    1    1    1    1    1    1 #>  [42,]    1    1    1    1    1    1 #>  [43,]    1    1    1    1    1    1 #>  [44,]    1    1    1    1    1    1 #>  [45,]    1    1    1    1    1    1 #>  [46,]    1    1    1    1    1    1 #>  [47,]    1    1    1    1    1    1 #>  [48,]    1    1    1    1    1    1 #>  [49,]    1    1    1    1    1    1 #>  [50,]    1    1    1    1    1    1 #>  [51,]    1    1    1    1    1    1 #>  [52,]    1    1    1    1    1    1 #>  [53,]    1    1    1    1    1    1 #>  [54,]    1    1    1    1    1    1 #>  [55,]    1    1    1    1    1    1 #>  [56,]    1    1    1    1    1    1 #>  [57,]    1    1    1    1    1    1 #>  [58,]    1    1    1    1    1    1 #>  [59,]    1    1    1    1    1    1 #>  [60,]    1    1    1    1    1    1 #>  [61,]    1    1    1    1    1    1 #>  [62,]    1    1    1    1    1    1 #>  [63,]    1    1    1    1    1    1 #>  [64,]    1    1    1    1    1    1 #>  [65,]    1    1    1    1    1    1 #>  [66,]    1    1    1    1    1    1 #>  [67,]    1    1    1    1    1    1 #>  [68,]    1    1    1    1    1    1 #>  [69,]    1    1    1    1    1    1 #>  [70,]    1    1    1    1    1    1 #>  [71,]    1    1    1    1    1    1 #>  [72,]    1    1    1    1    1    1 #>  [73,]    1    1    1    1    1    1 #>  [74,]    1    1    1    1    1    1 #>  [75,]    1    1    1    1    1    1 #>  [76,]    1    1    1    1    1    1 #>  [77,]    1    1    1    1    1    1 #>  [78,]    1    1    1    1    1    1 #>  [79,]    1    1    1    1    1    1 #>  [80,]    1    1    1    1    1    1 #>  [81,]    1    1    1    1    1    1 #>  [82,]    1    1    1    1    1    1 #>  [83,]    1    1    1    1    1    1 #>  [84,]    1    1    1    1    1    1 #>  [85,]    1    1    1    1    1    1 #>  [86,]    1    1    1    1    1    1 #>  [87,]    1    1    1    1    1    1 #>  [88,]    1    1    1    1    1    1 #>  [89,]    1    1    1    1    1    1 #>  [90,]    1    1    1    1    1    1 #>  [91,]    1    1    1    1    1    1 #>  [92,]    1    1    1    1    1    1 #>  [93,]    1    1    1    1    1    1 #>  [94,]    1    1    1    1    1    1 #>  [95,]    1    1    1    1    1    1 #>  [96,]    1    1    1    1    1    1 #>  [97,]    1    1    1    1    1    1 #>  [98,]    1    1    1    1    1    1 #>  [99,]    1    1    1    1    1    1 #> [100,]    1    1    1    1    1    1 #> [101,]    1    1    1    1    1    1 #> [102,]    1    1    1    1    1    1 #> [103,]    1    1    1    1    1    1 #> [104,]    1    1    1    1    1    1 #> [105,]    1    1    1    1    1    1 #> [106,]    1    1    1    1    1    1 #> [107,]    1    1    1    1    1    1 #> [108,]    1    1    1    1    1    1 #> [109,]    1    1    1    1    1    1 #> [110,]    1    1    1    1    1    1 #> [111,]    1    1    1    1    1    1 #> [112,]    1    1    1    1    1    1 #> [113,]    1    1    1    1    1    1 #> [114,]    1    1    1    1    1    1 #> [115,]    1    1    1    1    1    1 #> [116,]    1    1    1    1    1    1 #> [117,]    1    1    1    1    1    1 #> [118,]    1    1    1    1    1    1 #> [119,]    1    1    1    1    1    1 #> [120,]    1    1    1    1    1    1 #> [121,]    1    1    1    1    1    1 #> [122,]    1    1    1    1    1    1 #> [123,]    1    1    1    1    1    1 #> [124,]    1    1    1    1    1    1 #> [125,]    1    1    1    1    1    1 #> [126,]    1    1    1    1    1    1 #> [127,]    1    1    1    1    1    1 #> [128,]    1    1    1    1    1    1 #> [129,]    1    1    1    1    1    1 #> [130,]    1    1    1    1    1    1 #> [131,]    1    1    1    1    1    1 #> [132,]    1    1    1    1    1    1 #> [133,]    1    1    1    1    1    1 #> [134,]    1    1    1    1    1    1 #> [135,]    1    1    1    1    1    1 #> [136,]    1    1    1    1    1    1 #> [137,]    1    1    1    1    1    1 #> [138,]    1    1    1    1    1    1 #> [139,]    1    1    1    1    1    1 #> [140,]    1    1    1    1    1    1 #> [141,]    1    1    1    1    1    1 #> [142,]    1    1    1    1    1    1 #> [143,]    1    1    1    1    1    1 #> [144,]    1    1    1    1    1    1 #> [145,]    1    1    1    1    1    1 #> [146,]    1    1    1    1    1    1 #> [147,]    1    1    1    1    1    1 #> [148,]    1    1    1    1    1    1 #> [149,]    1    1    1    1    1    1 #> [150,]    1    1    1    1    1    1 #> [151,]    1    1    1    1    1    1 #>  #> $aligns #>        [,1]   [,2]     [,3]     [,4]     [,5]     [,6]     #>   [1,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>   [2,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>   [3,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>   [4,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>   [5,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>   [6,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>   [7,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>   [8,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>   [9,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [10,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [11,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [12,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [13,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [14,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [15,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [16,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [17,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [18,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [19,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [20,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [21,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [22,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [23,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [24,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [25,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [26,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [27,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [28,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [29,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [30,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [31,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [32,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [33,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [34,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [35,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [36,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [37,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [38,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [39,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [40,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [41,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [42,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [43,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [44,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [45,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [46,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [47,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [48,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [49,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [50,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [51,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [52,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [53,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [54,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [55,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [56,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [57,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [58,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [59,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [60,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [61,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [62,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [63,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [64,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [65,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [66,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [67,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [68,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [69,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [70,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [71,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [72,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [73,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [74,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [75,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [76,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [77,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [78,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [79,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [80,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [81,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [82,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [83,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [84,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [85,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [86,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [87,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [88,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [89,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [90,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [91,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [92,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [93,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [94,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [95,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [96,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [97,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [98,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [99,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [100,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [101,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [102,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [103,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [104,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [105,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [106,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [107,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [108,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [109,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [110,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [111,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [112,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [113,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [114,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [115,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [116,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [117,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [118,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [119,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [120,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [121,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [122,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [123,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [124,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [125,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [126,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [127,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [128,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [129,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [130,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [131,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [132,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [133,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [134,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [135,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [136,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [137,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [138,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [139,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [140,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [141,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [142,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [143,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [144,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [145,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [146,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [147,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [148,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [149,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [150,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [151,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  #> $display #>        [,1] [,2] [,3] [,4] [,5] [,6] #>   [1,] TRUE TRUE TRUE TRUE TRUE TRUE #>   [2,] TRUE TRUE TRUE TRUE TRUE TRUE #>   [3,] TRUE TRUE TRUE TRUE TRUE TRUE #>   [4,] TRUE TRUE TRUE TRUE TRUE TRUE #>   [5,] TRUE TRUE TRUE TRUE TRUE TRUE #>   [6,] TRUE TRUE TRUE TRUE TRUE TRUE #>   [7,] TRUE TRUE TRUE TRUE TRUE TRUE #>   [8,] TRUE TRUE TRUE TRUE TRUE TRUE #>   [9,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [10,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [11,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [12,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [13,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [14,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [15,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [16,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [17,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [18,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [19,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [20,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [21,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [22,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [23,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [24,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [25,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [26,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [27,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [28,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [29,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [30,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [31,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [32,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [33,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [34,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [35,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [36,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [37,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [38,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [39,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [40,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [41,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [42,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [43,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [44,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [45,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [46,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [47,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [48,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [49,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [50,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [51,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [52,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [53,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [54,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [55,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [56,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [57,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [58,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [59,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [60,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [61,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [62,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [63,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [64,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [65,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [66,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [67,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [68,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [69,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [70,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [71,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [72,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [73,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [74,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [75,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [76,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [77,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [78,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [79,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [80,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [81,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [82,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [83,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [84,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [85,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [86,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [87,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [88,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [89,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [90,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [91,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [92,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [93,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [94,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [95,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [96,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [97,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [98,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [99,] TRUE TRUE TRUE TRUE TRUE TRUE #> [100,] TRUE TRUE TRUE TRUE TRUE TRUE #> [101,] TRUE TRUE TRUE TRUE TRUE TRUE #> [102,] TRUE TRUE TRUE TRUE TRUE TRUE #> [103,] TRUE TRUE TRUE TRUE TRUE TRUE #> [104,] TRUE TRUE TRUE TRUE TRUE TRUE #> [105,] TRUE TRUE TRUE TRUE TRUE TRUE #> [106,] TRUE TRUE TRUE TRUE TRUE TRUE #> [107,] TRUE TRUE TRUE TRUE TRUE TRUE #> [108,] TRUE TRUE TRUE TRUE TRUE TRUE #> [109,] TRUE TRUE TRUE TRUE TRUE TRUE #> [110,] TRUE TRUE TRUE TRUE TRUE TRUE #> [111,] TRUE TRUE TRUE TRUE TRUE TRUE #> [112,] TRUE TRUE TRUE TRUE TRUE TRUE #> [113,] TRUE TRUE TRUE TRUE TRUE TRUE #> [114,] TRUE TRUE TRUE TRUE TRUE TRUE #> [115,] TRUE TRUE TRUE TRUE TRUE TRUE #> [116,] TRUE TRUE TRUE TRUE TRUE TRUE #> [117,] TRUE TRUE TRUE TRUE TRUE TRUE #> [118,] TRUE TRUE TRUE TRUE TRUE TRUE #> [119,] TRUE TRUE TRUE TRUE TRUE TRUE #> [120,] TRUE TRUE TRUE TRUE TRUE TRUE #> [121,] TRUE TRUE TRUE TRUE TRUE TRUE #> [122,] TRUE TRUE TRUE TRUE TRUE TRUE #> [123,] TRUE TRUE TRUE TRUE TRUE TRUE #> [124,] TRUE TRUE TRUE TRUE TRUE TRUE #> [125,] TRUE TRUE TRUE TRUE TRUE TRUE #> [126,] TRUE TRUE TRUE TRUE TRUE TRUE #> [127,] TRUE TRUE TRUE TRUE TRUE TRUE #> [128,] TRUE TRUE TRUE TRUE TRUE TRUE #> [129,] TRUE TRUE TRUE TRUE TRUE TRUE #> [130,] TRUE TRUE TRUE TRUE TRUE TRUE #> [131,] TRUE TRUE TRUE TRUE TRUE TRUE #> [132,] TRUE TRUE TRUE TRUE TRUE TRUE #> [133,] TRUE TRUE TRUE TRUE TRUE TRUE #> [134,] TRUE TRUE TRUE TRUE TRUE TRUE #> [135,] TRUE TRUE TRUE TRUE TRUE TRUE #> [136,] TRUE TRUE TRUE TRUE TRUE TRUE #> [137,] TRUE TRUE TRUE TRUE TRUE TRUE #> [138,] TRUE TRUE TRUE TRUE TRUE TRUE #> [139,] TRUE TRUE TRUE TRUE TRUE TRUE #> [140,] TRUE TRUE TRUE TRUE TRUE TRUE #> [141,] TRUE TRUE TRUE TRUE TRUE TRUE #> [142,] TRUE TRUE TRUE TRUE TRUE TRUE #> [143,] TRUE TRUE TRUE TRUE TRUE TRUE #> [144,] TRUE TRUE TRUE TRUE TRUE TRUE #> [145,] TRUE TRUE TRUE TRUE TRUE TRUE #> [146,] TRUE TRUE TRUE TRUE TRUE TRUE #> [147,] TRUE TRUE TRUE TRUE TRUE TRUE #> [148,] TRUE TRUE TRUE TRUE TRUE TRUE #> [149,] TRUE TRUE TRUE TRUE TRUE TRUE #> [150,] TRUE TRUE TRUE TRUE TRUE TRUE #> [151,] TRUE TRUE TRUE TRUE TRUE TRUE #>  #> $formats #>     rnms Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1                                                                  #> 2                  xx          xx           xx          xx      xx #> 3                  xx          xx           xx          xx      xx #> 4                  xx          xx           xx          xx      xx #> 5                  xx          xx           xx          xx      xx #> 6                  xx          xx           xx          xx      xx #> 7                  xx          xx           xx          xx      xx #> 8                  xx          xx           xx          xx      xx #> 9                  xx          xx           xx          xx      xx #> 10                 xx          xx           xx          xx      xx #> 11                 xx          xx           xx          xx      xx #> 12                 xx          xx           xx          xx      xx #> 13                 xx          xx           xx          xx      xx #> 14                 xx          xx           xx          xx      xx #> 15                 xx          xx           xx          xx      xx #> 16                 xx          xx           xx          xx      xx #> 17                 xx          xx           xx          xx      xx #> 18                 xx          xx           xx          xx      xx #> 19                 xx          xx           xx          xx      xx #> 20                 xx          xx           xx          xx      xx #> 21                 xx          xx           xx          xx      xx #> 22                 xx          xx           xx          xx      xx #> 23                 xx          xx           xx          xx      xx #> 24                 xx          xx           xx          xx      xx #> 25                 xx          xx           xx          xx      xx #> 26                 xx          xx           xx          xx      xx #> 27                 xx          xx           xx          xx      xx #> 28                 xx          xx           xx          xx      xx #> 29                 xx          xx           xx          xx      xx #> 30                 xx          xx           xx          xx      xx #> 31                 xx          xx           xx          xx      xx #> 32                 xx          xx           xx          xx      xx #> 33                 xx          xx           xx          xx      xx #> 34                 xx          xx           xx          xx      xx #> 35                 xx          xx           xx          xx      xx #> 36                 xx          xx           xx          xx      xx #> 37                 xx          xx           xx          xx      xx #> 38                 xx          xx           xx          xx      xx #> 39                 xx          xx           xx          xx      xx #> 40                 xx          xx           xx          xx      xx #> 41                 xx          xx           xx          xx      xx #> 42                 xx          xx           xx          xx      xx #> 43                 xx          xx           xx          xx      xx #> 44                 xx          xx           xx          xx      xx #> 45                 xx          xx           xx          xx      xx #> 46                 xx          xx           xx          xx      xx #> 47                 xx          xx           xx          xx      xx #> 48                 xx          xx           xx          xx      xx #> 49                 xx          xx           xx          xx      xx #> 50                 xx          xx           xx          xx      xx #> 51                 xx          xx           xx          xx      xx #> 52                 xx          xx           xx          xx      xx #> 53                 xx          xx           xx          xx      xx #> 54                 xx          xx           xx          xx      xx #> 55                 xx          xx           xx          xx      xx #> 56                 xx          xx           xx          xx      xx #> 57                 xx          xx           xx          xx      xx #> 58                 xx          xx           xx          xx      xx #> 59                 xx          xx           xx          xx      xx #> 60                 xx          xx           xx          xx      xx #> 61                 xx          xx           xx          xx      xx #> 62                 xx          xx           xx          xx      xx #> 63                 xx          xx           xx          xx      xx #> 64                 xx          xx           xx          xx      xx #> 65                 xx          xx           xx          xx      xx #> 66                 xx          xx           xx          xx      xx #> 67                 xx          xx           xx          xx      xx #> 68                 xx          xx           xx          xx      xx #> 69                 xx          xx           xx          xx      xx #> 70                 xx          xx           xx          xx      xx #> 71                 xx          xx           xx          xx      xx #> 72                 xx          xx           xx          xx      xx #> 73                 xx          xx           xx          xx      xx #> 74                 xx          xx           xx          xx      xx #> 75                 xx          xx           xx          xx      xx #> 76                 xx          xx           xx          xx      xx #> 77                 xx          xx           xx          xx      xx #> 78                 xx          xx           xx          xx      xx #> 79                 xx          xx           xx          xx      xx #> 80                 xx          xx           xx          xx      xx #> 81                 xx          xx           xx          xx      xx #> 82                 xx          xx           xx          xx      xx #> 83                 xx          xx           xx          xx      xx #> 84                 xx          xx           xx          xx      xx #> 85                 xx          xx           xx          xx      xx #> 86                 xx          xx           xx          xx      xx #> 87                 xx          xx           xx          xx      xx #> 88                 xx          xx           xx          xx      xx #> 89                 xx          xx           xx          xx      xx #> 90                 xx          xx           xx          xx      xx #> 91                 xx          xx           xx          xx      xx #> 92                 xx          xx           xx          xx      xx #> 93                 xx          xx           xx          xx      xx #> 94                 xx          xx           xx          xx      xx #> 95                 xx          xx           xx          xx      xx #> 96                 xx          xx           xx          xx      xx #> 97                 xx          xx           xx          xx      xx #> 98                 xx          xx           xx          xx      xx #> 99                 xx          xx           xx          xx      xx #> 100                xx          xx           xx          xx      xx #> 101                xx          xx           xx          xx      xx #> 102                xx          xx           xx          xx      xx #> 103                xx          xx           xx          xx      xx #> 104                xx          xx           xx          xx      xx #> 105                xx          xx           xx          xx      xx #> 106                xx          xx           xx          xx      xx #> 107                xx          xx           xx          xx      xx #> 108                xx          xx           xx          xx      xx #> 109                xx          xx           xx          xx      xx #> 110                xx          xx           xx          xx      xx #> 111                xx          xx           xx          xx      xx #> 112                xx          xx           xx          xx      xx #> 113                xx          xx           xx          xx      xx #> 114                xx          xx           xx          xx      xx #> 115                xx          xx           xx          xx      xx #> 116                xx          xx           xx          xx      xx #> 117                xx          xx           xx          xx      xx #> 118                xx          xx           xx          xx      xx #> 119                xx          xx           xx          xx      xx #> 120                xx          xx           xx          xx      xx #> 121                xx          xx           xx          xx      xx #> 122                xx          xx           xx          xx      xx #> 123                xx          xx           xx          xx      xx #> 124                xx          xx           xx          xx      xx #> 125                xx          xx           xx          xx      xx #> 126                xx          xx           xx          xx      xx #> 127                xx          xx           xx          xx      xx #> 128                xx          xx           xx          xx      xx #> 129                xx          xx           xx          xx      xx #> 130                xx          xx           xx          xx      xx #> 131                xx          xx           xx          xx      xx #> 132                xx          xx           xx          xx      xx #> 133                xx          xx           xx          xx      xx #> 134                xx          xx           xx          xx      xx #> 135                xx          xx           xx          xx      xx #> 136                xx          xx           xx          xx      xx #> 137                xx          xx           xx          xx      xx #> 138                xx          xx           xx          xx      xx #> 139                xx          xx           xx          xx      xx #> 140                xx          xx           xx          xx      xx #> 141                xx          xx           xx          xx      xx #> 142                xx          xx           xx          xx      xx #> 143                xx          xx           xx          xx      xx #> 144                xx          xx           xx          xx      xx #> 145                xx          xx           xx          xx      xx #> 146                xx          xx           xx          xx      xx #> 147                xx          xx           xx          xx      xx #> 148                xx          xx           xx          xx      xx #> 149                xx          xx           xx          xx      xx #> 150                xx          xx           xx          xx      xx #> 151                xx          xx           xx          xx      xx #>  #> $row_info #>     label name abs_rownumber path pos_in_siblings n_siblings self_extent #> 1       1    1             1    1               1        150           1 #> 2       2    2             2    2               2        150           1 #> 3       3    3             3    3               3        150           1 #> 4       4    4             4    4               4        150           1 #> 5       5    5             5    5               5        150           1 #> 6       6    6             6    6               6        150           1 #> 7       7    7             7    7               7        150           1 #> 8       8    8             8    8               8        150           1 #> 9       9    9             9    9               9        150           1 #> 10     10   10            10   10              10        150           1 #> 11     11   11            11   11              11        150           1 #> 12     12   12            12   12              12        150           1 #> 13     13   13            13   13              13        150           1 #> 14     14   14            14   14              14        150           1 #> 15     15   15            15   15              15        150           1 #> 16     16   16            16   16              16        150           1 #> 17     17   17            17   17              17        150           1 #> 18     18   18            18   18              18        150           1 #> 19     19   19            19   19              19        150           1 #> 20     20   20            20   20              20        150           1 #> 21     21   21            21   21              21        150           1 #> 22     22   22            22   22              22        150           1 #> 23     23   23            23   23              23        150           1 #> 24     24   24            24   24              24        150           1 #> 25     25   25            25   25              25        150           1 #> 26     26   26            26   26              26        150           1 #> 27     27   27            27   27              27        150           1 #> 28     28   28            28   28              28        150           1 #> 29     29   29            29   29              29        150           1 #> 30     30   30            30   30              30        150           1 #> 31     31   31            31   31              31        150           1 #> 32     32   32            32   32              32        150           1 #> 33     33   33            33   33              33        150           1 #> 34     34   34            34   34              34        150           1 #> 35     35   35            35   35              35        150           1 #> 36     36   36            36   36              36        150           1 #> 37     37   37            37   37              37        150           1 #> 38     38   38            38   38              38        150           1 #> 39     39   39            39   39              39        150           1 #> 40     40   40            40   40              40        150           1 #> 41     41   41            41   41              41        150           1 #> 42     42   42            42   42              42        150           1 #> 43     43   43            43   43              43        150           1 #> 44     44   44            44   44              44        150           1 #> 45     45   45            45   45              45        150           1 #> 46     46   46            46   46              46        150           1 #> 47     47   47            47   47              47        150           1 #> 48     48   48            48   48              48        150           1 #> 49     49   49            49   49              49        150           1 #> 50     50   50            50   50              50        150           1 #> 51     51   51            51   51              51        150           1 #> 52     52   52            52   52              52        150           1 #> 53     53   53            53   53              53        150           1 #> 54     54   54            54   54              54        150           1 #> 55     55   55            55   55              55        150           1 #> 56     56   56            56   56              56        150           1 #> 57     57   57            57   57              57        150           1 #> 58     58   58            58   58              58        150           1 #> 59     59   59            59   59              59        150           1 #> 60     60   60            60   60              60        150           1 #> 61     61   61            61   61              61        150           1 #> 62     62   62            62   62              62        150           1 #> 63     63   63            63   63              63        150           1 #> 64     64   64            64   64              64        150           1 #> 65     65   65            65   65              65        150           1 #> 66     66   66            66   66              66        150           1 #> 67     67   67            67   67              67        150           1 #> 68     68   68            68   68              68        150           1 #> 69     69   69            69   69              69        150           1 #> 70     70   70            70   70              70        150           1 #> 71     71   71            71   71              71        150           1 #> 72     72   72            72   72              72        150           1 #> 73     73   73            73   73              73        150           1 #> 74     74   74            74   74              74        150           1 #> 75     75   75            75   75              75        150           1 #> 76     76   76            76   76              76        150           1 #> 77     77   77            77   77              77        150           1 #> 78     78   78            78   78              78        150           1 #> 79     79   79            79   79              79        150           1 #> 80     80   80            80   80              80        150           1 #> 81     81   81            81   81              81        150           1 #> 82     82   82            82   82              82        150           1 #> 83     83   83            83   83              83        150           1 #> 84     84   84            84   84              84        150           1 #> 85     85   85            85   85              85        150           1 #> 86     86   86            86   86              86        150           1 #> 87     87   87            87   87              87        150           1 #> 88     88   88            88   88              88        150           1 #> 89     89   89            89   89              89        150           1 #> 90     90   90            90   90              90        150           1 #> 91     91   91            91   91              91        150           1 #> 92     92   92            92   92              92        150           1 #> 93     93   93            93   93              93        150           1 #> 94     94   94            94   94              94        150           1 #> 95     95   95            95   95              95        150           1 #> 96     96   96            96   96              96        150           1 #> 97     97   97            97   97              97        150           1 #> 98     98   98            98   98              98        150           1 #> 99     99   99            99   99              99        150           1 #> 100   100  100           100  100             100        150           1 #> 101   101  101           101  101             101        150           1 #> 102   102  102           102  102             102        150           1 #> 103   103  103           103  103             103        150           1 #> 104   104  104           104  104             104        150           1 #> 105   105  105           105  105             105        150           1 #> 106   106  106           106  106             106        150           1 #> 107   107  107           107  107             107        150           1 #> 108   108  108           108  108             108        150           1 #> 109   109  109           109  109             109        150           1 #> 110   110  110           110  110             110        150           1 #> 111   111  111           111  111             111        150           1 #> 112   112  112           112  112             112        150           1 #> 113   113  113           113  113             113        150           1 #> 114   114  114           114  114             114        150           1 #> 115   115  115           115  115             115        150           1 #> 116   116  116           116  116             116        150           1 #> 117   117  117           117  117             117        150           1 #> 118   118  118           118  118             118        150           1 #> 119   119  119           119  119             119        150           1 #> 120   120  120           120  120             120        150           1 #> 121   121  121           121  121             121        150           1 #> 122   122  122           122  122             122        150           1 #> 123   123  123           123  123             123        150           1 #> 124   124  124           124  124             124        150           1 #> 125   125  125           125  125             125        150           1 #> 126   126  126           126  126             126        150           1 #> 127   127  127           127  127             127        150           1 #> 128   128  128           128  128             128        150           1 #> 129   129  129           129  129             129        150           1 #> 130   130  130           130  130             130        150           1 #> 131   131  131           131  131             131        150           1 #> 132   132  132           132  132             132        150           1 #> 133   133  133           133  133             133        150           1 #> 134   134  134           134  134             134        150           1 #> 135   135  135           135  135             135        150           1 #> 136   136  136           136  136             136        150           1 #> 137   137  137           137  137             137        150           1 #> 138   138  138           138  138             138        150           1 #> 139   139  139           139  139             139        150           1 #> 140   140  140           140  140             140        150           1 #> 141   141  141           141  141             141        150           1 #> 142   142  142           142  142             142        150           1 #> 143   143  143           143  143             143        150           1 #> 144   144  144           144  144             144        150           1 #> 145   145  145           145  145             145        150           1 #> 146   146  146           146  146             146        150           1 #> 147   147  147           147  147             147        150           1 #> 148   148  148           148  148             148        150           1 #> 149   149  149           149  149             149        150           1 #> 150   150  150           150  150             150        150           1 #>     par_extent reprint_inds node_class indent nrowrefs ncellrefs nreflines #> 1            0                 DataRow      0        0         0         0 #> 2            0                 DataRow      0        0         0         0 #> 3            0                 DataRow      0        0         0         0 #> 4            0                 DataRow      0        0         0         0 #> 5            0                 DataRow      0        0         0         0 #> 6            0                 DataRow      0        0         0         0 #> 7            0                 DataRow      0        0         0         0 #> 8            0                 DataRow      0        0         0         0 #> 9            0                 DataRow      0        0         0         0 #> 10           0                 DataRow      0        0         0         0 #> 11           0                 DataRow      0        0         0         0 #> 12           0                 DataRow      0        0         0         0 #> 13           0                 DataRow      0        0         0         0 #> 14           0                 DataRow      0        0         0         0 #> 15           0                 DataRow      0        0         0         0 #> 16           0                 DataRow      0        0         0         0 #> 17           0                 DataRow      0        0         0         0 #> 18           0                 DataRow      0        0         0         0 #> 19           0                 DataRow      0        0         0         0 #> 20           0                 DataRow      0        0         0         0 #> 21           0                 DataRow      0        0         0         0 #> 22           0                 DataRow      0        0         0         0 #> 23           0                 DataRow      0        0         0         0 #> 24           0                 DataRow      0        0         0         0 #> 25           0                 DataRow      0        0         0         0 #> 26           0                 DataRow      0        0         0         0 #> 27           0                 DataRow      0        0         0         0 #> 28           0                 DataRow      0        0         0         0 #> 29           0                 DataRow      0        0         0         0 #> 30           0                 DataRow      0        0         0         0 #> 31           0                 DataRow      0        0         0         0 #> 32           0                 DataRow      0        0         0         0 #> 33           0                 DataRow      0        0         0         0 #> 34           0                 DataRow      0        0         0         0 #> 35           0                 DataRow      0        0         0         0 #> 36           0                 DataRow      0        0         0         0 #> 37           0                 DataRow      0        0         0         0 #> 38           0                 DataRow      0        0         0         0 #> 39           0                 DataRow      0        0         0         0 #> 40           0                 DataRow      0        0         0         0 #> 41           0                 DataRow      0        0         0         0 #> 42           0                 DataRow      0        0         0         0 #> 43           0                 DataRow      0        0         0         0 #> 44           0                 DataRow      0        0         0         0 #> 45           0                 DataRow      0        0         0         0 #> 46           0                 DataRow      0        0         0         0 #> 47           0                 DataRow      0        0         0         0 #> 48           0                 DataRow      0        0         0         0 #> 49           0                 DataRow      0        0         0         0 #> 50           0                 DataRow      0        0         0         0 #> 51           0                 DataRow      0        0         0         0 #> 52           0                 DataRow      0        0         0         0 #> 53           0                 DataRow      0        0         0         0 #> 54           0                 DataRow      0        0         0         0 #> 55           0                 DataRow      0        0         0         0 #> 56           0                 DataRow      0        0         0         0 #> 57           0                 DataRow      0        0         0         0 #> 58           0                 DataRow      0        0         0         0 #> 59           0                 DataRow      0        0         0         0 #> 60           0                 DataRow      0        0         0         0 #> 61           0                 DataRow      0        0         0         0 #> 62           0                 DataRow      0        0         0         0 #> 63           0                 DataRow      0        0         0         0 #> 64           0                 DataRow      0        0         0         0 #> 65           0                 DataRow      0        0         0         0 #> 66           0                 DataRow      0        0         0         0 #> 67           0                 DataRow      0        0         0         0 #> 68           0                 DataRow      0        0         0         0 #> 69           0                 DataRow      0        0         0         0 #> 70           0                 DataRow      0        0         0         0 #> 71           0                 DataRow      0        0         0         0 #> 72           0                 DataRow      0        0         0         0 #> 73           0                 DataRow      0        0         0         0 #> 74           0                 DataRow      0        0         0         0 #> 75           0                 DataRow      0        0         0         0 #> 76           0                 DataRow      0        0         0         0 #> 77           0                 DataRow      0        0         0         0 #> 78           0                 DataRow      0        0         0         0 #> 79           0                 DataRow      0        0         0         0 #> 80           0                 DataRow      0        0         0         0 #> 81           0                 DataRow      0        0         0         0 #> 82           0                 DataRow      0        0         0         0 #> 83           0                 DataRow      0        0         0         0 #> 84           0                 DataRow      0        0         0         0 #> 85           0                 DataRow      0        0         0         0 #> 86           0                 DataRow      0        0         0         0 #> 87           0                 DataRow      0        0         0         0 #> 88           0                 DataRow      0        0         0         0 #> 89           0                 DataRow      0        0         0         0 #> 90           0                 DataRow      0        0         0         0 #> 91           0                 DataRow      0        0         0         0 #> 92           0                 DataRow      0        0         0         0 #> 93           0                 DataRow      0        0         0         0 #> 94           0                 DataRow      0        0         0         0 #> 95           0                 DataRow      0        0         0         0 #> 96           0                 DataRow      0        0         0         0 #> 97           0                 DataRow      0        0         0         0 #> 98           0                 DataRow      0        0         0         0 #> 99           0                 DataRow      0        0         0         0 #> 100          0                 DataRow      0        0         0         0 #> 101          0                 DataRow      0        0         0         0 #> 102          0                 DataRow      0        0         0         0 #> 103          0                 DataRow      0        0         0         0 #> 104          0                 DataRow      0        0         0         0 #> 105          0                 DataRow      0        0         0         0 #> 106          0                 DataRow      0        0         0         0 #> 107          0                 DataRow      0        0         0         0 #> 108          0                 DataRow      0        0         0         0 #> 109          0                 DataRow      0        0         0         0 #> 110          0                 DataRow      0        0         0         0 #> 111          0                 DataRow      0        0         0         0 #> 112          0                 DataRow      0        0         0         0 #> 113          0                 DataRow      0        0         0         0 #> 114          0                 DataRow      0        0         0         0 #> 115          0                 DataRow      0        0         0         0 #> 116          0                 DataRow      0        0         0         0 #> 117          0                 DataRow      0        0         0         0 #> 118          0                 DataRow      0        0         0         0 #> 119          0                 DataRow      0        0         0         0 #> 120          0                 DataRow      0        0         0         0 #> 121          0                 DataRow      0        0         0         0 #> 122          0                 DataRow      0        0         0         0 #> 123          0                 DataRow      0        0         0         0 #> 124          0                 DataRow      0        0         0         0 #> 125          0                 DataRow      0        0         0         0 #> 126          0                 DataRow      0        0         0         0 #> 127          0                 DataRow      0        0         0         0 #> 128          0                 DataRow      0        0         0         0 #> 129          0                 DataRow      0        0         0         0 #> 130          0                 DataRow      0        0         0         0 #> 131          0                 DataRow      0        0         0         0 #> 132          0                 DataRow      0        0         0         0 #> 133          0                 DataRow      0        0         0         0 #> 134          0                 DataRow      0        0         0         0 #> 135          0                 DataRow      0        0         0         0 #> 136          0                 DataRow      0        0         0         0 #> 137          0                 DataRow      0        0         0         0 #> 138          0                 DataRow      0        0         0         0 #> 139          0                 DataRow      0        0         0         0 #> 140          0                 DataRow      0        0         0         0 #> 141          0                 DataRow      0        0         0         0 #> 142          0                 DataRow      0        0         0         0 #> 143          0                 DataRow      0        0         0         0 #> 144          0                 DataRow      0        0         0         0 #> 145          0                 DataRow      0        0         0         0 #> 146          0                 DataRow      0        0         0         0 #> 147          0                 DataRow      0        0         0         0 #> 148          0                 DataRow      0        0         0         0 #> 149          0                 DataRow      0        0         0         0 #> 150          0                 DataRow      0        0         0         0 #>     force_page page_title trailing_sep #> 1        FALSE       <NA>         <NA> #> 2        FALSE       <NA>         <NA> #> 3        FALSE       <NA>         <NA> #> 4        FALSE       <NA>         <NA> #> 5        FALSE       <NA>         <NA> #> 6        FALSE       <NA>         <NA> #> 7        FALSE       <NA>         <NA> #> 8        FALSE       <NA>         <NA> #> 9        FALSE       <NA>         <NA> #> 10       FALSE       <NA>         <NA> #> 11       FALSE       <NA>         <NA> #> 12       FALSE       <NA>         <NA> #> 13       FALSE       <NA>         <NA> #> 14       FALSE       <NA>         <NA> #> 15       FALSE       <NA>         <NA> #> 16       FALSE       <NA>         <NA> #> 17       FALSE       <NA>         <NA> #> 18       FALSE       <NA>         <NA> #> 19       FALSE       <NA>         <NA> #> 20       FALSE       <NA>         <NA> #> 21       FALSE       <NA>         <NA> #> 22       FALSE       <NA>         <NA> #> 23       FALSE       <NA>         <NA> #> 24       FALSE       <NA>         <NA> #> 25       FALSE       <NA>         <NA> #> 26       FALSE       <NA>         <NA> #> 27       FALSE       <NA>         <NA> #> 28       FALSE       <NA>         <NA> #> 29       FALSE       <NA>         <NA> #> 30       FALSE       <NA>         <NA> #> 31       FALSE       <NA>         <NA> #> 32       FALSE       <NA>         <NA> #> 33       FALSE       <NA>         <NA> #> 34       FALSE       <NA>         <NA> #> 35       FALSE       <NA>         <NA> #> 36       FALSE       <NA>         <NA> #> 37       FALSE       <NA>         <NA> #> 38       FALSE       <NA>         <NA> #> 39       FALSE       <NA>         <NA> #> 40       FALSE       <NA>         <NA> #> 41       FALSE       <NA>         <NA> #> 42       FALSE       <NA>         <NA> #> 43       FALSE       <NA>         <NA> #> 44       FALSE       <NA>         <NA> #> 45       FALSE       <NA>         <NA> #> 46       FALSE       <NA>         <NA> #> 47       FALSE       <NA>         <NA> #> 48       FALSE       <NA>         <NA> #> 49       FALSE       <NA>         <NA> #> 50       FALSE       <NA>         <NA> #> 51       FALSE       <NA>         <NA> #> 52       FALSE       <NA>         <NA> #> 53       FALSE       <NA>         <NA> #> 54       FALSE       <NA>         <NA> #> 55       FALSE       <NA>         <NA> #> 56       FALSE       <NA>         <NA> #> 57       FALSE       <NA>         <NA> #> 58       FALSE       <NA>         <NA> #> 59       FALSE       <NA>         <NA> #> 60       FALSE       <NA>         <NA> #> 61       FALSE       <NA>         <NA> #> 62       FALSE       <NA>         <NA> #> 63       FALSE       <NA>         <NA> #> 64       FALSE       <NA>         <NA> #> 65       FALSE       <NA>         <NA> #> 66       FALSE       <NA>         <NA> #> 67       FALSE       <NA>         <NA> #> 68       FALSE       <NA>         <NA> #> 69       FALSE       <NA>         <NA> #> 70       FALSE       <NA>         <NA> #> 71       FALSE       <NA>         <NA> #> 72       FALSE       <NA>         <NA> #> 73       FALSE       <NA>         <NA> #> 74       FALSE       <NA>         <NA> #> 75       FALSE       <NA>         <NA> #> 76       FALSE       <NA>         <NA> #> 77       FALSE       <NA>         <NA> #> 78       FALSE       <NA>         <NA> #> 79       FALSE       <NA>         <NA> #> 80       FALSE       <NA>         <NA> #> 81       FALSE       <NA>         <NA> #> 82       FALSE       <NA>         <NA> #> 83       FALSE       <NA>         <NA> #> 84       FALSE       <NA>         <NA> #> 85       FALSE       <NA>         <NA> #> 86       FALSE       <NA>         <NA> #> 87       FALSE       <NA>         <NA> #> 88       FALSE       <NA>         <NA> #> 89       FALSE       <NA>         <NA> #> 90       FALSE       <NA>         <NA> #> 91       FALSE       <NA>         <NA> #> 92       FALSE       <NA>         <NA> #> 93       FALSE       <NA>         <NA> #> 94       FALSE       <NA>         <NA> #> 95       FALSE       <NA>         <NA> #> 96       FALSE       <NA>         <NA> #> 97       FALSE       <NA>         <NA> #> 98       FALSE       <NA>         <NA> #> 99       FALSE       <NA>         <NA> #> 100      FALSE       <NA>         <NA> #> 101      FALSE       <NA>         <NA> #> 102      FALSE       <NA>         <NA> #> 103      FALSE       <NA>         <NA> #> 104      FALSE       <NA>         <NA> #> 105      FALSE       <NA>         <NA> #> 106      FALSE       <NA>         <NA> #> 107      FALSE       <NA>         <NA> #> 108      FALSE       <NA>         <NA> #> 109      FALSE       <NA>         <NA> #> 110      FALSE       <NA>         <NA> #> 111      FALSE       <NA>         <NA> #> 112      FALSE       <NA>         <NA> #> 113      FALSE       <NA>         <NA> #> 114      FALSE       <NA>         <NA> #> 115      FALSE       <NA>         <NA> #> 116      FALSE       <NA>         <NA> #> 117      FALSE       <NA>         <NA> #> 118      FALSE       <NA>         <NA> #> 119      FALSE       <NA>         <NA> #> 120      FALSE       <NA>         <NA> #> 121      FALSE       <NA>         <NA> #> 122      FALSE       <NA>         <NA> #> 123      FALSE       <NA>         <NA> #> 124      FALSE       <NA>         <NA> #> 125      FALSE       <NA>         <NA> #> 126      FALSE       <NA>         <NA> #> 127      FALSE       <NA>         <NA> #> 128      FALSE       <NA>         <NA> #> 129      FALSE       <NA>         <NA> #> 130      FALSE       <NA>         <NA> #> 131      FALSE       <NA>         <NA> #> 132      FALSE       <NA>         <NA> #> 133      FALSE       <NA>         <NA> #> 134      FALSE       <NA>         <NA> #> 135      FALSE       <NA>         <NA> #> 136      FALSE       <NA>         <NA> #> 137      FALSE       <NA>         <NA> #> 138      FALSE       <NA>         <NA> #> 139      FALSE       <NA>         <NA> #> 140      FALSE       <NA>         <NA> #> 141      FALSE       <NA>         <NA> #> 142      FALSE       <NA>         <NA> #> 143      FALSE       <NA>         <NA> #> 144      FALSE       <NA>         <NA> #> 145      FALSE       <NA>         <NA> #> 146      FALSE       <NA>         <NA> #> 147      FALSE       <NA>         <NA> #> 148      FALSE       <NA>         <NA> #> 149      FALSE       <NA>         <NA> #> 150      FALSE       <NA>         <NA> #>  #> $line_grouping #>   [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18 #>  [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36 #>  [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54 #>  [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72 #>  [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90 #>  [91]  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107 108 #> [109] 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 #> [127] 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 #> [145] 145 146 147 148 149 150 151 #>  #> $ref_footnotes #> list() #>  #> $main_title #> [1] \"\" #>  #> $subtitles #> character(0) #>  #> $page_titles #> character(0) #>  #> $main_footer #> [1] \"\" #>  #> $prov_footer #> character(0) #>  #> $header_section_div #> [1] NA #>  #> $horizontal_sep #> [1] \"‚Äî\" #>  #> $col_gap #> [1] 3 #>  #> $listing_keycols #> NULL #>  #> $table_inset #> [1] 0 #>  #> $has_topleft #> [1] FALSE #>  #> $indent_size #> [1] 2 #>  #> $col_widths #>         rnms Sepal.Length  Sepal.Width Petal.Length  Petal.Width      Species  #>            3           12           11           12           11           10  #>  #> $fontspec #> $family #> [1] \"Courier\" #>  #> $size #> [1] 8 #>  #> $lineheight #> [1] 1 #>  #> attr(,\"class\") #> [1] \"font_spec\" \"list\"      #>  #> $num_rep_cols #> [1] 0 #>  #> $ref_fnote_df #> [1] row_path  col_path  row       col       symbol    ref_index msg       #> [8] nlines    #> <0 rows> (or 0-length row.names) #>  #> $col_info #>   label name abs_rownumber path pos_in_siblings n_siblings self_extent #> 1     1    1             1   NA               0          0          12 #> 2     2    2             2   NA               0          0          11 #> 3     3    3             3   NA               0          0          12 #> 4     4    4             4   NA               0          0          11 #> 5     5    5             5   NA               0          0          10 #>   par_extent reprint_inds node_class indent nrowrefs ncellrefs nreflines #> 1          0                   stuff      0        0         0         0 #> 2          0                   stuff      0        0         0         0 #> 3          0                   stuff      0        0         0         0 #> 4          0                   stuff      0        0         0         0 #> 5          0                   stuff      0        0         0         0 #>   force_page page_title trailing_sep ref_info_df #> 1      FALSE       <NA>         <NA>             #> 2      FALSE       <NA>         <NA>             #> 3      FALSE       <NA>         <NA>             #> 4      FALSE       <NA>         <NA>             #> 5      FALSE       <NA>         <NA>             #>  #> attr(,\"nrow_header\") #> [1] 1 #> attr(,\"ncols\") #> [1] 5 #> attr(,\"class\") #> [1] \"MatrixPrintForm\" \"list\""},{"path":"https://insightsengineering.github.io/formatters/main/reference/MatrixPrintForm_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for Matrix Print Form ‚Äî MatrixPrintForm-class","title":"Class for Matrix Print Form ‚Äî MatrixPrintForm-class","text":"MatrixPrintForm class, intermediate representation ASCII table printing.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/basemethods.html","id":null,"dir":"Reference","previous_headings":"","what":"Print ‚Äî print,ANY-method","title":"Print ‚Äî print,ANY-method","text":"Print R object. See print().","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/basemethods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print ‚Äî print,ANY-method","text":"","code":"# S4 method for class 'ANY' print(x, ...)"},{"path":"https://insightsengineering.github.io/formatters/main/reference/basemethods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print ‚Äî print,ANY-method","text":"x object used select method. ... arguments passed methods.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/basic_pagdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic/spoof pagination info data frame ‚Äî basic_pagdf","title":"Basic/spoof pagination info data frame ‚Äî basic_pagdf","text":"Returns minimal pagination info data.frame (info siblings, footnotes, etc.).","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/basic_pagdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic/spoof pagination info data frame ‚Äî basic_pagdf","text":"","code":"basic_pagdf(   rnames,   labs = rnames,   rnums = seq_along(rnames),   extents = 1L,   rclass = \"DataRow\",   parent_path = NULL,   paths = lapply(rnames, function(x) c(parent_path, x)),   fontspec = font_spec() )"},{"path":"https://insightsengineering.github.io/formatters/main/reference/basic_pagdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic/spoof pagination info data frame ‚Äî basic_pagdf","text":"rnames (character) vector row names. labs (character) vector row labels. Defaults rnames. rnums (integer) vector row numbers. Defaults seq_along(rnames). extents (integer) number lines row requires print. Defaults 1 rows. rclass (character) class(es) rows. Defaults \"DataRow\". parent_path (string) parent path rows \"children \". Defaults NULL, usually needed. may necessary use \"root\", specific scenarios. paths (list) list paths rows. Defaults lapply(rnames, function(x) c(parent_path, x)). fontspec (font_spec) font_spec object specifying font information use calculating string widths heights, returned font_spec().","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/basic_pagdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Basic/spoof pagination info data frame ‚Äî basic_pagdf","text":"data.frame suitable use MatrixPrintForm constructor pagination machinery.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/basic_pagdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Basic/spoof pagination info data frame ‚Äî basic_pagdf","text":"","code":"basic_pagdf(c(\"hi\", \"there\")) #>       label  name abs_rownumber  path pos_in_siblings n_siblings self_extent #> hi       hi    hi             1    hi               1          2           1 #> there there there             2 there               2          2           1 #>       par_extent reprint_inds node_class indent nrowrefs ncellrefs nreflines #> hi             0                 DataRow      0        0         0         0 #> there          0                 DataRow      0        0         0         0 #>       force_page page_title trailing_sep #> hi         FALSE       <NA>         <NA> #> there      FALSE       <NA>         <NA>"},{"path":"https://insightsengineering.github.io/formatters/main/reference/cdisc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated CDISC-like data for examples ‚Äî ex_adsl","title":"Simulated CDISC-like data for examples ‚Äî ex_adsl","text":"Simulated CDISC-like data examples","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/cdisc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated CDISC-like data for examples ‚Äî ex_adsl","text":"","code":"ex_adsl  ex_adae  ex_adaette  ex_adtte  ex_adcm  ex_adlb  ex_admh  ex_adqs  ex_adrs  ex_advs"},{"path":"https://insightsengineering.github.io/formatters/main/reference/cdisc_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated CDISC-like data for examples ‚Äî ex_adsl","text":"rds (data.frame) object class tbl_df (inherits tbl, data.frame) 1934 rows 48 columns. object class tbl_df (inherits tbl, data.frame) 1200 rows 42 columns. object class tbl_df (inherits tbl, data.frame) 1200 rows 42 columns. object class tbl_df (inherits tbl, data.frame) 1934 rows 41 columns. object class tbl_df (inherits tbl, data.frame) 8400 rows 59 columns. object class tbl_df (inherits tbl, data.frame) 1934 rows 41 columns. object class tbl_df (inherits tbl, data.frame) 14000 rows 49 columns. object class tbl_df (inherits tbl, data.frame) 2400 rows 41 columns. object class tbl_df (inherits tbl, data.frame) 16800 rows 59 columns.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/check_formats.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a format or alignment is supported ‚Äî check_formats","title":"Check if a format or alignment is supported ‚Äî check_formats","text":"Utility functions checking formats alignments.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/check_formats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a format or alignment is supported ‚Äî check_formats","text":"","code":"is_valid_format(x, stop_otherwise = FALSE)  check_aligns(algn)"},{"path":"https://insightsengineering.github.io/formatters/main/reference/check_formats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a format or alignment is supported ‚Äî check_formats","text":"x (string function) format string object returned sprintf_format() stop_otherwise (flag) whether error thrown x valid format. algn (character) character vector indicates requested cell alignments.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/check_formats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a format or alignment is supported ‚Äî check_formats","text":"is_valid_format returns TRUE x NULL, supported format string, function, FALSE otherwise. check_aligns returns TRUE provided alignments supported, otherwise, error thrown.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/check_formats.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Check if a format or alignment is supported ‚Äî check_formats","text":"x function, check performed verify returns valid format.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/check_formats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a format or alignment is supported ‚Äî check_formats","text":"","code":"is_valid_format(\"xx.x\") #> [1] TRUE is_valid_format(\"fakeyfake\") #> [1] FALSE  check_aligns(c(\"decimal\", \"dec_right\"))"},{"path":"https://insightsengineering.github.io/formatters/main/reference/decimal_align.html","id":null,"dir":"Reference","previous_headings":"","what":"Decimal alignment ‚Äî decimal_align","title":"Decimal alignment ‚Äî decimal_align","text":"Aligning decimal values string matrix. Allowed alignments : dec_left, dec_right, decimal.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/decimal_align.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decimal alignment ‚Äî decimal_align","text":"","code":"decimal_align(string_mat, align_mat)"},{"path":"https://insightsengineering.github.io/formatters/main/reference/decimal_align.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decimal alignment ‚Äî decimal_align","text":"string_mat (character matrix) \"string\" matrix component MatrixPrintForm object. align_mat (character matrix) \"aligns\" matrix component MatrixPrintForm object. contain either dec_left, dec_right, decimal values decimal aligned.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/decimal_align.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decimal alignment ‚Äî decimal_align","text":"processed string matrix class MatrixPrintForm decimal-aligned values.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/decimal_align.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Decimal alignment ‚Äî decimal_align","text":"Left right decimal alignment (dec_left dec_right) differ center decimal alignment (decimal) padding present. may occur column widths set wider via parameters widths toString colwidths paginate_*. commonly, also occurs column names wider. Cell wrapping supported decimal alignment used.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/formatters/main/reference/decimal_align.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decimal alignment ‚Äî decimal_align","text":"","code":"dfmf <- basic_matrix_form(mtcars[1:5, ]) aligns <- mf_aligns(dfmf) aligns[, -c(1)] <- \"dec_left\" decimal_align(mf_strings(dfmf), aligns) #>      rnms                mpg    cyl   disp   hp    drat   wt      qsec    vs   #> [1,] \"\"                  \"mpg\"  \"cyl\" \"disp\" \"hp\"  \"drat\" \"wt\"    \"qsec\"  \"vs\" #> [2,] \"Mazda RX4\"         \"21  \" \"6\"   \"160\"  \"110\" \"3.9 \" \"2.62 \" \"16.46\" \"0\"  #> [3,] \"Mazda RX4 Wag\"     \"21  \" \"6\"   \"160\"  \"110\" \"3.9 \" \"2.875\" \"17.02\" \"0\"  #> [4,] \"Datsun 710\"        \"22.8\" \"4\"   \"108\"  \" 93\" \"3.85\" \"2.32 \" \"18.61\" \"1\"  #> [5,] \"Hornet 4 Drive\"    \"21.4\" \"6\"   \"258\"  \"110\" \"3.08\" \"3.215\" \"19.44\" \"1\"  #> [6,] \"Hornet Sportabout\" \"18.7\" \"8\"   \"360\"  \"175\" \"3.15\" \"3.44 \" \"17.02\" \"0\"  #>      am   gear   carb   #> [1,] \"am\" \"gear\" \"carb\" #> [2,] \"1\"  \"4\"    \"4\"    #> [3,] \"1\"  \"4\"    \"4\"    #> [4,] \"1\"  \"4\"    \"1\"    #> [5,] \"0\"  \"3\"    \"1\"    #> [6,] \"0\"  \"3\"    \"2\""},{"path":"https://insightsengineering.github.io/formatters/main/reference/default_horizontal_sep.html","id":null,"dir":"Reference","previous_headings":"","what":"Default horizontal separator ‚Äî default_horizontal_sep","title":"Default horizontal separator ‚Äî default_horizontal_sep","text":"default horizontal separator character can displayed current charset use rendering table-like objects. default horizontal separator character can displayed current charset use rendering table-like objects.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/default_horizontal_sep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default horizontal separator ‚Äî default_horizontal_sep","text":"","code":"default_hsep()  set_default_hsep(hsep_char)  default_hsep()  set_default_hsep(hsep_char)"},{"path":"https://insightsengineering.github.io/formatters/main/reference/default_horizontal_sep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default horizontal separator ‚Äî default_horizontal_sep","text":"hsep_char (string) character set R environment options default horizontal separator. Must single character. Use getOption(\"formatters_default_hsep\") get current value (NULL set).","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/default_horizontal_sep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default horizontal separator ‚Äî default_horizontal_sep","text":"unicode 2014 (long dash generating solid horizontal line) locale uses UTF character set, otherwise ASCII hyphen -per-session warning. unicode 2014 (long dash generating solid horizontal line) locale uses UTF character set, otherwise ASCII hyphen -per-session warning.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/default_horizontal_sep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default horizontal separator ‚Äî default_horizontal_sep","text":"","code":"default_hsep() #> [1] \"‚Äî\" set_default_hsep(\"o\") default_hsep() #> [1] \"o\"  default_hsep() #> [1] \"o\" set_default_hsep(\"o\") default_hsep() #> [1] \"o\""},{"path":"https://insightsengineering.github.io/formatters/main/reference/default_page_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Default page number format ‚Äî default_page_number","title":"Default page number format ‚Äî default_page_number","text":"set, default page number string appear bottom right every page paginated table. current cpp used position string.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/default_page_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default page number format ‚Äî default_page_number","text":"","code":"default_page_number()  set_default_page_number(page_number)"},{"path":"https://insightsengineering.github.io/formatters/main/reference/default_page_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default page number format ‚Äî default_page_number","text":"page_number (string) single string value set page number format. formatted similarly following format: \"page {}/{n}\". {} replaced current page number, {n} replaced total page number. Current cpp used position string bottom right corner.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/default_page_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default page number format ‚Äî default_page_number","text":"page number format string (NULL set).","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/default_page_number.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default page number format ‚Äî default_page_number","text":"","code":"default_page_number() #> NULL set_default_page_number(\"page {i} of {n}\") default_page_number() #> [1] \"page {i} of {n}\""},{"path":"https://insightsengineering.github.io/formatters/main/reference/divider_height.html","id":null,"dir":"Reference","previous_headings":"","what":"Divider height ‚Äî divider_height","title":"Divider height ‚Äî divider_height","text":"Divider height","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/divider_height.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Divider height ‚Äî divider_height","text":"","code":"divider_height(obj)  # S4 method for class 'ANY' divider_height(obj)"},{"path":"https://insightsengineering.github.io/formatters/main/reference/divider_height.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Divider height ‚Äî divider_height","text":"obj () object.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/divider_height.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Divider height ‚Äî divider_height","text":"height, lines text, divider header body. Currently returns 1L default method.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/divider_height.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Divider height ‚Äî divider_height","text":"","code":"divider_height(mtcars) #> [1] 1"},{"path":"https://insightsengineering.github.io/formatters/main/reference/do_forced_paginate.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic for performing ","title":"Generic for performing ","text":"Forced pagination pagination happens regardless position page. object expected information necessary locate page breaks, do_forced_pag method expected fully perform paginations.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/do_forced_paginate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic for performing ","text":"","code":"do_forced_paginate(obj)  # S4 method for class 'ANY' do_forced_paginate(obj)"},{"path":"https://insightsengineering.github.io/formatters/main/reference/do_forced_paginate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic for performing ","text":"obj () object paginated. method simply returns list length one, containing obj.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/do_forced_paginate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic for performing ","text":"list sub-objects, paginated standard pagination algorithm.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/export_as_pdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Export as PDF ‚Äî export_as_pdf","title":"Export as PDF ‚Äî export_as_pdf","text":"PDF output function based ASCII output created toString().","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/export_as_pdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export as PDF ‚Äî export_as_pdf","text":"","code":"export_as_pdf(   x,   file,   page_type = \"letter\",   landscape = FALSE,   pg_width = page_dim(page_type)[if (landscape) 2 else 1],   pg_height = page_dim(page_type)[if (landscape) 1 else 2],   width = lifecycle::deprecated(),   height = lifecycle::deprecated(),   margins = c(4, 4, 4, 4),   min_siblings = 2,   font_family = \"Courier\",   font_size = 8,   fontsize = font_size,   lineheight = 1.2,   paginate = TRUE,   page_num = default_page_number(),   lpp = NULL,   cpp = NULL,   hsep = \"-\",   indent_size = 2,   rep_cols = NULL,   tf_wrap = TRUE,   max_width = NULL,   colwidths = NULL,   fontspec = font_spec(font_family, font_size, lineheight),   ttype_ok = FALSE,   round_type = c(\"iec\", \"sas\") )"},{"path":"https://insightsengineering.github.io/formatters/main/reference/export_as_pdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export as PDF ‚Äî export_as_pdf","text":"x () table-like object export. Must applicable matrix_form method. file (string) file write , must .pdf extension. page_type (string) name page type. See page_types. Ignored pg_width pg_height set directly. landscape (flag) whether dimensions page_type inverted landscape orientation. Defaults FALSE, ignored pg_width pg_height set directly. pg_width (numeric(1)) page width inches. pg_height (numeric(1)) page height inches. width Please use pg_width argument specify page_type instead. height Please use pg_height argument specify page_type instead. margins (numeric(4)) number lines/characters margin bottom, left, top, right sides page, respectively. min_siblings (numeric) minimum sibling rows must appear either side pagination row mid-subtable split valid. Defaults 2 tables. automatically turned (set 0) listings. font_family (string) name font family. error thrown family named monospaced. Defaults \"Courier\". font_size (numeric(1)) font size. Defaults 12. fontsize Please use font_size argument instead. lineheight (numeric(1)) line height. Defaults 1. paginate (flag) whether pagination performed. Defaults TRUE page size specified (including default). page_num (string) placeholder string page numbers. See default_page_number information. Defaults NULL. lpp (numeric(1) NULL) lines per page. NA (default), calculated automatically based specified page size). NULL indicates vertical pagination occur. cpp (numeric(1) NULL) width (characters) per page. NA (default), calculated automatically based specified page size). NULL indicates horizontal pagination occur. hsep (string) character repeat create header/body separator line. NULL, object value used. \" \", empty separator printed. See default_hsep() information. indent_size (numeric(1)) indent size, characters. Ignored x already MatrixPrintForm object favor information . rep_cols (numeric(1)) number columns (including row labels) repeated every page. Defaults 0. tf_wrap (flag) whether text title, subtitles, footnotes wrapped. max_width (integer(1), string NULL) width title footer (including footnotes) materials word-wrapped . NULL, set current print width session (getOption(\"width\")). set \"auto\", width table (plus table inset) used. Parameter ignored tf_wrap = FALSE. colwidths (numeric) vector column widths (characters) use vertical pagination. fontspec (font_spec) font_spec object specifying font information use calculating string widths heights, returned font_spec(). ttype_ok (logical(1)) truetype (non-monospace) fonts allowed via fontspec. Defaults FALSE. parameter primarily internal testing generally set end users. round_type (\"iec\" \"sas\") type rounding perform. iec, default, peforms rounding compliant IEC 60559 (see details), sas performs nearest-value rounding consistent rounding within SAS.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/export_as_pdf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export as PDF ‚Äî export_as_pdf","text":"default, pagination performed default cpp lpp defined specified page dimensions margins. User-specified lpp cpp values override , used caution. Title footer materials also word-wrapped default (unlike printed terminal), cpp (defined ) default max_width.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/formatters/main/reference/export_as_pdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export as PDF ‚Äî export_as_pdf","text":"","code":"if (FALSE) { # \\dontrun{ tf <- tempfile(fileext = \".pdf\") export_as_pdf(basic_matrix_form(mtcars), file = tf, pg_height = 4)  tf <- tempfile(fileext = \".pdf\") export_as_pdf(basic_matrix_form(mtcars), file = tf, lpp = 8) } # }"},{"path":"https://insightsengineering.github.io/formatters/main/reference/export_as_rtf.html","id":null,"dir":"Reference","previous_headings":"","what":"Export as RTF ‚Äî export_as_rtf","title":"Export as RTF ‚Äî export_as_rtf","text":"Experimental export rich text format (RTF) format.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/export_as_rtf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export as RTF ‚Äî export_as_rtf","text":"","code":"export_as_rtf(   x,   file = NULL,   colwidths = NULL,   page_type = \"letter\",   pg_width = page_dim(page_type)[if (landscape) 2 else 1],   pg_height = page_dim(page_type)[if (landscape) 1 else 2],   landscape = FALSE,   margins = c(bottom = 0.5, left = 0.75, top = 0.5, right = 0.75),   font_family = \"Courier\",   font_size = 8,   lineheight = 1,   fontspec = font_spec(font_family, font_size, lineheight),   paginate = TRUE,   ... )"},{"path":"https://insightsengineering.github.io/formatters/main/reference/export_as_rtf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export as RTF ‚Äî export_as_rtf","text":"x () table-like object export. Must applicable matrix_form method. file (string NULL) non-NULL, path write text file containing x rendered ASCII text. colwidths (numeric) vector column widths (characters) use vertical pagination. page_type (string) name page type. See page_types. Ignored pg_width pg_height set directly. pg_width (numeric(1)) page width inches. pg_height (numeric(1)) page height inches. landscape (flag) whether dimensions page_type inverted landscape orientation. Defaults FALSE, ignored pg_width pg_height set directly. margins (numeric(4)) named numeric vector containing \"bottom\", \"left\", \"top\", \"right\" margins inches. Defaults .5 inches vertical margins .75 horizontal margins. font_family (string) name font family. error thrown family named monospaced. Defaults \"Courier\". font_size (numeric(1)) font size. Defaults 12. lineheight (numeric(1)) line height. Defaults 1. fontspec (font_spec) font_spec object specifying font information use calculating string widths heights, returned font_spec(). paginate (flag) whether pagination performed. Defaults TRUE page size specified (including default). ... additional parameters passed paginate_to_mpfs().","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/export_as_rtf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export as RTF ‚Äî export_as_rtf","text":"RTF export occurs via following steps: table paginated specified page size (vertically horizontally). separate page converted MatrixPrintForm object RTF-encoded text. Separate RTF text chunks combined written single RTF file. Conversion MatrixPrintForm objects RTF done via mpf_to_rtf().","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/export_as_txt.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a table-like object to plain (ASCII) text with page breaks ‚Äî export_as_txt","title":"Export a table-like object to plain (ASCII) text with page breaks ‚Äî export_as_txt","text":"function converts x MatrixPrintForm object via matrix_form(), paginates via paginate_to_mpfs(), converts page ASCII text via toString(), outputs strings, separated page_break, file.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/export_as_txt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a table-like object to plain (ASCII) text with page breaks ‚Äî export_as_txt","text":"","code":"export_as_txt(   x,   file = NULL,   page_type = NULL,   landscape = FALSE,   pg_width = page_dim(page_type)[if (landscape) 2 else 1],   pg_height = page_dim(page_type)[if (landscape) 1 else 2],   font_family = \"Courier\",   font_size = 8,   lineheight = 1L,   margins = c(top = 0.5, bottom = 0.5, left = 0.75, right = 0.75),   paginate = TRUE,   cpp = NA_integer_,   lpp = NA_integer_,   ...,   hsep = NULL,   indent_size = 2,   tf_wrap = paginate,   max_width = NULL,   colwidths = NULL,   min_siblings = 2,   nosplitin = character(),   rep_cols = NULL,   verbose = FALSE,   page_break = \"\\\\s\\\\n\",   page_num = default_page_number(),   fontspec = font_spec(font_family, font_size, lineheight),   col_gap = 3,   round_type = c(\"iec\", \"sas\") )"},{"path":"https://insightsengineering.github.io/formatters/main/reference/export_as_txt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a table-like object to plain (ASCII) text with page breaks ‚Äî export_as_txt","text":"x () table-like object export. Must applicable matrix_form method. file (string NULL) non-NULL, path write text file containing x rendered ASCII text. page_type (string) name page type. See page_types. Ignored pg_width pg_height set directly. landscape (flag) whether dimensions page_type inverted landscape orientation. Defaults FALSE, ignored pg_width pg_height set directly. pg_width (numeric(1)) page width inches. pg_height (numeric(1)) page height inches. font_family (string) name font family. error thrown family named monospaced. Defaults \"Courier\". font_size (numeric(1)) font size. Defaults 12. lineheight (numeric(1)) line height. Defaults 1. margins (numeric(4)) named numeric vector containing \"bottom\", \"left\", \"top\", \"right\" margins inches. Defaults .5 inches vertical margins .75 horizontal margins. paginate (flag) whether pagination performed. Defaults TRUE page size specified (including default). cpp (numeric(1) NULL) width (characters) per page. NA (default), calculated automatically based specified page size). NULL indicates horizontal pagination occur. lpp (numeric(1) NULL) lines per page. NA (default), calculated automatically based specified page size). NULL indicates vertical pagination occur. ... additional parameters passed paginate_to_mpfs(). hsep (string) character repeat create header/body separator line. NULL, object value used. \" \", empty separator printed. See default_hsep() information. indent_size (numeric(1)) indent size, characters. Ignored x already MatrixPrintForm object favor information . tf_wrap (flag) whether text title, subtitles, footnotes wrapped. max_width (integer(1), string NULL) width title footer (including footnotes) materials word-wrapped . NULL, set current print width session (getOption(\"width\")). set \"auto\", width table (plus table inset) used. Parameter ignored tf_wrap = FALSE. colwidths (numeric) vector column widths (characters) use vertical pagination. min_siblings (numeric) minimum sibling rows must appear either side pagination row mid-subtable split valid. Defaults 2 tables. automatically turned (set 0) listings. nosplitin (character) list names subtables page breaks allowed, regardless considerations. Defaults none. rep_cols (numeric(1)) number columns (including row labels) repeated every page. Defaults 0. verbose (flag) whether additional informative messages search pagination breaks shown. Defaults FALSE. page_break (string) page break symbol (defaults \"\\\\n\\\\s\"). page_num (string) placeholder string page numbers. See default_page_number information. Defaults NULL. fontspec (font_spec) font_spec object specifying font information use calculating string widths heights, returned font_spec(). col_gap (numeric(1)) number spaces placed columns rendered table (assumed horizontal pagination). round_type (\"iec\" \"sas\") type rounding perform. iec, default, peforms rounding compliant IEC 60559 (see details), sas performs nearest-value rounding consistent rounding within SAS.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/export_as_txt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export a table-like object to plain (ASCII) text with page breaks ‚Äî export_as_txt","text":"file NULL, full paginated concatenated string value returned, otherwise output written file value (invisible NULL) returned.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/export_as_txt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export a table-like object to plain (ASCII) text with page breaks ‚Äî export_as_txt","text":"x num_rep_cols method, value returned used rep_cols default. Otherwise, 0 used. x applicable do_forced_paginate method, invoked pagination process.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/export_as_txt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export a table-like object to plain (ASCII) text with page breaks ‚Äî export_as_txt","text":"","code":"export_as_txt(basic_matrix_form(mtcars), pg_height = 5, pg_width = 4) #> [1] \"                      mpg    cyl\\noooooooooooooooooooooooooooooooo\\nMazda RX4              21     6 \\nMazda RX4 Wag          21     6 \\nDatsun 710            22.8    4 \\nHornet 4 Drive        21.4    6 \\nHornet Sportabout     18.7    8 \\nValiant               18.1    6 \\nDuster 360            14.3    8 \\nMerc 240D             24.4    4 \\nMerc 230              22.8    4 \\nMerc 280              19.2    6 \\nMerc 280C             17.8    6 \\nMerc 450SE            16.4    8 \\nMerc 450SL            17.3    8 \\nMerc 450SLC           15.2    8 \\nCadillac Fleetwood    10.4    8 \\nLincoln Continental   10.4    8 \\nChrysler Imperial     14.7    8 \\nFiat 128              32.4    4 \\nHonda Civic           30.4    4 \\nToyota Corolla        33.9    4 \\nToyota Corona         21.5    4 \\nDodge Challenger      15.5    8 \\nAMC Javelin           15.2    8 \\nCamaro Z28            13.3    8 \\nPontiac Firebird      19.2    8 \\nFiat X1-9             27.3    4 \\nPorsche 914-2          26     4 \\nLotus Europa          30.4    4 \\nFord Pantera L        15.8    8 \\noooooooooooooooooooooooooooooooo\\n\\n\\n                         page 1 of 10\\n\\\\s\\\\n                      disp    hp \\nooooooooooooooooooooooooooooooooo\\nMazda RX4              160    110\\nMazda RX4 Wag          160    110\\nDatsun 710             108    93 \\nHornet 4 Drive         258    110\\nHornet Sportabout      360    175\\nValiant                225    105\\nDuster 360             360    245\\nMerc 240D             146.7   62 \\nMerc 230              140.8   95 \\nMerc 280              167.6   123\\nMerc 280C             167.6   123\\nMerc 450SE            275.8   180\\nMerc 450SL            275.8   180\\nMerc 450SLC           275.8   180\\nCadillac Fleetwood     472    205\\nLincoln Continental    460    215\\nChrysler Imperial      440    230\\nFiat 128              78.7    66 \\nHonda Civic           75.7    52 \\nToyota Corolla        71.1    65 \\nToyota Corona         120.1   97 \\nDodge Challenger       318    150\\nAMC Javelin            304    150\\nCamaro Z28             350    245\\nPontiac Firebird       400    175\\nFiat X1-9              79     66 \\nPorsche 914-2         120.3   91 \\nLotus Europa          95.1    113\\nFord Pantera L         351    264\\nooooooooooooooooooooooooooooooooo\\n\\n\\n                         page 2 of 10\\n\\\\s\\\\n                      drat    wt  \\noooooooooooooooooooooooooooooooooo\\nMazda RX4             3.9    2.62 \\nMazda RX4 Wag         3.9    2.875\\nDatsun 710            3.85   2.32 \\nHornet 4 Drive        3.08   3.215\\nHornet Sportabout     3.15   3.44 \\nValiant               2.76   3.46 \\nDuster 360            3.21   3.57 \\nMerc 240D             3.69   3.19 \\nMerc 230              3.92   3.15 \\nMerc 280              3.92   3.44 \\nMerc 280C             3.92   3.44 \\nMerc 450SE            3.07   4.07 \\nMerc 450SL            3.07   3.73 \\nMerc 450SLC           3.07   3.78 \\nCadillac Fleetwood    2.93   5.25 \\nLincoln Continental    3     5.424\\nChrysler Imperial     3.23   5.345\\nFiat 128              4.08    2.2 \\nHonda Civic           4.93   1.615\\nToyota Corolla        4.22   1.835\\nToyota Corona         3.7    2.465\\nDodge Challenger      2.76   3.52 \\nAMC Javelin           3.15   3.435\\nCamaro Z28            3.73   3.84 \\nPontiac Firebird      3.08   3.845\\nFiat X1-9             4.08   1.935\\nPorsche 914-2         4.43   2.14 \\nLotus Europa          3.77   1.513\\nFord Pantera L        4.22   3.17 \\noooooooooooooooooooooooooooooooooo\\n\\n\\n                         page 3 of 10\\n\\\\s\\\\n                      qsec    vs   am\\nooooooooooooooooooooooooooooooooooooo\\nMazda RX4             16.46   0    1 \\nMazda RX4 Wag         17.02   0    1 \\nDatsun 710            18.61   1    1 \\nHornet 4 Drive        19.44   1    0 \\nHornet Sportabout     17.02   0    0 \\nValiant               20.22   1    0 \\nDuster 360            15.84   0    0 \\nMerc 240D              20     1    0 \\nMerc 230              22.9    1    0 \\nMerc 280              18.3    1    0 \\nMerc 280C             18.9    1    0 \\nMerc 450SE            17.4    0    0 \\nMerc 450SL            17.6    0    0 \\nMerc 450SLC            18     0    0 \\nCadillac Fleetwood    17.98   0    0 \\nLincoln Continental   17.82   0    0 \\nChrysler Imperial     17.42   0    0 \\nFiat 128              19.47   1    1 \\nHonda Civic           18.52   1    1 \\nToyota Corolla        19.9    1    1 \\nToyota Corona         20.01   1    0 \\nDodge Challenger      16.87   0    0 \\nAMC Javelin           17.3    0    0 \\nCamaro Z28            15.41   0    0 \\nPontiac Firebird      17.05   0    0 \\nFiat X1-9             18.9    1    1 \\nPorsche 914-2         16.7    0    1 \\nLotus Europa          16.9    1    1 \\nFord Pantera L        14.5    0    1 \\nooooooooooooooooooooooooooooooooooooo\\n\\n\\n                         page 4 of 10\\n\\\\s\\\\n                      gear   carb\\nooooooooooooooooooooooooooooooooo\\nMazda RX4              4      4  \\nMazda RX4 Wag          4      4  \\nDatsun 710             4      1  \\nHornet 4 Drive         3      1  \\nHornet Sportabout      3      2  \\nValiant                3      1  \\nDuster 360             3      4  \\nMerc 240D              4      2  \\nMerc 230               4      2  \\nMerc 280               4      4  \\nMerc 280C              4      4  \\nMerc 450SE             3      3  \\nMerc 450SL             3      3  \\nMerc 450SLC            3      3  \\nCadillac Fleetwood     3      4  \\nLincoln Continental    3      4  \\nChrysler Imperial      3      4  \\nFiat 128               4      1  \\nHonda Civic            4      2  \\nToyota Corolla         4      1  \\nToyota Corona          3      1  \\nDodge Challenger       3      2  \\nAMC Javelin            3      2  \\nCamaro Z28             3      4  \\nPontiac Firebird       3      2  \\nFiat X1-9              4      1  \\nPorsche 914-2          5      2  \\nLotus Europa           5      2  \\nFord Pantera L         5      4  \\nooooooooooooooooooooooooooooooooo\\n\\n\\n                         page 5 of 10\\n\\\\s\\\\n                      mpg    cyl\\noooooooooooooooooooooooooooooooo\\nFerrari Dino          19.7    6 \\nMaserati Bora          15     8 \\nVolvo 142E            21.4    4 \\noooooooooooooooooooooooooooooooo\\n\\n\\n                         page 6 of 10\\n\\\\s\\\\n                      disp    hp \\nooooooooooooooooooooooooooooooooo\\nFerrari Dino           145    175\\nMaserati Bora          301    335\\nVolvo 142E             121    109\\nooooooooooooooooooooooooooooooooo\\n\\n\\n                         page 7 of 10\\n\\\\s\\\\n                      drat    wt  \\noooooooooooooooooooooooooooooooooo\\nFerrari Dino          3.62   2.77 \\nMaserati Bora         3.54   3.57 \\nVolvo 142E            4.11   2.78 \\noooooooooooooooooooooooooooooooooo\\n\\n\\n                         page 8 of 10\\n\\\\s\\\\n                      qsec    vs   am\\nooooooooooooooooooooooooooooooooooooo\\nFerrari Dino          15.5    0    1 \\nMaserati Bora         14.6    0    1 \\nVolvo 142E            18.6    1    1 \\nooooooooooooooooooooooooooooooooooooo\\n\\n\\n                         page 9 of 10\\n\\\\s\\\\n                      gear   carb\\nooooooooooooooooooooooooooooooooo\\nFerrari Dino           5      6  \\nMaserati Bora          5      8  \\nVolvo 142E             4      2  \\nooooooooooooooooooooooooooooooooo\\n\\n\\n                        page 10 of 10\\n\""},{"path":"https://insightsengineering.github.io/formatters/main/reference/fmt_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Format configuration ‚Äî fmt_config","title":"Format configuration ‚Äî fmt_config","text":"Format configuration","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/fmt_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format configuration ‚Äî fmt_config","text":"","code":"fmt_config(format = NULL, na_str = \"NA\", align = \"center\")"},{"path":"https://insightsengineering.github.io/formatters/main/reference/fmt_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format configuration ‚Äî fmt_config","text":"format (string function) format label (string) formatter function. na_str (string) string displayed place missing values. align (string) alignment values rendered .","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/fmt_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format configuration ‚Äî fmt_config","text":"object class fmt_config contains following elements: format na_str align","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/fmt_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format configuration ‚Äî fmt_config","text":"","code":"fmt_config(format = \"xx.xx\", na_str = \"-\", align = \"left\") #> An object of class \"fmt_config\" #> Slot \"format\": #> [1] \"xx.xx\" #>  #> Slot \"format_na_str\": #> [1] \"-\" #>  #> Slot \"align\": #> [1] \"left\" #>  fmt_config(format = \"xx.xx - xx.xx\", align = \"right\") #> An object of class \"fmt_config\" #> Slot \"format\": #> [1] \"xx.xx - xx.xx\" #>  #> Slot \"format_na_str\": #> [1] \"NA\" #>  #> Slot \"align\": #> [1] \"right\" #>"},{"path":"https://insightsengineering.github.io/formatters/main/reference/font_lcpi.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate lines per inch and characters per inch for font ‚Äî font_lcpi","title":"Calculate lines per inch and characters per inch for font ‚Äî font_lcpi","text":"Calculate lines per inch characters per inch font","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/font_lcpi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate lines per inch and characters per inch for font ‚Äî font_lcpi","text":"","code":"font_lcpi(   font_family = \"Courier\",   font_size = 8,   lineheight = 1,   fontspec = font_spec(font_family, font_size, lineheight) )"},{"path":"https://insightsengineering.github.io/formatters/main/reference/font_lcpi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate lines per inch and characters per inch for font ‚Äî font_lcpi","text":"font_family (string) name font family. error thrown family named monospaced. Defaults \"Courier\". font_size (numeric(1)) font size. Defaults 12. lineheight (numeric(1)) line height. Defaults 1. fontspec (font_spec) font_spec object specifying font information use calculating string widths heights, returned font_spec().","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/font_lcpi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate lines per inch and characters per inch for font ‚Äî font_lcpi","text":"named list cpi lpi, characters lines per inch, respectively.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/font_lcpi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate lines per inch and characters per inch for font ‚Äî font_lcpi","text":"function opens PDF graphics device, writes temporary file, utilizes grid::convertWidth() grid::convertHeight() calculate lines per inch characters per inch specified font family, size, line height. error thrown font monospaced (determined comparing effective widths M . glyphs).","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/font_lcpi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate lines per inch and characters per inch for font ‚Äî font_lcpi","text":"","code":"font_lcpi <- getFromNamespace(\"font_lcpi\", \"formatters\")  font_lcpi() #> $cpi #> [1] 15 #>  #> $lpi #> [1] 9 #>  font_lcpi(font_size = 8) #> $cpi #> [1] 15 #>  #> $lpi #> [1] 9 #>  font_lcpi(font_size = 8, lineheight = 1.1) #> $cpi #> [1] 15 #>  #> $lpi #> [1] 8.181818 #>"},{"path":"https://insightsengineering.github.io/formatters/main/reference/font_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Font size specification ‚Äî font_spec","title":"Font size specification ‚Äî font_spec","text":"Font size specification","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/font_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Font size specification ‚Äî font_spec","text":"","code":"font_spec(font_family = \"Courier\", font_size = 8, lineheight = 1)"},{"path":"https://insightsengineering.github.io/formatters/main/reference/font_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Font size specification ‚Äî font_spec","text":"font_family (character(1)) font family use string width lines-per-page calculations. can specify \"Times New Roman\" \"Times\" \"serif\", regardless OS. Beyond , see family entry graphics::par() details. font_size (numeric(1)) font size use string width calculations lines-per-page calculations. lineheight (numeric(1)) line height use lines-per-page calculations.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/font_spec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Font size specification ‚Äî font_spec","text":"Passing output constructor rendering pagination machinery defines font use calculating word wrapping pagination.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/font_spec.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Font size specification ‚Äî font_spec","text":"Specifying font way , e.g., export_as_txt() toString() affect font size output, raw text formats. export_as_pdf() use specified font.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/formatters/main/reference/font_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Font size specification ‚Äî font_spec","text":"","code":"fspec <- font_spec(\"Courier\", 8, 1)  lets <- paste(letters, collapse = \"\")  nchar_ttype(lets, fspec) #> [1] 26  fspec2 <- font_spec(\"Times\", 8, 1)  nchar_ttype(lets, fspec2) #> [1] 48"},{"path":"https://insightsengineering.github.io/formatters/main/reference/format_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts a (possibly compound) value into a string using the format information ‚Äî format_value","title":"Converts a (possibly compound) value into a string using the format information ‚Äî format_value","text":"Converts (possibly compound) value string using format information","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/format_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts a (possibly compound) value into a string using the format information ‚Äî format_value","text":"","code":"format_value(   x,   format = NULL,   output = c(\"ascii\", \"html\"),   na_str = \"NA\",   round_type = c(\"iec\", \"sas\") )"},{"path":"https://insightsengineering.github.io/formatters/main/reference/format_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts a (possibly compound) value into a string using the format information ‚Äî format_value","text":"x () value formatted. format (string function) format label (string) formatter function apply x. output (string) output type. na_str (character) character vector display values x missing. one string provided, applied missing values. Defaults \"NA\". round_type (\"iec\" \"sas\") type rounding perform. iec, default, peforms rounding compliant IEC 60559 (see details), sas performs nearest-value rounding consistent rounding within SAS.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/format_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts a (possibly compound) value into a string using the format information ‚Äî format_value","text":"Formatted text representing cell x.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/format_value.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Converts a (possibly compound) value into a string using the format information ‚Äî format_value","text":"length-zero value na_str interpreted \"NA\".","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/formatters/main/reference/format_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts a (possibly compound) value into a string using the format information ‚Äî format_value","text":"","code":"x <- format_value(pi, format = \"xx.xx\") x #> [1] \"3.14\"  format_value(x, output = \"ascii\") #> [1] \"3.14\"  # na_str works with multiple values format_value(c(NA, 1, NA), format = \"xx.x (xx.x - xx.x)\", na_str = c(\"NE\", \"<missing>\")) #> [1] \"NE (1.0 - <missing>)\""},{"path":"https://insightsengineering.github.io/formatters/main/reference/formatters-package.html","id":null,"dir":"Reference","previous_headings":"","what":"formatters Package ‚Äî formatters-package","title":"formatters Package ‚Äî formatters-package","text":"Package format tables listings flexible way.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/formatters/main/reference/formatters-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"formatters Package ‚Äî formatters-package","text":"Maintainer: Joe Zhu joe.zhu@roche.com (ORCID) Authors: Gabriel Becker gabembecker@gmail.com (original creator package) Adrian Waddell adrian.waddell@gene.com Davide Garolini davide.garolini@roche.com Emily de la Rua emily.de_la_rua@contractors.roche.com contributors: Abinaya Yogasekaram abinaya.yogasekaram@contractors.roche.com [contributor] F. Hoffmann-La Roche AG [copyright holder, funder]","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/ifnotlen0.html","id":null,"dir":"Reference","previous_headings":"","what":"%||% (if length-0) alternative operator ‚Äî ifnotlen0","title":"%||% (if length-0) alternative operator ‚Äî ifnotlen0","text":"%||% (length-0) alternative operator","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/ifnotlen0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"%||% (if length-0) alternative operator ‚Äî ifnotlen0","text":"","code":"a %||% b"},{"path":"https://insightsengineering.github.io/formatters/main/reference/ifnotlen0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"%||% (if length-0) alternative operator ‚Äî ifnotlen0","text":"() element select length 0. b () element select length 0.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/ifnotlen0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"%||% (if length-0) alternative operator ‚Äî ifnotlen0","text":"length 0, otherwise b.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/ifnotlen0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"%||% (if length-0) alternative operator ‚Äî ifnotlen0","text":"","code":"6 %||% 10 #> [1] 6  character() %||% \"hi\" #> [1] \"hi\"  NULL %||% \"hi\" #> [1] \"hi\""},{"path":"https://insightsengineering.github.io/formatters/main/reference/is.wholenumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a value is a whole number ‚Äî is.wholenumber","title":"Check if a value is a whole number ‚Äî is.wholenumber","text":"Check value whole number","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/is.wholenumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a value is a whole number ‚Äî is.wholenumber","text":"","code":"is.wholenumber(x, tol = .Machine$double.eps^0.5)"},{"path":"https://insightsengineering.github.io/formatters/main/reference/is.wholenumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a value is a whole number ‚Äî is.wholenumber","text":"x (numeric(1)) numeric value. tol (numeric(1)) precision tolerance.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/is.wholenumber.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a value is a whole number ‚Äî is.wholenumber","text":"TRUE x within tol zero, FALSE otherwise.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/is.wholenumber.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a value is a whole number ‚Äî is.wholenumber","text":"","code":"is.wholenumber(5) #> [1] TRUE is.wholenumber(5.00000000000000001) #> [1] TRUE is.wholenumber(.5) #> [1] FALSE"},{"path":"https://insightsengineering.github.io/formatters/main/reference/lab_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Label, name, and format accessor generics ‚Äî lab_name","title":"Label, name, and format accessor generics ‚Äî lab_name","text":"Getters setters basic, relatively universal attributes \"table-like\" objects.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/lab_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label, name, and format accessor generics ‚Äî lab_name","text":"","code":"obj_name(obj)  obj_name(obj) <- value  obj_label(obj)  obj_label(obj) <- value  # S4 method for class 'ANY' obj_label(obj)  # S4 method for class 'ANY' obj_label(obj) <- value  obj_format(obj)  # S4 method for class 'ANY' obj_format(obj)  # S4 method for class 'fmt_config' obj_format(obj)  obj_format(obj) <- value  # S4 method for class 'ANY' obj_format(obj) <- value  # S4 method for class 'fmt_config' obj_format(obj) <- value  obj_na_str(obj)  # S4 method for class 'ANY' obj_na_str(obj)  # S4 method for class 'fmt_config' obj_na_str(obj)  obj_na_str(obj) <- value  # S4 method for class 'ANY' obj_na_str(obj) <- value  # S4 method for class 'fmt_config' obj_na_str(obj) <- value  obj_align(obj)  # S4 method for class 'ANY' obj_align(obj)  # S4 method for class 'fmt_config' obj_align(obj)  obj_align(obj) <- value  # S4 method for class 'ANY' obj_align(obj) <- value  # S4 method for class 'fmt_config' obj_align(obj) <- value"},{"path":"https://insightsengineering.github.io/formatters/main/reference/lab_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label, name, and format accessor generics ‚Äî lab_name","text":"obj () object. value character(1). new label","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/lab_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label, name, and format accessor generics ‚Äî lab_name","text":"name, format, label obj getters, obj modification setters.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/formatters/main/reference/list_formats.html","id":null,"dir":"Reference","previous_headings":"","what":"List of currently supported formats and vertical alignments ‚Äî list_formats","title":"List of currently supported formats and vertical alignments ‚Äî list_formats","text":"support xx style format labels grouped 1d, 2d, 3d. Currently valid format labels added dynamically. Format functions must used special cases.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/list_formats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of currently supported formats and vertical alignments ‚Äî list_formats","text":"","code":"list_valid_format_labels()  list_valid_aligns()"},{"path":"https://insightsengineering.github.io/formatters/main/reference/list_formats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of currently supported formats and vertical alignments ‚Äî list_formats","text":"list_valid_format_labels() returns nested list, elements listing supported 1d, 2d, 3d format strings. list_valid_aligns() returns character vector valid vertical alignments.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/list_formats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of currently supported formats and vertical alignments ‚Äî list_formats","text":"","code":"list_valid_format_labels() #> $`1d` #>  [1] \"xx\"                 \"xx.\"                \"xx.x\"               #>  [4] \"xx.xx\"              \"xx.xxx\"             \"xx.xxxx\"            #>  [7] \"xx%\"                \"xx.%\"               \"xx.x%\"              #> [10] \"xx.xx%\"             \"xx.xxx%\"            \"(N=xx)\"             #> [13] \"N=xx\"               \">999.9\"             \">999.99\"            #> [16] \"x.xxxx | (<0.0001)\" #>  #> $`2d` #>  [1] \"xx / xx\"            \"xx. / xx.\"          \"xx.x / xx.x\"        #>  [4] \"xx.xx / xx.xx\"      \"xx.xxx / xx.xxx\"    \"N=xx (xx%)\"         #>  [7] \"xx (xx%)\"           \"xx (xx.%)\"          \"xx (xx.x%)\"         #> [10] \"xx (xx.xx%)\"        \"xx. (xx.%)\"         \"xx.x (xx.x%)\"       #> [13] \"xx.xx (xx.xx%)\"     \"(xx, xx)\"           \"(xx., xx.)\"         #> [16] \"(xx.x, xx.x)\"       \"(xx.xx, xx.xx)\"     \"(xx.xxx, xx.xxx)\"   #> [19] \"(xx.xxxx, xx.xxxx)\" \"xx - xx\"            \"xx.x - xx.x\"        #> [22] \"xx.xx - xx.xx\"      \"xx (xx)\"            \"xx. (xx.)\"          #> [25] \"xx.x (xx.x)\"        \"xx.xx (xx.xx)\"      \"xx (xx.)\"           #> [28] \"xx (xx.x)\"          \"xx (xx.xx)\"         \"xx. (xx.x)\"         #> [31] \"xx.x (xx.xx)\"       \"xx.xx (xx.xxx)\"     \"xx, xx\"             #> [34] \"xx.x, xx.x\"         \"xx.xx, xx.xx\"       \"xx.x to xx.x\"       #>  #> $`3d` #> [1] \"xx. (xx. - xx.)\"          \"xx.x (xx.x - xx.x)\"       #> [3] \"xx.xx (xx.xx - xx.xx)\"    \"xx.xxx (xx.xxx - xx.xxx)\" #> [5] \"xx / xx (xx.%)\"           \"xx / xx (xx.x%)\"          #> [7] \"xx / xx (xx.xx%)\"         #>  #> attr(,\"info\") #> [1] \"xx does not modify the element, and xx. rounds a number to 0 digits\"  list_valid_aligns() #> [1] \"left\"      \"right\"     \"center\"    \"decimal\"   \"dec_right\" \"dec_left\""},{"path":"https://insightsengineering.github.io/formatters/main/reference/make_row_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Make row layout summary data frames for use during pagination ‚Äî make_row_df","title":"Make row layout summary data frames for use during pagination ‚Äî make_row_df","text":"relevant information table rows (e.g. indentations) summarized data.frame. function works rtables rlistings objects, print counterparts (like MatrixPrintForm).","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/make_row_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make row layout summary data frames for use during pagination ‚Äî make_row_df","text":"","code":"make_row_df(   tt,   colwidths = NULL,   visible_only = TRUE,   rownum = 0,   indent = 0L,   path = character(),   incontent = FALSE,   repr_ext = 0L,   repr_inds = integer(),   sibpos = NA_integer_,   nsibs = NA_integer_,   max_width = NULL,   fontspec = font_spec(),   col_gap = 3L,   round_type = c(\"iec\", \"sas\") )  # S4 method for class 'MatrixPrintForm' make_row_df(   tt,   colwidths = NULL,   visible_only = TRUE,   rownum = 0,   indent = 0L,   path = character(),   incontent = FALSE,   repr_ext = 0L,   repr_inds = integer(),   sibpos = NA_integer_,   nsibs = NA_integer_,   max_width = NULL,   fontspec = font_spec(),   col_gap = mf_colgap(tt) %||% 3L,   round_type = c(\"iec\", \"sas\") )"},{"path":"https://insightsengineering.github.io/formatters/main/reference/make_row_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make row layout summary data frames for use during pagination ‚Äî make_row_df","text":"tt () object representing table-like object summarized. colwidths (numeric) internal detail, set manually. visible_only (flag) visible aspects table structure reflected summary. Defaults TRUE. May supported methods. rownum (numeric(1)) internal detail, set manually. indent (integer(1)) internal detail, set manually. path (character) path (sub)table represented tt. Defaults character(). incontent (flag) internal detail, set manually. repr_ext (integer(1)) internal detail, set manually. repr_inds (integer) internal detail, set manually. sibpos (integer(1)) internal detail, set manually. nsibs (integer(1)) internal detail, set manually. max_width (numeric(1) NULL) maximum width title/footer materials. fontspec (font_spec) font_spec object specifying font information use calculating string widths heights, returned font_spec(). col_gap (numeric(1)) gap assumed columns, number spaces font specified fontspec. round_type (\"iec\" \"sas\") type rounding perform. iec, default, peforms rounding compliant IEC 60559 (see details), sas performs nearest-value rounding consistent rounding within SAS.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/make_row_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make row layout summary data frames for use during pagination ‚Äî make_row_df","text":"data.frame row/column-structure information used pagination machinery.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/make_row_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make row layout summary data frames for use during pagination ‚Äî make_row_df","text":"visible_only TRUE (default), methods return data.frame exactly one row per visible row table-like object. useful reasoning table print, reflect full pathing space structure (though paths given work ). supported, visible_only FALSE, every structural element table (row-space) reflected returned data.frame, meaning full pathing-space represented rows layout summary represent printed rows table displayed. arguments beyond tt visible_only present make_row_df methods can call make_row_df recursively retain information, set top-level call.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/make_row_df.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Make row layout summary data frames for use during pagination ‚Äî make_row_df","text":"technically present root tree node excluded summary returned make_row_df make_col_df (see relevant functions inrtables), row/column structure tt thus useful pathing pagination.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/make_row_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make row layout summary data frames for use during pagination ‚Äî make_row_df","text":"","code":"# Expected error with matrix_form. For real case examples consult {rtables} documentation mf <- basic_matrix_form(iris) # make_row_df(mf) # Use table obj instead"},{"path":"https://insightsengineering.github.io/formatters/main/reference/matrix_form.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform rtable to a list of matrices which can be used for outputting ‚Äî matrix_form","title":"Transform rtable to a list of matrices which can be used for outputting ‚Äî matrix_form","text":"Although rtables represented tree data structure outputting table ASCII HTML, useful map rtable -state formatted cells matrix form.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/matrix_form.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform rtable to a list of matrices which can be used for outputting ‚Äî matrix_form","text":"","code":"matrix_form(   obj,   indent_rownames = FALSE,   expand_newlines = TRUE,   indent_size = 2,   fontspec = NULL,   col_gap = NULL,   round_type = c(\"iec\", \"sas\") )  # S4 method for class 'MatrixPrintForm' matrix_form(   obj,   indent_rownames = FALSE,   expand_newlines = TRUE,   indent_size = 2,   fontspec = NULL,   col_gap = NULL,   round_type = c(\"iec\", \"sas\") )"},{"path":"https://insightsengineering.github.io/formatters/main/reference/matrix_form.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform rtable to a list of matrices which can be used for outputting ‚Äî matrix_form","text":"obj () object transformed ready--render form (MatrixPrintForm object). indent_rownames (flag) TRUE, row names column strings matrix obj indented row names (strings pre-fixed). expand_newlines (flag) whether generated matrix form expand rows whose values contain newlines multiple 'physical' rows (appear rendered ASCII). Defaults TRUE. indent_size (numeric(1)) number spaces used per level indent (supported relevant method). Defaults 2. fontspec (font_spec) font_spec object specifying font information use calculating string widths heights, returned font_spec(). col_gap (numeric(1)) gap assumed columns, number spaces font specified fontspec. round_type (\"iec\" \"sas\") type rounding perform. iec, default, peforms rounding compliant IEC 60559 (see details), sas performs nearest-value rounding consistent rounding within SAS.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/matrix_form.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform rtable to a list of matrices which can be used for outputting ‚Äî matrix_form","text":"MatrixPrintForm classed list additional nrow_header attribute indicating number pseudo \"rows\" column structure defines, following elements: strings content, printed, top-left material, column headers, row labels, cell values tt. spans column-span information print-string strings matrix. aligns text alignment print-string strings matrix. display Whether print-string strings matrix printed . row_info data.frame generated basic_pagdf().","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/mpf_accessors.html","id":null,"dir":"Reference","previous_headings":"","what":"Getters and setters for aspects of MatrixPrintForm objects ‚Äî mf_strings","title":"Getters and setters for aspects of MatrixPrintForm objects ‚Äî mf_strings","text":"functions, particularly setters, intended almost exclusively internal use , e.g., matrix_form methods, generally called end users.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/mpf_accessors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getters and setters for aspects of MatrixPrintForm objects ‚Äî mf_strings","text":"","code":"mf_strings(mf)  mf_spans(mf)  mf_aligns(mf)  mf_display(mf)  mf_formats(mf)  mf_rinfo(mf)  mf_cinfo(mf)  mf_has_topleft(mf)  mf_lgrouping(mf)  mf_rfnotes(mf)  mf_nlheader(mf)  mf_nrheader(mf)  mf_colgap(mf)  mf_fontspec(mf)  mf_fontspec(mf) <- value  mf_strings(mf) <- value  mf_spans(mf) <- value  mf_aligns(mf) <- value  mf_display(mf) <- value  mf_formats(mf) <- value  mf_rinfo(mf) <- value  mf_cinfo(mf) <- value  mf_lgrouping(mf) <- value  mf_rfnotes(mf) <- value  mf_nrheader(mf) <- value  mf_colgap(mf) <- value  mf_ncol(mf)  mf_nrow(mf)  mf_ncol(mf) <- value  # S4 method for class 'MatrixPrintForm' ncol(x)  mpf_has_rlabels(mf)  mf_has_rlabels(mf)"},{"path":"https://insightsengineering.github.io/formatters/main/reference/mpf_accessors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getters and setters for aspects of MatrixPrintForm objects ‚Äî mf_strings","text":"mf (MatrixPrintForm) MatrixPrintForm object. value () new value component question. x MatrixPrintForm. object.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/mpf_accessors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getters and setters for aspects of MatrixPrintForm objects ‚Äî mf_strings","text":"Getters return associated element mf. Setters return modified mf object.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/mpf_to_rtf.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform MatrixPrintForm to RTF ‚Äî mpf_to_rtf","title":"Transform MatrixPrintForm to RTF ‚Äî mpf_to_rtf","text":"Experimental export rich text format (RTF) via r2rtf package.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/mpf_to_rtf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform MatrixPrintForm to RTF ‚Äî mpf_to_rtf","text":"","code":"mpf_to_rtf(   mpf,   colwidths = NULL,   page_type = \"letter\",   pg_width = page_dim(page_type)[if (landscape) 2 else 1],   pg_height = page_dim(page_type)[if (landscape) 1 else 2],   landscape = FALSE,   margins = c(4, 4, 4, 4),   font_family = \"Courier\",   font_size = 8,   lineheight = 1,   fontspec = font_spec(font_family, font_size, lineheight),   round_type = round_type,   ... )"},{"path":"https://insightsengineering.github.io/formatters/main/reference/mpf_to_rtf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform MatrixPrintForm to RTF ‚Äî mpf_to_rtf","text":"mpf (MatrixPrintForm) MatrixPrintForm object. colwidths (numeric) column widths. page_type (string) name page type. See page_types. Ignored pg_width pg_height set directly. pg_width (numeric(1)) page width inches. pg_height (numeric(1)) page height inches. landscape (flag) whether dimensions page_type inverted landscape orientation. Defaults FALSE, ignored pg_width pg_height set directly. margins (numeric(4)) named numeric vector containing \"bottom\", \"left\", \"top\", \"right\" margins inches. Defaults .5 inches vertical margins .75 horizontal margins. font_family (string) name font family. error thrown family named monospaced. Defaults \"Courier\". font_size (numeric(1)) font size. Defaults 12. lineheight (numeric(1)) line height. Defaults 1. fontspec (font_spec) font_spec object specifying font information use calculating string widths heights, returned font_spec(). round_type (\"iec\" \"sas\") type rounding perform. iec, default, peforms rounding compliant IEC 60559 (see details), sas performs nearest-value rounding consistent rounding within SAS. ... additional parameters passed individual methods.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/mpf_to_rtf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform MatrixPrintForm to RTF ‚Äî mpf_to_rtf","text":"RTF object.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/mpf_to_rtf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform MatrixPrintForm to RTF ‚Äî mpf_to_rtf","text":"function provides low-level coercion MatrixPrintForm object text containing corresponding table RTF. Currently, pagination done level, done prior calling function, though may change future.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/nchar_ttype.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate font-specific string width ‚Äî nchar_ttype","title":"Calculate font-specific string width ‚Äî nchar_ttype","text":"function returns width element x multiple width space character declared font, rounded nearest integer. used extensively text rendering (toString()) pagination machinery calculating word wrapping, default column widths, lines per page, etc.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/nchar_ttype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate font-specific string width ‚Äî nchar_ttype","text":"","code":"nchar_ttype(   x,   fontspec = font_spec(),   tol = sqrt(.Machine$double.eps),   raw = FALSE )"},{"path":"https://insightsengineering.github.io/formatters/main/reference/nchar_ttype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate font-specific string width ‚Äî nchar_ttype","text":"x (character) string(s) calculate width(s) . fontspec (font_spec NULL) non-NULL, font use calculations (returned font_spec()). Defaults \"Courier\", monospace font. NULL, width returned number characters calling nchar directly. tol (numeric(1)) tolerance use determining multiple needs rounded next integer. See Details. raw (logical(1)) whether unrounded widths returned. Defaults FALSE.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/nchar_ttype.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate font-specific string width ‚Äî nchar_ttype","text":"String width defined terms spaces within specified font. monospace fonts, definition collapses number characters string (nchar()), truetype fonts . raw = FALSE, non-integer values (norm truetype setting) number spaces string takes rounded , unless multiple less tol last integer . E.g., k - num_spaces < tol integer k, k returned instead k+1.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/formatters/main/reference/nchar_ttype.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate font-specific string width ‚Äî nchar_ttype","text":"","code":"nchar_ttype(\"hi there!\") #> [1] 9  nchar_ttype(\"hi there!\", font_spec(\"Times\")) #> [1] 14"},{"path":"https://insightsengineering.github.io/formatters/main/reference/nlines.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of lines required to print a value ‚Äî nlines","title":"Number of lines required to print a value ‚Äî nlines","text":"Number lines required print value","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/nlines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of lines required to print a value ‚Äî nlines","text":"","code":"nlines(x, colwidths = NULL, max_width = NULL, fontspec, col_gap = NULL)  # S4 method for class 'list' nlines(x, colwidths = NULL, max_width = NULL, fontspec, col_gap = NULL)  # S4 method for class 'NULL' nlines(x, colwidths = NULL, max_width = NULL, fontspec, col_gap = NULL)  # S4 method for class 'character' nlines(x, colwidths = NULL, max_width = NULL, fontspec, col_gap = NULL)"},{"path":"https://insightsengineering.github.io/formatters/main/reference/nlines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of lines required to print a value ‚Äî nlines","text":"x () object printed. colwidths (numeric) column widths (necessary). Principally used rtables' method. max_width (numeric(1)) width strings wrapped determining many lines require. fontspec (font_spec) font_spec object specifying font information use calculating string widths heights, returned font_spec(). col_gap (numeric(1)) width gap columns number spaces. used methods must calculate span widths wrapping.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/nlines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of lines required to print a value ‚Äî nlines","text":"number lines needed render object x.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/num_rep_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of repeated columns ‚Äî num_rep_cols","title":"Number of repeated columns ‚Äî num_rep_cols","text":"called table-like object using formatters framework, method returns number columns mandatorily repeated horizontal pagination.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/num_rep_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of repeated columns ‚Äî num_rep_cols","text":"","code":"num_rep_cols(obj)  # S4 method for class 'ANY' num_rep_cols(obj)  # S4 method for class 'MatrixPrintForm' num_rep_cols(obj)  num_rep_cols(obj) <- value  # S4 method for class 'ANY' num_rep_cols(obj) <- value  # S4 method for class 'MatrixPrintForm' num_rep_cols(obj) <- value"},{"path":"https://insightsengineering.github.io/formatters/main/reference/num_rep_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of repeated columns ‚Äî num_rep_cols","text":"obj () table-like object. value (numeric(1)) new number columns repeat.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/num_rep_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of repeated columns ‚Äî num_rep_cols","text":"integer.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/num_rep_cols.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Number of repeated columns ‚Äî num_rep_cols","text":"Absent class-specific method, function returns 0, indicating always-repeated columns.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/num_rep_cols.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Number of repeated columns ‚Äî num_rep_cols","text":"number include row labels, repetition handled separately.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/num_rep_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of repeated columns ‚Äî num_rep_cols","text":"","code":"mpf <- basic_matrix_form(mtcars) num_rep_cols(mpf) #> [1] 0 lmpf <- basic_listing_mf(mtcars) num_rep_cols(lmpf) #> [1] 1"},{"path":"https://insightsengineering.github.io/formatters/main/reference/open_font_dev.html","id":null,"dir":"Reference","previous_headings":"","what":"Activate font state ‚Äî open_font_dev","title":"Activate font state ‚Äî open_font_dev","text":"Activate font state","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/open_font_dev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Activate font state ‚Äî open_font_dev","text":"","code":"open_font_dev(fontspec, silent = FALSE)  close_font_dev()  debug_font_dev()  undebug_font_dev()"},{"path":"https://insightsengineering.github.io/formatters/main/reference/open_font_dev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Activate font state ‚Äî open_font_dev","text":"fontspec (font_spec) font_spec object specifying font information use calculating string widths heights, returned font_spec(). silent (logical(1)) FALSE, default, warning emitted function switches away active graphics device.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/open_font_dev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Activate font state ‚Äî open_font_dev","text":"open_font_dev returns logical value indicating whether new pdf device opened. close_font_dev, debug_font_dev undebug_font_dev return NULL. cases value returned invisibly.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/open_font_dev.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Activate font state ‚Äî open_font_dev","text":"font device state environment four variables guaranteed set: open (logical(1)) whether device already open font info fontspec (font_spec) font specification, , currently active (list() none ). spacewidth (numeric(1)) width space character currently active font. ismonospace (logical(1)) whether specified font monospaced. open_font_dev opens pdf device specified font one currently open font. new device opened, caches spacewidth ismonospace use nchar_ttype). close_font_dev closes open font state device clears cached values. debug_font_dev undebug_font_dev activate deactivate, respectively, logging call stack font devices opened.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/open_font_dev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Activate font state ‚Äî open_font_dev","text":"","code":"open_font_dev(font_spec(\"Times\")) nchar_ttype(\"Hiya there\", font_spec(\"Times\")) #> [1] 17 close_font_dev()"},{"path":"https://insightsengineering.github.io/formatters/main/reference/padstr.html","id":null,"dir":"Reference","previous_headings":"","what":"Pad a string and align within string ‚Äî padstr","title":"Pad a string and align within string ‚Äî padstr","text":"Pad string align within string","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/padstr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pad a string and align within string ‚Äî padstr","text":"","code":"padstr(x, n, just = list_valid_aligns(), fontspec = font_spec())"},{"path":"https://insightsengineering.github.io/formatters/main/reference/padstr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pad a string and align within string ‚Äî padstr","text":"x (string) string. n (integer(1)) number characters output string. n < nchar(x), error thrown. just (string) text alignment justification use. Defaults \"center\". Must one \"center\", \"right\", \"left\", \"dec_right\", \"dec_left\", \"decimal\". fontspec (font_spec) font_spec object specifying font information use calculating string widths heights, returned font_spec().","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/padstr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pad a string and align within string ‚Äî padstr","text":"x, padded string length n.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/padstr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pad a string and align within string ‚Äî padstr","text":"","code":"padstr(\"abc\", 3) #> [1] \"abc\" padstr(\"abc\", 4) #> [1] \"abc \" padstr(\"abc\", 5) #> [1] \"abc  \" padstr(\"abc\", 5, \"left\") #> [1] \"abc  \" padstr(\"abc\", 5, \"right\") #> [1] \"  abc\"  if (FALSE) { # \\dontrun{ # Expect error: \"abc\" has more than 1 characters padstr(\"abc\", 1) } # }"},{"path":"https://insightsengineering.github.io/formatters/main/reference/pag_indices_inner.html","id":null,"dir":"Reference","previous_headings":"","what":"Find pagination indices from pagination info data frame ‚Äî pag_indices_inner","title":"Find pagination indices from pagination info data frame ‚Äî pag_indices_inner","text":"Pagination methods typically call make_row_df method object call function resulting pagination info data.frame.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/pag_indices_inner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find pagination indices from pagination info data frame ‚Äî pag_indices_inner","text":"","code":"pag_indices_inner(   pagdf,   rlpp,   lpp_or_cpp = NA_integer_,   context_lpp_or_cpp = NA_integer_,   min_siblings,   nosplitin = character(),   verbose = FALSE,   row = TRUE,   have_col_fnotes = FALSE,   div_height = 1L,   col_gap = 3L,   has_rowlabels )"},{"path":"https://insightsengineering.github.io/formatters/main/reference/pag_indices_inner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find pagination indices from pagination info data frame ‚Äî pag_indices_inner","text":"pagdf (data.frame) pagination info data.frame created either make_rows_df make_cols_df. rlpp (numeric) maximum number row lines per page (including header materials), including (re)printed header context rows. lpp_or_cpp (numeric) total maximum number row lines content (column-wise characters) per page (including header materials context rows). informative results verbose = TRUE. print NA specified pagination machinery. context_lpp_or_cpp (numeric) total number context row lines content (column-wise characters) per page (including header materials). Uses NA specified pagination machinery informative results verbose = TRUE. min_siblings (numeric) minimum sibling rows must appear either side pagination row mid-subtable split valid. Defaults 2 tables. automatically turned (set 0) listings. nosplitin (character) list names subtables page breaks allowed, regardless considerations. Defaults none. verbose (flag) whether additional informative messages search pagination breaks shown. Defaults FALSE. row (flag) whether pagination happening row space (TRUE, default) column space (FALSE). have_col_fnotes (flag) whether table-like object rendered column-associated referential footnotes. div_height (numeric(1)) height divider line associated object rendered. Defaults 1. col_gap (numeric(1)) width gap columns, units extent pagdf (spaces particular font specification). has_rowlabels (logical(1)) whether object paginated row labels.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/pag_indices_inner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find pagination indices from pagination info data frame ‚Äî pag_indices_inner","text":"list containing vector row numbers, broken page.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/pag_indices_inner.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find pagination indices from pagination info data frame ‚Äî pag_indices_inner","text":"pab_indices_inner implements core pagination algorithm (see ) single direction (vertical row = TRUE (default), horizontal otherwise) based pagination data frame (already adjusted non-body rows/columns) lines (characters) per page.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/pag_indices_inner.html","id":"pagination-algorithm","dir":"Reference","previous_headings":"","what":"Pagination Algorithm","title":"Find pagination indices from pagination info data frame ‚Äî pag_indices_inner","text":"Pagination performed independently vertical horizontal directions based solely pagination data frame, includes following information row/column: Number lines/characters rendering row take word-wrapping (self_extent) indices (reprint_inds) number lines (par_extent) rows act context row row's number siblings position within siblings Given lpp (cpp) already adjusted rendered elements rows/columns data frame pagination information, pagination performed via following algorithm start = 1. Core Pagination Algorithm: Initial guess pagination position start + lpp (start + cpp) guess valid pagination position, guess > start, decrement guess repeat. error thrown possible pagination positions start start + lpp (start + cpp) < start decrementing Retain pagination index pagination point less NROW(tt) (ncol(tt)), set start pos + 1, repeat steps (1) - (4). Validating Pagination Position: Given (already adjusted) lpp cpp value, pagination invalid : rows/columns page take (adjusted) lpp lines/cpp characters render including: word-wrapping (vertical ) context repetition (vertical ) footnote messages /section divider lines take many lines rendering rows (vertical ) row label content (row-group summary) row (vertical ) row pagination point siblings, less min_siblings preceding following siblings pagination occur within sub-table listed nosplitin","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/pag_indices_inner.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find pagination indices from pagination info data frame ‚Äî pag_indices_inner","text":"","code":"mypgdf <- basic_pagdf(row.names(mtcars))  paginds <- pag_indices_inner(mypgdf, rlpp = 15, min_siblings = 0) lapply(paginds, function(x) mtcars[x, ]) #> [[1]] #>                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4          21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag      21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710         22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive     21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout  18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2 #> Valiant            18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1 #> Duster 360         14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4 #> Merc 240D          24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #> Merc 230           22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2 #> Merc 280           19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4 #> Merc 280C          17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4 #> Merc 450SE         16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3 #> Merc 450SL         17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3 #> Merc 450SLC        15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3 #> Cadillac Fleetwood 10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4 #>  #> [[2]] #>                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb #> Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4 #> Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4 #> Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1 #> Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2 #> Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1 #> Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1 #> Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2 #> AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2 #> Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4 #> Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2 #> Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1 #> Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2 #> Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2 #> Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4 #> Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6 #>  #> [[3]] #>                mpg cyl disp  hp drat   wt qsec vs am gear carb #> Maserati Bora 15.0   8  301 335 3.54 3.57 14.6  0  1    5    8 #> Volvo 142E    21.4   4  121 109 4.11 2.78 18.6  1  1    4    2 #>"},{"path":"https://insightsengineering.github.io/formatters/main/reference/pagdfrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a row of a pagination data frame ‚Äî pagdfrow","title":"Create a row of a pagination data frame ‚Äî pagdfrow","text":"Create row pagination data frame","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/pagdfrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a row of a pagination data frame ‚Äî pagdfrow","text":"","code":"pagdfrow(   row,   nm = obj_name(row),   lab = obj_label(row),   rnum,   pth,   sibpos = NA_integer_,   nsibs = NA_integer_,   extent = nlines(row, colwidths, fontspec = fontspec),   colwidths = NULL,   repext = 0L,   repind = integer(),   indent = 0L,   rclass = class(row),   nrowrefs = 0L,   ncellrefs = 0L,   nreflines = 0L,   force_page = FALSE,   page_title = NA_character_,   trailing_sep = NA_character_,   fontspec )"},{"path":"https://insightsengineering.github.io/formatters/main/reference/pagdfrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a row of a pagination data frame ‚Äî pagdfrow","text":"row () object representing row, used default values nm, lab, extent, rclass provided. Must methods obj_name, obj_label, nlines, retrieve default values nm, lab, extent, respectively. nm (string) name. lab (string) label. rnum (numeric(1)) absolute row number. pth (character NULL) path within larger table. sibpos (integer(1)) position among sibling rows. nsibs (integer(1)) number siblings (including self). extent (numeric(1)) number lines required print row. colwidths (numeric) column widths. repext (integer(1)) number lines required reprint context row appears directly pagination. repind (integer) vector row numbers reprinted row appears directly pagination. indent (integer) indent. rclass (string) class row object. nrowrefs (integer(1)) number row referential footnotes row. ncellrefs (integer(1)) number cell referential footnotes cells row. nreflines (integer(1)) total number lines required referential footnotes. force_page (flag) currently ignored. page_title (flag) currently ignored. trailing_sep (string) string use separator row printing. NA_character_, separator used. fontspec (font_spec) font_spec object specifying font information use calculating string widths heights, returned font_spec().","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/pagdfrow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a row of a pagination data frame ‚Äî pagdfrow","text":"single row data.frame appropriate columns pagination info data frame.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/page_lcpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine lines per page (LPP) and characters per page (CPP) based on font and page type ‚Äî page_lcpp","title":"Determine lines per page (LPP) and characters per page (CPP) based on font and page type ‚Äî page_lcpp","text":"Determine lines per page (LPP) characters per page (CPP) based font page type","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/page_lcpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine lines per page (LPP) and characters per page (CPP) based on font and page type ‚Äî page_lcpp","text":"","code":"page_lcpp(   page_type = page_types(),   landscape = FALSE,   font_family = \"Courier\",   font_size = 8,   lineheight = 1,   margins = c(top = 0.5, bottom = 0.5, left = 0.75, right = 0.75),   pg_width = NULL,   pg_height = NULL,   fontspec = font_spec(font_family, font_size, lineheight) )"},{"path":"https://insightsengineering.github.io/formatters/main/reference/page_lcpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine lines per page (LPP) and characters per page (CPP) based on font and page type ‚Äî page_lcpp","text":"page_type (string) name page type. See page_types. Ignored pg_width pg_height set directly. landscape (flag) whether dimensions page_type inverted landscape orientation. Defaults FALSE, ignored pg_width pg_height set directly. font_family (string) name font family. error thrown family named monospaced. Defaults \"Courier\". font_size (numeric(1)) font size. Defaults 12. lineheight (numeric(1)) line height. Defaults 1. margins (numeric(4)) named numeric vector containing \"bottom\", \"left\", \"top\", \"right\" margins inches. Defaults .5 inches vertical margins .75 horizontal margins. pg_width (numeric(1)) page width inches. pg_height (numeric(1)) page height inches. fontspec (font_spec) font_spec object specifying font information use calculating string widths heights, returned font_spec().","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/page_lcpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine lines per page (LPP) and characters per page (CPP) based on font and page type ‚Äî page_lcpp","text":"named list containing LPP (lines per page) CPP (characters per page) elements suitable use pagination machinery.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/page_lcpp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine lines per page (LPP) and characters per page (CPP) based on font and page type ‚Äî page_lcpp","text":"","code":"page_lcpp() #> $cpp #> [1] 105 #>  #> $lpp #> [1] 90 #>  page_lcpp(font_size = 10) #> $cpp #> [1] 84 #>  #> $lpp #> [1] 72 #>  page_lcpp(\"a4\", font_size = 10) #> $cpp #> [1] 81 #>  #> $lpp #> [1] 76 #>   page_lcpp(margins = c(top = 1, bottom = 1, left = 1, right = 1)) #> $cpp #> [1] 97 #>  #> $lpp #> [1] 81 #>  page_lcpp(pg_width = 10, pg_height = 15) #> $cpp #> [1] 127 #>  #> $lpp #> [1] 126 #>"},{"path":"https://insightsengineering.github.io/formatters/main/reference/page_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Supported named page types ‚Äî page_types","title":"Supported named page types ‚Äî page_types","text":"List supported named page types.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/page_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Supported named page types ‚Äî page_types","text":"","code":"page_types()  page_dim(page_type)"},{"path":"https://insightsengineering.github.io/formatters/main/reference/page_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Supported named page types ‚Äî page_types","text":"page_type (string) name page size specification. Call page_types() supported values.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/page_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Supported named page types ‚Äî page_types","text":"page_types returns character vector supported page types page_dim returns dimensions (width, height) selected page type.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/page_types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Supported named page types ‚Äî page_types","text":"","code":"page_types() #> [1] \"letter\" \"a4\"     \"legal\"  page_dim(\"a4\") #> [1]  8.27 11.69"},{"path":"https://insightsengineering.github.io/formatters/main/reference/paginate_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Paginate a table-like object for rendering ‚Äî paginate_indices","title":"Paginate a table-like object for rendering ‚Äî paginate_indices","text":"functions perform diagnose bi-directional pagination object.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/paginate_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paginate a table-like object for rendering ‚Äî paginate_indices","text":"","code":"paginate_indices(   obj,   page_type = \"letter\",   font_family = \"Courier\",   font_size = 8,   lineheight = 1,   landscape = FALSE,   pg_width = NULL,   pg_height = NULL,   margins = c(top = 0.5, bottom = 0.5, left = 0.75, right = 0.75),   lpp = NA_integer_,   cpp = NA_integer_,   min_siblings = 2,   nosplitin = list(rows = character(), cols = character()),   colwidths = NULL,   tf_wrap = FALSE,   max_width = NULL,   indent_size = 2,   pg_size_spec = NULL,   rep_cols = num_rep_cols(obj),   col_gap = 3,   fontspec = font_spec(font_family, font_size, lineheight),   round_type = c(\"iec\", \"sas\"),   verbose = FALSE )  paginate_to_mpfs(   obj,   page_type = \"letter\",   font_family = \"Courier\",   font_size = 8,   lineheight = 1,   landscape = FALSE,   pg_width = NULL,   pg_height = NULL,   margins = c(top = 0.5, bottom = 0.5, left = 0.75, right = 0.75),   lpp = NA_integer_,   cpp = NA_integer_,   min_siblings = 2,   nosplitin = character(),   colwidths = NULL,   tf_wrap = FALSE,   max_width = NULL,   indent_size = 2,   pg_size_spec = NULL,   page_num = default_page_number(),   rep_cols = NULL,   col_gap = 3,   fontspec = font_spec(font_family, font_size, lineheight),   round_type = c(\"iec\", \"sas\"),   verbose = FALSE )  diagnose_pagination(   obj,   page_type = \"letter\",   font_family = \"Courier\",   font_size = 8,   lineheight = 1,   landscape = FALSE,   pg_width = NULL,   pg_height = NULL,   margins = c(top = 0.5, bottom = 0.5, left = 0.75, right = 0.75),   lpp = NA_integer_,   cpp = NA_integer_,   min_siblings = 2,   nosplitin = character(),   colwidths = propose_column_widths(matrix_form(obj, TRUE, round_type = round_type),     fontspec = fontspec, round_type = round_type),   tf_wrap = FALSE,   max_width = NULL,   indent_size = 2,   pg_size_spec = NULL,   rep_cols = num_rep_cols(obj),   col_gap = 3,   verbose = FALSE,   fontspec = font_spec(font_family, font_size, lineheight),   round_type = c(\"iec\", \"sas\"),   ... )"},{"path":"https://insightsengineering.github.io/formatters/main/reference/paginate_indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Paginate a table-like object for rendering ‚Äî paginate_indices","text":"obj () object paginated. Must matrix_form() method. page_type (string) name page type. See page_types. Ignored pg_width pg_height set directly. font_family (string) name font family. error thrown family named monospaced. Defaults \"Courier\". font_size (numeric(1)) font size. Defaults 12. lineheight (numeric(1)) line height. Defaults 1. landscape (flag) whether dimensions page_type inverted landscape orientation. Defaults FALSE, ignored pg_width pg_height set directly. pg_width (numeric(1)) page width inches. pg_height (numeric(1)) page height inches. margins (numeric(4)) named numeric vector containing \"bottom\", \"left\", \"top\", \"right\" margins inches. Defaults .5 inches vertical margins .75 horizontal margins. lpp (numeric(1) NULL) lines per page. NA (default), calculated automatically based specified page size). NULL indicates vertical pagination occur. cpp (numeric(1) NULL) width (characters) per page. NA (default), calculated automatically based specified page size). NULL indicates horizontal pagination occur. min_siblings (numeric) minimum sibling rows must appear either side pagination row mid-subtable split valid. Defaults 2 tables. automatically turned (set 0) listings. nosplitin (character) list names subtables page breaks allowed, regardless considerations. Defaults none. colwidths (numeric) vector column widths (characters) use vertical pagination. tf_wrap (flag) whether text title, subtitles, footnotes wrapped. max_width (integer(1), string NULL) width title footer (including footnotes) materials word-wrapped . NULL, set current print width session (getOption(\"width\")). set \"auto\", width table (plus table inset) used. Parameter ignored tf_wrap = FALSE. indent_size (numeric(1)) indent size, characters. Ignored x already MatrixPrintForm object favor information . pg_size_spec (page_size_spec). pre-calculated page size specification. Typically set end users. rep_cols (numeric(1)) number columns (including row labels) repeated every page. Defaults 0. col_gap (numeric(1)) number spaces placed columns rendered table (assumed horizontal pagination). fontspec (font_spec) font_spec object specifying font information use calculating string widths heights, returned font_spec(). round_type (\"iec\" \"sas\") type rounding perform. iec, default, peforms rounding compliant IEC 60559 (see details), sas performs nearest-value rounding consistent rounding within SAS. verbose (flag) whether additional informative messages search pagination breaks shown. Defaults FALSE. page_num (string) placeholder string page numbers. See default_page_number information. Defaults NULL. ... additional parameters passed individual methods.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/paginate_indices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Paginate a table-like object for rendering ‚Äî paginate_indices","text":"paginate_indices returns list two elements length: pag_row_indices pag_col_indices. paginate_to_mpfs returns list  MatrixPrintForm objects representing individual page pagination (including forced pagination necessary). diagnose_pagination returns list containing: lpp_diagnostics Diagnostic information regarding lines per page. row_diagnostics Basic information rows, whether pagination attempted row, final result attempt, made. cpp_diagnostics Diagnostic information regarding columns per page. col_diagnostics basic information leaf columns, whether pagination attempted leaf column, ad final result attempts, made.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/paginate_indices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Paginate a table-like object for rendering ‚Äî paginate_indices","text":"paginate_indices renders obj MatrixPrintForm (MPF), uses representation calculate rows columns obj corresponding page pagination obj, simply returns indices rather paginating obj (see Details important caveat). paginate_to_mpfs renders obj MPF intermediate representation, paginates MPF component MPFs corresponding individual page returns list. diagnose_pagination attempts pagination via paginate_to_mpfs, returns diagnostic information explains page breaks positioned , alternatively valid pagination found. three functions generally support classes corresponding matrix_form() method returns valid MatrixPrintForm object (including MatrixPrintForm objects ). paginate_indices directly called paginate_to_mpfs (thus diagnose_pagination). classes, tables represented supported classes, calling paginate_to_mpfs equivalent manual paginate_indices -> subset obj pages -> matrix_form workflow. exception equivalence objects support \"forced pagination\", pagination logic built object rather function space page. Forced pagination generally involves creation , e.g., page-specific titles apply forced paginations. paginate_to_mpfs diagnose_pagination support forced pagination automatically calling do_forced_paginate() generic object paginating object returned generic separately. assumption , , page-specific titles handled class' do_forced_paginate() method. paginate_indices, hand, support forced pagination, returns set indices row column subsetting page, thus retain changes, e.g., titles, done within do_forced_paginate(). paginate_indices call do_forced_paginate(), instead continuing throws error case result larger single \"page\". diagnose_pagination attempts pagination , regardless success failure, returns diagnostic information pagination attempts () row column. diagnostics data reflects final time pagination algorithm evaluated page break specified location, regardless many times position assessed total. get information intermediate attempts, perform pagination verbose = TRUE inspect messages order.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/paginate_indices.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Paginate a table-like object for rendering ‚Äî paginate_indices","text":"diagnose_pagination, column labels displayed col_diagnostics element due certain internal implementation details; rather diagnostics reported terms absolute (leaf) column position. known limitation, may eventually changed, information remains useful currently reported. diagnose_pagination intended interactive debugging use programmed , exact content form verbose messages captures returns subject change. diagnose_pagination relies capture.output(type = \"message\"), used within testthat (likely ) testing frameworks, likely used within knitr/rmarkdown contexts either, clashes systems' capture messages.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/paginate_indices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Paginate a table-like object for rendering ‚Äî paginate_indices","text":"","code":"mpf <- basic_matrix_form(mtcars)  paginate_indices(mpf, pg_width = 5, pg_height = 3) #> $pag_row_indices #> $pag_row_indices[[1]] #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 #>  #> $pag_row_indices[[2]] #>  [1] 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 #>  #>  #> $pag_col_indices #> $pag_col_indices[[1]] #> [1] 1 2 3 4 #>  #> $pag_col_indices[[2]] #> [1] 5 6 7 8 9 #>  #> $pag_col_indices[[3]] #> [1] 10 11 #>  #>   paginate_to_mpfs(mpf, pg_width = 5, pg_height = 3) #> [[1]] #> $strings #>       rnms                mpg    cyl   disp    hp    #>  [1,] \"\"                  \"mpg\"  \"cyl\" \"disp\"  \"hp\"  #>  [2,] \"Mazda RX4\"         \"21\"   \"6\"   \"160\"   \"110\" #>  [3,] \"Mazda RX4 Wag\"     \"21\"   \"6\"   \"160\"   \"110\" #>  [4,] \"Datsun 710\"        \"22.8\" \"4\"   \"108\"   \"93\"  #>  [5,] \"Hornet 4 Drive\"    \"21.4\" \"6\"   \"258\"   \"110\" #>  [6,] \"Hornet Sportabout\" \"18.7\" \"8\"   \"360\"   \"175\" #>  [7,] \"Valiant\"           \"18.1\" \"6\"   \"225\"   \"105\" #>  [8,] \"Duster 360\"        \"14.3\" \"8\"   \"360\"   \"245\" #>  [9,] \"Merc 240D\"         \"24.4\" \"4\"   \"146.7\" \"62\"  #> [10,] \"Merc 230\"          \"22.8\" \"4\"   \"140.8\" \"95\"  #> [11,] \"Merc 280\"          \"19.2\" \"6\"   \"167.6\" \"123\" #> [12,] \"Merc 280C\"         \"17.8\" \"6\"   \"167.6\" \"123\" #> [13,] \"Merc 450SE\"        \"16.4\" \"8\"   \"275.8\" \"180\" #> [14,] \"Merc 450SL\"        \"17.3\" \"8\"   \"275.8\" \"180\" #>  #> $spans #>       [,1] [,2] [,3] [,4] [,5] #>  [1,]    1    1    1    1    1 #>  [2,]    1    1    1    1    1 #>  [3,]    1    1    1    1    1 #>  [4,]    1    1    1    1    1 #>  [5,]    1    1    1    1    1 #>  [6,]    1    1    1    1    1 #>  [7,]    1    1    1    1    1 #>  [8,]    1    1    1    1    1 #>  [9,]    1    1    1    1    1 #> [10,]    1    1    1    1    1 #> [11,]    1    1    1    1    1 #> [12,]    1    1    1    1    1 #> [13,]    1    1    1    1    1 #> [14,]    1    1    1    1    1 #>  #> $aligns #>       [,1]   [,2]     [,3]     [,4]     [,5]     #>  [1,] \"left\" \"center\" \"center\" \"center\" \"center\" #>  [2,] \"left\" \"center\" \"center\" \"center\" \"center\" #>  [3,] \"left\" \"center\" \"center\" \"center\" \"center\" #>  [4,] \"left\" \"center\" \"center\" \"center\" \"center\" #>  [5,] \"left\" \"center\" \"center\" \"center\" \"center\" #>  [6,] \"left\" \"center\" \"center\" \"center\" \"center\" #>  [7,] \"left\" \"center\" \"center\" \"center\" \"center\" #>  [8,] \"left\" \"center\" \"center\" \"center\" \"center\" #>  [9,] \"left\" \"center\" \"center\" \"center\" \"center\" #> [10,] \"left\" \"center\" \"center\" \"center\" \"center\" #> [11,] \"left\" \"center\" \"center\" \"center\" \"center\" #> [12,] \"left\" \"center\" \"center\" \"center\" \"center\" #> [13,] \"left\" \"center\" \"center\" \"center\" \"center\" #> [14,] \"left\" \"center\" \"center\" \"center\" \"center\" #>  #> $displayformats #>    rnms mpg cyl disp hp #> 1                       #> 2        xx  xx   xx xx #> 3        xx  xx   xx xx #> 4        xx  xx   xx xx #> 5        xx  xx   xx xx #> 6        xx  xx   xx xx #> 7        xx  xx   xx xx #> 8        xx  xx   xx xx #> 9        xx  xx   xx xx #> 10       xx  xx   xx xx #> 11       xx  xx   xx xx #> 12       xx  xx   xx xx #> 13       xx  xx   xx xx #> 14       xx  xx   xx xx #>  #> $row_info #>                               label              name abs_rownumber #> Mazda RX4                 Mazda RX4         Mazda RX4             1 #> Mazda RX4 Wag         Mazda RX4 Wag     Mazda RX4 Wag             2 #> Datsun 710               Datsun 710        Datsun 710             3 #> Hornet 4 Drive       Hornet 4 Drive    Hornet 4 Drive             4 #> Hornet Sportabout Hornet Sportabout Hornet Sportabout             5 #> Valiant                     Valiant           Valiant             6 #> Duster 360               Duster 360        Duster 360             7 #> Merc 240D                 Merc 240D         Merc 240D             8 #> Merc 230                   Merc 230          Merc 230             9 #> Merc 280                   Merc 280          Merc 280            10 #> Merc 280C                 Merc 280C         Merc 280C            11 #> Merc 450SE               Merc 450SE        Merc 450SE            12 #> Merc 450SL               Merc 450SL        Merc 450SL            13 #>                           path pos_in_siblings n_siblings self_extent #> Mazda RX4            Mazda RX4               1         32           1 #> Mazda RX4 Wag     Mazda RX....               2         32           1 #> Datsun 710          Datsun 710               3         32           1 #> Hornet 4 Drive    Hornet 4....               4         32           1 #> Hornet Sportabout Hornet S....               5         32           1 #> Valiant                Valiant               6         32           1 #> Duster 360          Duster 360               7         32           1 #> Merc 240D            Merc 240D               8         32           1 #> Merc 230              Merc 230               9         32           1 #> Merc 280              Merc 280              10         32           1 #> Merc 280C            Merc 280C              11         32           1 #> Merc 450SE          Merc 450SE              12         32           1 #> Merc 450SL          Merc 450SL              13         32           1 #>                   par_extent reprint_inds node_class indent nrowrefs ncellrefs #> Mazda RX4                  0                 DataRow      0        0         0 #> Mazda RX4 Wag              0                 DataRow      0        0         0 #> Datsun 710                 0                 DataRow      0        0         0 #> Hornet 4 Drive             0                 DataRow      0        0         0 #> Hornet Sportabout          0                 DataRow      0        0         0 #> Valiant                    0                 DataRow      0        0         0 #> Duster 360                 0                 DataRow      0        0         0 #> Merc 240D                  0                 DataRow      0        0         0 #> Merc 230                   0                 DataRow      0        0         0 #> Merc 280                   0                 DataRow      0        0         0 #> Merc 280C                  0                 DataRow      0        0         0 #> Merc 450SE                 0                 DataRow      0        0         0 #> Merc 450SL                 0                 DataRow      0        0         0 #>                   nreflines force_page page_title trailing_sep ref_info_df #> Mazda RX4                 0      FALSE       <NA>         <NA>             #> Mazda RX4 Wag             0      FALSE       <NA>         <NA>             #> Datsun 710                0      FALSE       <NA>         <NA>             #> Hornet 4 Drive            0      FALSE       <NA>         <NA>             #> Hornet Sportabout         0      FALSE       <NA>         <NA>             #> Valiant                   0      FALSE       <NA>         <NA>             #> Duster 360                0      FALSE       <NA>         <NA>             #> Merc 240D                 0      FALSE       <NA>         <NA>             #> Merc 230                  0      FALSE       <NA>         <NA>             #> Merc 280                  0      FALSE       <NA>         <NA>             #> Merc 280C                 0      FALSE       <NA>         <NA>             #> Merc 450SE                0      FALSE       <NA>         <NA>             #> Merc 450SL                0      FALSE       <NA>         <NA>             #>  #> $line_grouping #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 #>  #> $main_title #> [1] \"\" #>  #> $subtitles #> character(0) #>  #> $page_titles #> character(0) #>  #> $main_footer #> [1] \"\" #>  #> $prov_footer #> [1] \"                                         page 1 of 9\" #>  #> $header_section_div #> [1] NA #>  #> $horizontal_sep #> [1] \"o\" #>  #> $col_gap #> [1] 3 #>  #> $listing_keycols #> NULL #>  #> $table_inset #> [1] 0 #>  #> $has_topleft #> [1] FALSE #>  #> $indent_size #> [1] 2 #>  #> $col_widths #> rnms  mpg  cyl disp   hp  #>   19    4    3    5    3  #>  #> $fontspec #> $family #> [1] \"Courier\" #>  #> $size #> [1] 8 #>  #> $lineheight #> [1] 1 #>  #> attr(,\"class\") #> [1] \"font_spec\" \"list\"      #>  #> $num_rep_cols #> [1] 0 #>  #> $ref_fnote_df #> [1] row_path  col_path  row       col       symbol    ref_index msg       #> [8] nlines    #> <0 rows> (or 0-length row.names) #>  #> $col_info #>   label name abs_rownumber path pos_in_siblings n_siblings self_extent #> 1     1    1             1   NA               0          0           4 #> 2     2    2             2   NA               0          0           3 #> 3     3    3             3   NA               0          0           5 #> 4     4    4             4   NA               0          0           3 #>   par_extent reprint_inds node_class indent nrowrefs ncellrefs nreflines #> 1          0                   stuff      0        0         0         0 #> 2          0                   stuff      0        0         0         0 #> 3          0                   stuff      0        0         0         0 #> 4          0                   stuff      0        0         0         0 #>   force_page page_title trailing_sep ref_info_df #> 1      FALSE       <NA>         <NA>             #> 2      FALSE       <NA>         <NA>             #> 3      FALSE       <NA>         <NA>             #> 4      FALSE       <NA>         <NA>             #>  #> attr(,\"nrow_header\") #> [1] 1 #> attr(,\"ncols\") #> [1] 4 #> attr(,\"class\") #> [1] \"MatrixPrintForm\" \"list\"            #>  #> [[2]] #> $strings #>       rnms                drat   wt      qsec    vs   am   #>  [1,] \"\"                  \"drat\" \"wt\"    \"qsec\"  \"vs\" \"am\" #>  [2,] \"Mazda RX4\"         \"3.9\"  \"2.62\"  \"16.46\" \"0\"  \"1\"  #>  [3,] \"Mazda RX4 Wag\"     \"3.9\"  \"2.875\" \"17.02\" \"0\"  \"1\"  #>  [4,] \"Datsun 710\"        \"3.85\" \"2.32\"  \"18.61\" \"1\"  \"1\"  #>  [5,] \"Hornet 4 Drive\"    \"3.08\" \"3.215\" \"19.44\" \"1\"  \"0\"  #>  [6,] \"Hornet Sportabout\" \"3.15\" \"3.44\"  \"17.02\" \"0\"  \"0\"  #>  [7,] \"Valiant\"           \"2.76\" \"3.46\"  \"20.22\" \"1\"  \"0\"  #>  [8,] \"Duster 360\"        \"3.21\" \"3.57\"  \"15.84\" \"0\"  \"0\"  #>  [9,] \"Merc 240D\"         \"3.69\" \"3.19\"  \"20\"    \"1\"  \"0\"  #> [10,] \"Merc 230\"          \"3.92\" \"3.15\"  \"22.9\"  \"1\"  \"0\"  #> [11,] \"Merc 280\"          \"3.92\" \"3.44\"  \"18.3\"  \"1\"  \"0\"  #> [12,] \"Merc 280C\"         \"3.92\" \"3.44\"  \"18.9\"  \"1\"  \"0\"  #> [13,] \"Merc 450SE\"        \"3.07\" \"4.07\"  \"17.4\"  \"0\"  \"0\"  #> [14,] \"Merc 450SL\"        \"3.07\" \"3.73\"  \"17.6\"  \"0\"  \"0\"  #>  #> $spans #>       [,1] [,2] [,3] [,4] [,5] [,6] #>  [1,]    1    1    1    1    1    1 #>  [2,]    1    1    1    1    1    1 #>  [3,]    1    1    1    1    1    1 #>  [4,]    1    1    1    1    1    1 #>  [5,]    1    1    1    1    1    1 #>  [6,]    1    1    1    1    1    1 #>  [7,]    1    1    1    1    1    1 #>  [8,]    1    1    1    1    1    1 #>  [9,]    1    1    1    1    1    1 #> [10,]    1    1    1    1    1    1 #> [11,]    1    1    1    1    1    1 #> [12,]    1    1    1    1    1    1 #> [13,]    1    1    1    1    1    1 #> [14,]    1    1    1    1    1    1 #>  #> $aligns #>       [,1]   [,2]     [,3]     [,4]     [,5]     [,6]     #>  [1,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [2,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [3,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [4,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [5,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [6,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [7,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [8,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [9,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [10,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [11,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [12,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [13,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [14,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  #> $display #>       [,1] [,2] [,3] [,4] [,5] [,6] #>  [1,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [2,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [3,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [4,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [5,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [6,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [7,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [8,] TRUE TRUE TRUE TRUE TRUE TRUE #>  [9,] TRUE TRUE TRUE TRUE TRUE TRUE #> [10,] TRUE TRUE TRUE TRUE TRUE TRUE #> [11,] TRUE TRUE TRUE TRUE TRUE TRUE #> [12,] TRUE TRUE TRUE TRUE TRUE TRUE #> [13,] TRUE TRUE TRUE TRUE TRUE TRUE #> [14,] TRUE TRUE TRUE TRUE TRUE TRUE #>  #> $formats #>    rnms drat wt qsec vs am #> 1                          #> 2         xx xx   xx xx xx #> 3         xx xx   xx xx xx #> 4         xx xx   xx xx xx #> 5         xx xx   xx xx xx #> 6         xx xx   xx xx xx #> 7         xx xx   xx xx xx #> 8         xx xx   xx xx xx #> 9         xx xx   xx xx xx #> 10        xx xx   xx xx xx #> 11        xx xx   xx xx xx #> 12        xx xx   xx xx xx #> 13        xx xx   xx xx xx #> 14        xx xx   xx xx xx #>  #> $row_info #>                               label              name abs_rownumber #> Mazda RX4                 Mazda RX4         Mazda RX4             1 #> Mazda RX4 Wag         Mazda RX4 Wag     Mazda RX4 Wag             2 #> Datsun 710               Datsun 710        Datsun 710             3 #> Hornet 4 Drive       Hornet 4 Drive    Hornet 4 Drive             4 #> Hornet Sportabout Hornet Sportabout Hornet Sportabout             5 #> Valiant                     Valiant           Valiant             6 #> Duster 360               Duster 360        Duster 360             7 #> Merc 240D                 Merc 240D         Merc 240D             8 #> Merc 230                   Merc 230          Merc 230             9 #> Merc 280                   Merc 280          Merc 280            10 #> Merc 280C                 Merc 280C         Merc 280C            11 #> Merc 450SE               Merc 450SE        Merc 450SE            12 #> Merc 450SL               Merc 450SL        Merc 450SL            13 #>                           path pos_in_siblings n_siblings self_extent #> Mazda RX4            Mazda RX4               1         32           1 #> Mazda RX4 Wag     Mazda RX....               2         32           1 #> Datsun 710          Datsun 710               3         32           1 #> Hornet 4 Drive    Hornet 4....               4         32           1 #> Hornet Sportabout Hornet S....               5         32           1 #> Valiant                Valiant               6         32           1 #> Duster 360          Duster 360               7         32           1 #> Merc 240D            Merc 240D               8         32           1 #> Merc 230              Merc 230               9         32           1 #> Merc 280              Merc 280              10         32           1 #> Merc 280C            Merc 280C              11         32           1 #> Merc 450SE          Merc 450SE              12         32           1 #> Merc 450SL          Merc 450SL              13         32           1 #>                   par_extent reprint_inds node_class indent nrowrefs ncellrefs #> Mazda RX4                  0                 DataRow      0        0         0 #> Mazda RX4 Wag              0                 DataRow      0        0         0 #> Datsun 710                 0                 DataRow      0        0         0 #> Hornet 4 Drive             0                 DataRow      0        0         0 #> Hornet Sportabout          0                 DataRow      0        0         0 #> Valiant                    0                 DataRow      0        0         0 #> Duster 360                 0                 DataRow      0        0         0 #> Merc 240D                  0                 DataRow      0        0         0 #> Merc 230                   0                 DataRow      0        0         0 #> Merc 280                   0                 DataRow      0        0         0 #> Merc 280C                  0                 DataRow      0        0         0 #> Merc 450SE                 0                 DataRow      0        0         0 #> Merc 450SL                 0                 DataRow      0        0         0 #>                   nreflines force_page page_title trailing_sep ref_info_df #> Mazda RX4                 0      FALSE       <NA>         <NA>             #> Mazda RX4 Wag             0      FALSE       <NA>         <NA>             #> Datsun 710                0      FALSE       <NA>         <NA>             #> Hornet 4 Drive            0      FALSE       <NA>         <NA>             #> Hornet Sportabout         0      FALSE       <NA>         <NA>             #> Valiant                   0      FALSE       <NA>         <NA>             #> Duster 360                0      FALSE       <NA>         <NA>             #> Merc 240D                 0      FALSE       <NA>         <NA>             #> Merc 230                  0      FALSE       <NA>         <NA>             #> Merc 280                  0      FALSE       <NA>         <NA>             #> Merc 280C                 0      FALSE       <NA>         <NA>             #> Merc 450SE                0      FALSE       <NA>         <NA>             #> Merc 450SL                0      FALSE       <NA>         <NA>             #>  #> $line_grouping #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 #>  #> $main_title #> [1] \"\" #>  #> $subtitles #> character(0) #>  #> $page_titles #> character(0) #>  #> $main_footer #> [1] \"\" #>  #> $prov_footer #> [1] \"                                         page 2 of 9\" #>  #> $header_section_div #> [1] NA #>  #> $horizontal_sep #> [1] \"o\" #>  #> $col_gap #> [1] 3 #>  #> $listing_keycols #> NULL #>  #> $table_inset #> [1] 0 #>  #> $has_topleft #> [1] FALSE #>  #> $indent_size #> [1] 2 #>  #> $col_widths #> rnms drat   wt qsec   vs   am  #>   19    4    5    5    2    2  #>  #> $fontspec #> $family #> [1] \"Courier\" #>  #> $size #> [1] 8 #>  #> $lineheight #> [1] 1 #>  #> attr(,\"class\") #> [1] \"font_spec\" \"list\"      #>  #> $num_rep_cols #> [1] 0 #>  #> $ref_fnote_df #> [1] row_path  col_path  row       col       symbol    ref_index msg       #> [8] nlines    #> <0 rows> (or 0-length row.names) #>  #> $col_info #>   label name abs_rownumber path pos_in_siblings n_siblings self_extent #> 5     5    5             5   NA               0          0           4 #> 6     6    6             6   NA               0          0           5 #> 7     7    7             7   NA               0          0           5 #> 8     8    8             8   NA               0          0           2 #> 9     9    9             9   NA               0          0           2 #>   par_extent reprint_inds node_class indent nrowrefs ncellrefs nreflines #> 5          0                   stuff      0        0         0         0 #> 6          0                   stuff      0        0         0         0 #> 7          0                   stuff      0        0         0         0 #> 8          0                   stuff      0        0         0         0 #> 9          0                   stuff      0        0         0         0 #>   force_page page_title trailing_sep ref_info_df #> 5      FALSE       <NA>         <NA>             #> 6      FALSE       <NA>         <NA>             #> 7      FALSE       <NA>         <NA>             #> 8      FALSE       <NA>         <NA>             #> 9      FALSE       <NA>         <NA>             #>  #> attr(,\"nrow_header\") #> [1] 1 #> attr(,\"ncols\") #> [1] 5 #> attr(,\"class\") #> [1] \"MatrixPrintForm\" \"list\"            #>  #> [[3]] #> $strings #>       rnms                gear   carb   #>  [1,] \"\"                  \"gear\" \"carb\" #>  [2,] \"Mazda RX4\"         \"4\"    \"4\"    #>  [3,] \"Mazda RX4 Wag\"     \"4\"    \"4\"    #>  [4,] \"Datsun 710\"        \"4\"    \"1\"    #>  [5,] \"Hornet 4 Drive\"    \"3\"    \"1\"    #>  [6,] \"Hornet Sportabout\" \"3\"    \"2\"    #>  [7,] \"Valiant\"           \"3\"    \"1\"    #>  [8,] \"Duster 360\"        \"3\"    \"4\"    #>  [9,] \"Merc 240D\"         \"4\"    \"2\"    #> [10,] \"Merc 230\"          \"4\"    \"2\"    #> [11,] \"Merc 280\"          \"4\"    \"4\"    #> [12,] \"Merc 280C\"         \"4\"    \"4\"    #> [13,] \"Merc 450SE\"        \"3\"    \"3\"    #> [14,] \"Merc 450SL\"        \"3\"    \"3\"    #>  #> $spans #>       [,1] [,2] [,3] #>  [1,]    1    1    1 #>  [2,]    1    1    1 #>  [3,]    1    1    1 #>  [4,]    1    1    1 #>  [5,]    1    1    1 #>  [6,]    1    1    1 #>  [7,]    1    1    1 #>  [8,]    1    1    1 #>  [9,]    1    1    1 #> [10,]    1    1    1 #> [11,]    1    1    1 #> [12,]    1    1    1 #> [13,]    1    1    1 #> [14,]    1    1    1 #>  #> $aligns #>       [,1]   [,2]     [,3]     #>  [1,] \"left\" \"center\" \"center\" #>  [2,] \"left\" \"center\" \"center\" #>  [3,] \"left\" \"center\" \"center\" #>  [4,] \"left\" \"center\" \"center\" #>  [5,] \"left\" \"center\" \"center\" #>  [6,] \"left\" \"center\" \"center\" #>  [7,] \"left\" \"center\" \"center\" #>  [8,] \"left\" \"center\" \"center\" #>  [9,] \"left\" \"center\" \"center\" #> [10,] \"left\" \"center\" \"center\" #> [11,] \"left\" \"center\" \"center\" #> [12,] \"left\" \"center\" \"center\" #> [13,] \"left\" \"center\" \"center\" #> [14,] \"left\" \"center\" \"center\" #>  #> $display #>       [,1] [,2] [,3] #>  [1,] TRUE TRUE TRUE #>  [2,] TRUE TRUE TRUE #>  [3,] TRUE TRUE TRUE #>  [4,] TRUE TRUE TRUE #>  [5,] TRUE TRUE TRUE #>  [6,] TRUE TRUE TRUE #>  [7,] TRUE TRUE TRUE #>  [8,] TRUE TRUE TRUE #>  [9,] TRUE TRUE TRUE #> [10,] TRUE TRUE TRUE #> [11,] TRUE TRUE TRUE #> [12,] TRUE TRUE TRUE #> [13,] TRUE TRUE TRUE #> [14,] TRUE TRUE TRUE #>  #> $formats #>    rnms gear carb #> 1                 #> 2         xx   xx #> 3         xx   xx #> 4         xx   xx #> 5         xx   xx #> 6         xx   xx #> 7         xx   xx #> 8         xx   xx #> 9         xx   xx #> 10        xx   xx #> 11        xx   xx #> 12        xx   xx #> 13        xx   xx #> 14        xx   xx #>  #> $row_info #>                               label              name abs_rownumber #> Mazda RX4                 Mazda RX4         Mazda RX4             1 #> Mazda RX4 Wag         Mazda RX4 Wag     Mazda RX4 Wag             2 #> Datsun 710               Datsun 710        Datsun 710             3 #> Hornet 4 Drive       Hornet 4 Drive    Hornet 4 Drive             4 #> Hornet Sportabout Hornet Sportabout Hornet Sportabout             5 #> Valiant                     Valiant           Valiant             6 #> Duster 360               Duster 360        Duster 360             7 #> Merc 240D                 Merc 240D         Merc 240D             8 #> Merc 230                   Merc 230          Merc 230             9 #> Merc 280                   Merc 280          Merc 280            10 #> Merc 280C                 Merc 280C         Merc 280C            11 #> Merc 450SE               Merc 450SE        Merc 450SE            12 #> Merc 450SL               Merc 450SL        Merc 450SL            13 #>                           path pos_in_siblings n_siblings self_extent #> Mazda RX4            Mazda RX4               1         32           1 #> Mazda RX4 Wag     Mazda RX....               2         32           1 #> Datsun 710          Datsun 710               3         32           1 #> Hornet 4 Drive    Hornet 4....               4         32           1 #> Hornet Sportabout Hornet S....               5         32           1 #> Valiant                Valiant               6         32           1 #> Duster 360          Duster 360               7         32           1 #> Merc 240D            Merc 240D               8         32           1 #> Merc 230              Merc 230               9         32           1 #> Merc 280              Merc 280              10         32           1 #> Merc 280C            Merc 280C              11         32           1 #> Merc 450SE          Merc 450SE              12         32           1 #> Merc 450SL          Merc 450SL              13         32           1 #>                   par_extent reprint_inds node_class indent nrowrefs ncellrefs #> Mazda RX4                  0                 DataRow      0        0         0 #> Mazda RX4 Wag              0                 DataRow      0        0         0 #> Datsun 710                 0                 DataRow      0        0         0 #> Hornet 4 Drive             0                 DataRow      0        0         0 #> Hornet Sportabout          0                 DataRow      0        0         0 #> Valiant                    0                 DataRow      0        0         0 #> Duster 360                 0                 DataRow      0        0         0 #> Merc 240D                  0                 DataRow      0        0         0 #> Merc 230                   0                 DataRow      0        0         0 #> Merc 280                   0                 DataRow      0        0         0 #> Merc 280C                  0                 DataRow      0        0         0 #> Merc 450SE                 0                 DataRow      0        0         0 #> Merc 450SL                 0                 DataRow      0        0         0 #>                   nreflines force_page page_title trailing_sep ref_info_df #> Mazda RX4                 0      FALSE       <NA>         <NA>             #> Mazda RX4 Wag             0      FALSE       <NA>         <NA>             #> Datsun 710                0      FALSE       <NA>         <NA>             #> Hornet 4 Drive            0      FALSE       <NA>         <NA>             #> Hornet Sportabout         0      FALSE       <NA>         <NA>             #> Valiant                   0      FALSE       <NA>         <NA>             #> Duster 360                0      FALSE       <NA>         <NA>             #> Merc 240D                 0      FALSE       <NA>         <NA>             #> Merc 230                  0      FALSE       <NA>         <NA>             #> Merc 280                  0      FALSE       <NA>         <NA>             #> Merc 280C                 0      FALSE       <NA>         <NA>             #> Merc 450SE                0      FALSE       <NA>         <NA>             #> Merc 450SL                0      FALSE       <NA>         <NA>             #>  #> $line_grouping #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 #>  #> $main_title #> [1] \"\" #>  #> $subtitles #> character(0) #>  #> $page_titles #> character(0) #>  #> $main_footer #> [1] \"\" #>  #> $prov_footer #> [1] \"                                         page 3 of 9\" #>  #> $header_section_div #> [1] NA #>  #> $horizontal_sep #> [1] \"o\" #>  #> $col_gap #> [1] 3 #>  #> $listing_keycols #> NULL #>  #> $table_inset #> [1] 0 #>  #> $has_topleft #> [1] FALSE #>  #> $indent_size #> [1] 2 #>  #> $col_widths #> rnms gear carb  #>   19    4    4  #>  #> $fontspec #> $family #> [1] \"Courier\" #>  #> $size #> [1] 8 #>  #> $lineheight #> [1] 1 #>  #> attr(,\"class\") #> [1] \"font_spec\" \"list\"      #>  #> $num_rep_cols #> [1] 0 #>  #> $ref_fnote_df #> [1] row_path  col_path  row       col       symbol    ref_index msg       #> [8] nlines    #> <0 rows> (or 0-length row.names) #>  #> $col_info #>    label name abs_rownumber path pos_in_siblings n_siblings self_extent #> 10    10   10            10   NA               0          0           4 #> 11    11   11            11   NA               0          0           4 #>    par_extent reprint_inds node_class indent nrowrefs ncellrefs nreflines #> 10          0                   stuff      0        0         0         0 #> 11          0                   stuff      0        0         0         0 #>    force_page page_title trailing_sep ref_info_df #> 10      FALSE       <NA>         <NA>             #> 11      FALSE       <NA>         <NA>             #>  #> attr(,\"nrow_header\") #> [1] 1 #> attr(,\"ncols\") #> [1] 2 #> attr(,\"class\") #> [1] \"MatrixPrintForm\" \"list\"            #>  #> [[4]] #> $strings #>       rnms                  mpg    cyl   disp    hp    #>  [1,] \"\"                    \"mpg\"  \"cyl\" \"disp\"  \"hp\"  #>  [2,] \"Merc 450SLC\"         \"15.2\" \"8\"   \"275.8\" \"180\" #>  [3,] \"Cadillac Fleetwood\"  \"10.4\" \"8\"   \"472\"   \"205\" #>  [4,] \"Lincoln Continental\" \"10.4\" \"8\"   \"460\"   \"215\" #>  [5,] \"Chrysler Imperial\"   \"14.7\" \"8\"   \"440\"   \"230\" #>  [6,] \"Fiat 128\"            \"32.4\" \"4\"   \"78.7\"  \"66\"  #>  [7,] \"Honda Civic\"         \"30.4\" \"4\"   \"75.7\"  \"52\"  #>  [8,] \"Toyota Corolla\"      \"33.9\" \"4\"   \"71.1\"  \"65\"  #>  [9,] \"Toyota Corona\"       \"21.5\" \"4\"   \"120.1\" \"97\"  #> [10,] \"Dodge Challenger\"    \"15.5\" \"8\"   \"318\"   \"150\" #> [11,] \"AMC Javelin\"         \"15.2\" \"8\"   \"304\"   \"150\" #> [12,] \"Camaro Z28\"          \"13.3\" \"8\"   \"350\"   \"245\" #> [13,] \"Pontiac Firebird\"    \"19.2\" \"8\"   \"400\"   \"175\" #> [14,] \"Fiat X1-9\"           \"27.3\" \"4\"   \"79\"    \"66\"  #>  #> $spans #>       [,1] [,2] [,3] [,4] [,5] #>  [1,]    1    1    1    1    1 #>  [2,]    1    1    1    1    1 #>  [3,]    1    1    1    1    1 #>  [4,]    1    1    1    1    1 #>  [5,]    1    1    1    1    1 #>  [6,]    1    1    1    1    1 #>  [7,]    1    1    1    1    1 #>  [8,]    1    1    1    1    1 #>  [9,]    1    1    1    1    1 #> [10,]    1    1    1    1    1 #> [11,]    1    1    1    1    1 #> [12,]    1    1    1    1    1 #> [13,]    1    1    1    1    1 #> [14,]    1    1    1    1    1 #>  #> $aligns #>       [,1]   [,2]     [,3]     [,4]     [,5]     #>  [1,] \"left\" \"center\" \"center\" \"center\" \"center\" #>  [2,] \"left\" \"center\" \"center\" \"center\" \"center\" #>  [3,] \"left\" \"center\" \"center\" \"center\" \"center\" #>  [4,] \"left\" \"center\" \"center\" \"center\" \"center\" #>  [5,] \"left\" \"center\" \"center\" \"center\" \"center\" #>  [6,] \"left\" \"center\" \"center\" \"center\" \"center\" #>  [7,] \"left\" \"center\" \"center\" \"center\" \"center\" #>  [8,] \"left\" \"center\" \"center\" \"center\" \"center\" #>  [9,] \"left\" \"center\" \"center\" \"center\" \"center\" #> [10,] \"left\" \"center\" \"center\" \"center\" \"center\" #> [11,] \"left\" \"center\" \"center\" \"center\" \"center\" #> [12,] \"left\" \"center\" \"center\" \"center\" \"center\" #> [13,] \"left\" \"center\" \"center\" \"center\" \"center\" #> [14,] \"left\" \"center\" \"center\" \"center\" \"center\" #>  #> $displayformats #>    rnms mpg cyl disp hp #> 1                       #> 15       xx  xx   xx xx #> 16       xx  xx   xx xx #> 17       xx  xx   xx xx #> 18       xx  xx   xx xx #> 19       xx  xx   xx xx #> 20       xx  xx   xx xx #> 21       xx  xx   xx xx #> 22       xx  xx   xx xx #> 23       xx  xx   xx xx #> 24       xx  xx   xx xx #> 25       xx  xx   xx xx #> 26       xx  xx   xx xx #> 27       xx  xx   xx xx #>  #> $row_info #>                                   label                name abs_rownumber #> Merc 450SLC                 Merc 450SLC         Merc 450SLC             1 #> Cadillac Fleetwood   Cadillac Fleetwood  Cadillac Fleetwood             2 #> Lincoln Continental Lincoln Continental Lincoln Continental             3 #> Chrysler Imperial     Chrysler Imperial   Chrysler Imperial             4 #> Fiat 128                       Fiat 128            Fiat 128             5 #> Honda Civic                 Honda Civic         Honda Civic             6 #> Toyota Corolla           Toyota Corolla      Toyota Corolla             7 #> Toyota Corona             Toyota Corona       Toyota Corona             8 #> Dodge Challenger       Dodge Challenger    Dodge Challenger             9 #> AMC Javelin                 AMC Javelin         AMC Javelin            10 #> Camaro Z28                   Camaro Z28          Camaro Z28            11 #> Pontiac Firebird       Pontiac Firebird    Pontiac Firebird            12 #> Fiat X1-9                     Fiat X1-9           Fiat X1-9            13 #>                             path pos_in_siblings n_siblings self_extent #> Merc 450SLC          Merc 450SLC              14         32           1 #> Cadillac Fleetwood  Cadillac....              15         32           1 #> Lincoln Continental Lincoln ....              16         32           1 #> Chrysler Imperial   Chrysler....              17         32           1 #> Fiat 128                Fiat 128              18         32           1 #> Honda Civic          Honda Civic              19         32           1 #> Toyota Corolla      Toyota C....              20         32           1 #> Toyota Corona       Toyota C....              21         32           1 #> Dodge Challenger    Dodge Ch....              22         32           1 #> AMC Javelin          AMC Javelin              23         32           1 #> Camaro Z28            Camaro Z28              24         32           1 #> Pontiac Firebird    Pontiac ....              25         32           1 #> Fiat X1-9              Fiat X1-9              26         32           1 #>                     par_extent reprint_inds node_class indent nrowrefs #> Merc 450SLC                  0                 DataRow      0        0 #> Cadillac Fleetwood           0                 DataRow      0        0 #> Lincoln Continental          0                 DataRow      0        0 #> Chrysler Imperial            0                 DataRow      0        0 #> Fiat 128                     0                 DataRow      0        0 #> Honda Civic                  0                 DataRow      0        0 #> Toyota Corolla               0                 DataRow      0        0 #> Toyota Corona                0                 DataRow      0        0 #> Dodge Challenger             0                 DataRow      0        0 #> AMC Javelin                  0                 DataRow      0        0 #> Camaro Z28                   0                 DataRow      0        0 #> Pontiac Firebird             0                 DataRow      0        0 #> Fiat X1-9                    0                 DataRow      0        0 #>                     ncellrefs nreflines force_page page_title trailing_sep #> Merc 450SLC                 0         0      FALSE       <NA>         <NA> #> Cadillac Fleetwood          0         0      FALSE       <NA>         <NA> #> Lincoln Continental         0         0      FALSE       <NA>         <NA> #> Chrysler Imperial           0         0      FALSE       <NA>         <NA> #> Fiat 128                    0         0      FALSE       <NA>         <NA> #> Honda Civic                 0         0      FALSE       <NA>         <NA> #> Toyota Corolla              0         0      FALSE       <NA>         <NA> #> Toyota Corona               0         0      FALSE       <NA>         <NA> #> Dodge Challenger            0         0      FALSE       <NA>         <NA> #> AMC Javelin                 0         0      FALSE       <NA>         <NA> #> Camaro Z28                  0         0      FALSE       <NA>         <NA> #> Pontiac Firebird            0         0      FALSE       <NA>         <NA> #> Fiat X1-9                   0         0      FALSE       <NA>         <NA> #>                     ref_info_df #> Merc 450SLC                     #> Cadillac Fleetwood              #> Lincoln Continental             #> Chrysler Imperial               #> Fiat 128                        #> Honda Civic                     #> Toyota Corolla                  #> Toyota Corona                   #> Dodge Challenger                #> AMC Javelin                     #> Camaro Z28                      #> Pontiac Firebird                #> Fiat X1-9                       #>  #> $line_grouping #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 #>  #> $main_title #> [1] \"\" #>  #> $subtitles #> character(0) #>  #> $page_titles #> character(0) #>  #> $main_footer #> [1] \"\" #>  #> $prov_footer #> [1] \"                                         page 4 of 9\" #>  #> $header_section_div #> [1] NA #>  #> $horizontal_sep #> [1] \"o\" #>  #> $col_gap #> [1] 3 #>  #> $listing_keycols #> NULL #>  #> $table_inset #> [1] 0 #>  #> $has_topleft #> [1] FALSE #>  #> $indent_size #> [1] 2 #>  #> $col_widths #> rnms  mpg  cyl disp   hp  #>   19    4    3    5    3  #>  #> $fontspec #> $family #> [1] \"Courier\" #>  #> $size #> [1] 8 #>  #> $lineheight #> [1] 1 #>  #> attr(,\"class\") #> [1] \"font_spec\" \"list\"      #>  #> $num_rep_cols #> [1] 0 #>  #> $ref_fnote_df #> [1] row_path  col_path  row       col       symbol    ref_index msg       #> [8] nlines    #> <0 rows> (or 0-length row.names) #>  #> $col_info #>   label name abs_rownumber path pos_in_siblings n_siblings self_extent #> 1     1    1             1   NA               0          0           4 #> 2     2    2             2   NA               0          0           3 #> 3     3    3             3   NA               0          0           5 #> 4     4    4             4   NA               0          0           3 #>   par_extent reprint_inds node_class indent nrowrefs ncellrefs nreflines #> 1          0                   stuff      0        0         0         0 #> 2          0                   stuff      0        0         0         0 #> 3          0                   stuff      0        0         0         0 #> 4          0                   stuff      0        0         0         0 #>   force_page page_title trailing_sep ref_info_df #> 1      FALSE       <NA>         <NA>             #> 2      FALSE       <NA>         <NA>             #> 3      FALSE       <NA>         <NA>             #> 4      FALSE       <NA>         <NA>             #>  #> attr(,\"nrow_header\") #> [1] 1 #> attr(,\"ncols\") #> [1] 4 #> attr(,\"class\") #> [1] \"MatrixPrintForm\" \"list\"            #>  #> [[5]] #> $strings #>       rnms                  drat   wt      qsec    vs   am   #>  [1,] \"\"                    \"drat\" \"wt\"    \"qsec\"  \"vs\" \"am\" #>  [2,] \"Merc 450SLC\"         \"3.07\" \"3.78\"  \"18\"    \"0\"  \"0\"  #>  [3,] \"Cadillac Fleetwood\"  \"2.93\" \"5.25\"  \"17.98\" \"0\"  \"0\"  #>  [4,] \"Lincoln Continental\" \"3\"    \"5.424\" \"17.82\" \"0\"  \"0\"  #>  [5,] \"Chrysler Imperial\"   \"3.23\" \"5.345\" \"17.42\" \"0\"  \"0\"  #>  [6,] \"Fiat 128\"            \"4.08\" \"2.2\"   \"19.47\" \"1\"  \"1\"  #>  [7,] \"Honda Civic\"         \"4.93\" \"1.615\" \"18.52\" \"1\"  \"1\"  #>  [8,] \"Toyota Corolla\"      \"4.22\" \"1.835\" \"19.9\"  \"1\"  \"1\"  #>  [9,] \"Toyota Corona\"       \"3.7\"  \"2.465\" \"20.01\" \"1\"  \"0\"  #> [10,] \"Dodge Challenger\"    \"2.76\" \"3.52\"  \"16.87\" \"0\"  \"0\"  #> [11,] \"AMC Javelin\"         \"3.15\" \"3.435\" \"17.3\"  \"0\"  \"0\"  #> [12,] \"Camaro Z28\"          \"3.73\" \"3.84\"  \"15.41\" \"0\"  \"0\"  #> [13,] \"Pontiac Firebird\"    \"3.08\" \"3.845\" \"17.05\" \"0\"  \"0\"  #> [14,] \"Fiat X1-9\"           \"4.08\" \"1.935\" \"18.9\"  \"1\"  \"1\"  #>  #> $spans #>       [,1] [,2] [,3] [,4] [,5] [,6] #>  [1,]    1    1    1    1    1    1 #>  [2,]    1    1    1    1    1    1 #>  [3,]    1    1    1    1    1    1 #>  [4,]    1    1    1    1    1    1 #>  [5,]    1    1    1    1    1    1 #>  [6,]    1    1    1    1    1    1 #>  [7,]    1    1    1    1    1    1 #>  [8,]    1    1    1    1    1    1 #>  [9,]    1    1    1    1    1    1 #> [10,]    1    1    1    1    1    1 #> [11,]    1    1    1    1    1    1 #> [12,]    1    1    1    1    1    1 #> [13,]    1    1    1    1    1    1 #> [14,]    1    1    1    1    1    1 #>  #> $aligns #>       [,1]   [,2]     [,3]     [,4]     [,5]     [,6]     #>  [1,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [2,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [3,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [4,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [5,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [6,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [7,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [8,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  [9,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [10,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [11,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [12,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [13,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [14,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  #> $displayformats #>    rnms drat wt qsec vs am #> 1                          #> 15        xx xx   xx xx xx #> 16        xx xx   xx xx xx #> 17        xx xx   xx xx xx #> 18        xx xx   xx xx xx #> 19        xx xx   xx xx xx #> 20        xx xx   xx xx xx #> 21        xx xx   xx xx xx #> 22        xx xx   xx xx xx #> 23        xx xx   xx xx xx #> 24        xx xx   xx xx xx #> 25        xx xx   xx xx xx #> 26        xx xx   xx xx xx #> 27        xx xx   xx xx xx #>  #> $row_info #>                                   label                name abs_rownumber #> Merc 450SLC                 Merc 450SLC         Merc 450SLC             1 #> Cadillac Fleetwood   Cadillac Fleetwood  Cadillac Fleetwood             2 #> Lincoln Continental Lincoln Continental Lincoln Continental             3 #> Chrysler Imperial     Chrysler Imperial   Chrysler Imperial             4 #> Fiat 128                       Fiat 128            Fiat 128             5 #> Honda Civic                 Honda Civic         Honda Civic             6 #> Toyota Corolla           Toyota Corolla      Toyota Corolla             7 #> Toyota Corona             Toyota Corona       Toyota Corona             8 #> Dodge Challenger       Dodge Challenger    Dodge Challenger             9 #> AMC Javelin                 AMC Javelin         AMC Javelin            10 #> Camaro Z28                   Camaro Z28          Camaro Z28            11 #> Pontiac Firebird       Pontiac Firebird    Pontiac Firebird            12 #> Fiat X1-9                     Fiat X1-9           Fiat X1-9            13 #>                             path pos_in_siblings n_siblings self_extent #> Merc 450SLC          Merc 450SLC              14         32           1 #> Cadillac Fleetwood  Cadillac....              15         32           1 #> Lincoln Continental Lincoln ....              16         32           1 #> Chrysler Imperial   Chrysler....              17         32           1 #> Fiat 128                Fiat 128              18         32           1 #> Honda Civic          Honda Civic              19         32           1 #> Toyota Corolla      Toyota C....              20         32           1 #> Toyota Corona       Toyota C....              21         32           1 #> Dodge Challenger    Dodge Ch....              22         32           1 #> AMC Javelin          AMC Javelin              23         32           1 #> Camaro Z28            Camaro Z28              24         32           1 #> Pontiac Firebird    Pontiac ....              25         32           1 #> Fiat X1-9              Fiat X1-9              26         32           1 #>                     par_extent reprint_inds node_class indent nrowrefs #> Merc 450SLC                  0                 DataRow      0        0 #> Cadillac Fleetwood           0                 DataRow      0        0 #> Lincoln Continental          0                 DataRow      0        0 #> Chrysler Imperial            0                 DataRow      0        0 #> Fiat 128                     0                 DataRow      0        0 #> Honda Civic                  0                 DataRow      0        0 #> Toyota Corolla               0                 DataRow      0        0 #> Toyota Corona                0                 DataRow      0        0 #> Dodge Challenger             0                 DataRow      0        0 #> AMC Javelin                  0                 DataRow      0        0 #> Camaro Z28                   0                 DataRow      0        0 #> Pontiac Firebird             0                 DataRow      0        0 #> Fiat X1-9                    0                 DataRow      0        0 #>                     ncellrefs nreflines force_page page_title trailing_sep #> Merc 450SLC                 0         0      FALSE       <NA>         <NA> #> Cadillac Fleetwood          0         0      FALSE       <NA>         <NA> #> Lincoln Continental         0         0      FALSE       <NA>         <NA> #> Chrysler Imperial           0         0      FALSE       <NA>         <NA> #> Fiat 128                    0         0      FALSE       <NA>         <NA> #> Honda Civic                 0         0      FALSE       <NA>         <NA> #> Toyota Corolla              0         0      FALSE       <NA>         <NA> #> Toyota Corona               0         0      FALSE       <NA>         <NA> #> Dodge Challenger            0         0      FALSE       <NA>         <NA> #> AMC Javelin                 0         0      FALSE       <NA>         <NA> #> Camaro Z28                  0         0      FALSE       <NA>         <NA> #> Pontiac Firebird            0         0      FALSE       <NA>         <NA> #> Fiat X1-9                   0         0      FALSE       <NA>         <NA> #>                     ref_info_df #> Merc 450SLC                     #> Cadillac Fleetwood              #> Lincoln Continental             #> Chrysler Imperial               #> Fiat 128                        #> Honda Civic                     #> Toyota Corolla                  #> Toyota Corona                   #> Dodge Challenger                #> AMC Javelin                     #> Camaro Z28                      #> Pontiac Firebird                #> Fiat X1-9                       #>  #> $line_grouping #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 #>  #> $main_title #> [1] \"\" #>  #> $subtitles #> character(0) #>  #> $page_titles #> character(0) #>  #> $main_footer #> [1] \"\" #>  #> $prov_footer #> [1] \"                                         page 5 of 9\" #>  #> $header_section_div #> [1] NA #>  #> $horizontal_sep #> [1] \"o\" #>  #> $col_gap #> [1] 3 #>  #> $listing_keycols #> NULL #>  #> $table_inset #> [1] 0 #>  #> $has_topleft #> [1] FALSE #>  #> $indent_size #> [1] 2 #>  #> $col_widths #> rnms drat   wt qsec   vs   am  #>   19    4    5    5    2    2  #>  #> $fontspec #> $family #> [1] \"Courier\" #>  #> $size #> [1] 8 #>  #> $lineheight #> [1] 1 #>  #> attr(,\"class\") #> [1] \"font_spec\" \"list\"      #>  #> $num_rep_cols #> [1] 0 #>  #> $ref_fnote_df #> [1] row_path  col_path  row       col       symbol    ref_index msg       #> [8] nlines    #> <0 rows> (or 0-length row.names) #>  #> $col_info #>   label name abs_rownumber path pos_in_siblings n_siblings self_extent #> 5     5    5             5   NA               0          0           4 #> 6     6    6             6   NA               0          0           5 #> 7     7    7             7   NA               0          0           5 #> 8     8    8             8   NA               0          0           2 #> 9     9    9             9   NA               0          0           2 #>   par_extent reprint_inds node_class indent nrowrefs ncellrefs nreflines #> 5          0                   stuff      0        0         0         0 #> 6          0                   stuff      0        0         0         0 #> 7          0                   stuff      0        0         0         0 #> 8          0                   stuff      0        0         0         0 #> 9          0                   stuff      0        0         0         0 #>   force_page page_title trailing_sep ref_info_df #> 5      FALSE       <NA>         <NA>             #> 6      FALSE       <NA>         <NA>             #> 7      FALSE       <NA>         <NA>             #> 8      FALSE       <NA>         <NA>             #> 9      FALSE       <NA>         <NA>             #>  #> attr(,\"nrow_header\") #> [1] 1 #> attr(,\"ncols\") #> [1] 5 #> attr(,\"class\") #> [1] \"MatrixPrintForm\" \"list\"            #>  #> [[6]] #> $strings #>       rnms                  gear   carb   #>  [1,] \"\"                    \"gear\" \"carb\" #>  [2,] \"Merc 450SLC\"         \"3\"    \"3\"    #>  [3,] \"Cadillac Fleetwood\"  \"3\"    \"4\"    #>  [4,] \"Lincoln Continental\" \"3\"    \"4\"    #>  [5,] \"Chrysler Imperial\"   \"3\"    \"4\"    #>  [6,] \"Fiat 128\"            \"4\"    \"1\"    #>  [7,] \"Honda Civic\"         \"4\"    \"2\"    #>  [8,] \"Toyota Corolla\"      \"4\"    \"1\"    #>  [9,] \"Toyota Corona\"       \"3\"    \"1\"    #> [10,] \"Dodge Challenger\"    \"3\"    \"2\"    #> [11,] \"AMC Javelin\"         \"3\"    \"2\"    #> [12,] \"Camaro Z28\"          \"3\"    \"4\"    #> [13,] \"Pontiac Firebird\"    \"3\"    \"2\"    #> [14,] \"Fiat X1-9\"           \"4\"    \"1\"    #>  #> $spans #>       [,1] [,2] [,3] #>  [1,]    1    1    1 #>  [2,]    1    1    1 #>  [3,]    1    1    1 #>  [4,]    1    1    1 #>  [5,]    1    1    1 #>  [6,]    1    1    1 #>  [7,]    1    1    1 #>  [8,]    1    1    1 #>  [9,]    1    1    1 #> [10,]    1    1    1 #> [11,]    1    1    1 #> [12,]    1    1    1 #> [13,]    1    1    1 #> [14,]    1    1    1 #>  #> $aligns #>       [,1]   [,2]     [,3]     #>  [1,] \"left\" \"center\" \"center\" #>  [2,] \"left\" \"center\" \"center\" #>  [3,] \"left\" \"center\" \"center\" #>  [4,] \"left\" \"center\" \"center\" #>  [5,] \"left\" \"center\" \"center\" #>  [6,] \"left\" \"center\" \"center\" #>  [7,] \"left\" \"center\" \"center\" #>  [8,] \"left\" \"center\" \"center\" #>  [9,] \"left\" \"center\" \"center\" #> [10,] \"left\" \"center\" \"center\" #> [11,] \"left\" \"center\" \"center\" #> [12,] \"left\" \"center\" \"center\" #> [13,] \"left\" \"center\" \"center\" #> [14,] \"left\" \"center\" \"center\" #>  #> $display #>       [,1] [,2] [,3] #>  [1,] TRUE TRUE TRUE #>  [2,] TRUE TRUE TRUE #>  [3,] TRUE TRUE TRUE #>  [4,] TRUE TRUE TRUE #>  [5,] TRUE TRUE TRUE #>  [6,] TRUE TRUE TRUE #>  [7,] TRUE TRUE TRUE #>  [8,] TRUE TRUE TRUE #>  [9,] TRUE TRUE TRUE #> [10,] TRUE TRUE TRUE #> [11,] TRUE TRUE TRUE #> [12,] TRUE TRUE TRUE #> [13,] TRUE TRUE TRUE #> [14,] TRUE TRUE TRUE #>  #> $formats #>    rnms gear carb #> 1                 #> 15        xx   xx #> 16        xx   xx #> 17        xx   xx #> 18        xx   xx #> 19        xx   xx #> 20        xx   xx #> 21        xx   xx #> 22        xx   xx #> 23        xx   xx #> 24        xx   xx #> 25        xx   xx #> 26        xx   xx #> 27        xx   xx #>  #> $row_info #>                                   label                name abs_rownumber #> Merc 450SLC                 Merc 450SLC         Merc 450SLC             1 #> Cadillac Fleetwood   Cadillac Fleetwood  Cadillac Fleetwood             2 #> Lincoln Continental Lincoln Continental Lincoln Continental             3 #> Chrysler Imperial     Chrysler Imperial   Chrysler Imperial             4 #> Fiat 128                       Fiat 128            Fiat 128             5 #> Honda Civic                 Honda Civic         Honda Civic             6 #> Toyota Corolla           Toyota Corolla      Toyota Corolla             7 #> Toyota Corona             Toyota Corona       Toyota Corona             8 #> Dodge Challenger       Dodge Challenger    Dodge Challenger             9 #> AMC Javelin                 AMC Javelin         AMC Javelin            10 #> Camaro Z28                   Camaro Z28          Camaro Z28            11 #> Pontiac Firebird       Pontiac Firebird    Pontiac Firebird            12 #> Fiat X1-9                     Fiat X1-9           Fiat X1-9            13 #>                             path pos_in_siblings n_siblings self_extent #> Merc 450SLC          Merc 450SLC              14         32           1 #> Cadillac Fleetwood  Cadillac....              15         32           1 #> Lincoln Continental Lincoln ....              16         32           1 #> Chrysler Imperial   Chrysler....              17         32           1 #> Fiat 128                Fiat 128              18         32           1 #> Honda Civic          Honda Civic              19         32           1 #> Toyota Corolla      Toyota C....              20         32           1 #> Toyota Corona       Toyota C....              21         32           1 #> Dodge Challenger    Dodge Ch....              22         32           1 #> AMC Javelin          AMC Javelin              23         32           1 #> Camaro Z28            Camaro Z28              24         32           1 #> Pontiac Firebird    Pontiac ....              25         32           1 #> Fiat X1-9              Fiat X1-9              26         32           1 #>                     par_extent reprint_inds node_class indent nrowrefs #> Merc 450SLC                  0                 DataRow      0        0 #> Cadillac Fleetwood           0                 DataRow      0        0 #> Lincoln Continental          0                 DataRow      0        0 #> Chrysler Imperial            0                 DataRow      0        0 #> Fiat 128                     0                 DataRow      0        0 #> Honda Civic                  0                 DataRow      0        0 #> Toyota Corolla               0                 DataRow      0        0 #> Toyota Corona                0                 DataRow      0        0 #> Dodge Challenger             0                 DataRow      0        0 #> AMC Javelin                  0                 DataRow      0        0 #> Camaro Z28                   0                 DataRow      0        0 #> Pontiac Firebird             0                 DataRow      0        0 #> Fiat X1-9                    0                 DataRow      0        0 #>                     ncellrefs nreflines force_page page_title trailing_sep #> Merc 450SLC                 0         0      FALSE       <NA>         <NA> #> Cadillac Fleetwood          0         0      FALSE       <NA>         <NA> #> Lincoln Continental         0         0      FALSE       <NA>         <NA> #> Chrysler Imperial           0         0      FALSE       <NA>         <NA> #> Fiat 128                    0         0      FALSE       <NA>         <NA> #> Honda Civic                 0         0      FALSE       <NA>         <NA> #> Toyota Corolla              0         0      FALSE       <NA>         <NA> #> Toyota Corona               0         0      FALSE       <NA>         <NA> #> Dodge Challenger            0         0      FALSE       <NA>         <NA> #> AMC Javelin                 0         0      FALSE       <NA>         <NA> #> Camaro Z28                  0         0      FALSE       <NA>         <NA> #> Pontiac Firebird            0         0      FALSE       <NA>         <NA> #> Fiat X1-9                   0         0      FALSE       <NA>         <NA> #>                     ref_info_df #> Merc 450SLC                     #> Cadillac Fleetwood              #> Lincoln Continental             #> Chrysler Imperial               #> Fiat 128                        #> Honda Civic                     #> Toyota Corolla                  #> Toyota Corona                   #> Dodge Challenger                #> AMC Javelin                     #> Camaro Z28                      #> Pontiac Firebird                #> Fiat X1-9                       #>  #> $line_grouping #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 #>  #> $main_title #> [1] \"\" #>  #> $subtitles #> character(0) #>  #> $page_titles #> character(0) #>  #> $main_footer #> [1] \"\" #>  #> $prov_footer #> [1] \"                                         page 6 of 9\" #>  #> $header_section_div #> [1] NA #>  #> $horizontal_sep #> [1] \"o\" #>  #> $col_gap #> [1] 3 #>  #> $listing_keycols #> NULL #>  #> $table_inset #> [1] 0 #>  #> $has_topleft #> [1] FALSE #>  #> $indent_size #> [1] 2 #>  #> $col_widths #> rnms gear carb  #>   19    4    4  #>  #> $fontspec #> $family #> [1] \"Courier\" #>  #> $size #> [1] 8 #>  #> $lineheight #> [1] 1 #>  #> attr(,\"class\") #> [1] \"font_spec\" \"list\"      #>  #> $num_rep_cols #> [1] 0 #>  #> $ref_fnote_df #> [1] row_path  col_path  row       col       symbol    ref_index msg       #> [8] nlines    #> <0 rows> (or 0-length row.names) #>  #> $col_info #>    label name abs_rownumber path pos_in_siblings n_siblings self_extent #> 10    10   10            10   NA               0          0           4 #> 11    11   11            11   NA               0          0           4 #>    par_extent reprint_inds node_class indent nrowrefs ncellrefs nreflines #> 10          0                   stuff      0        0         0         0 #> 11          0                   stuff      0        0         0         0 #>    force_page page_title trailing_sep ref_info_df #> 10      FALSE       <NA>         <NA>             #> 11      FALSE       <NA>         <NA>             #>  #> attr(,\"nrow_header\") #> [1] 1 #> attr(,\"ncols\") #> [1] 2 #> attr(,\"class\") #> [1] \"MatrixPrintForm\" \"list\"            #>  #> [[7]] #> $strings #>      rnms             mpg    cyl   disp    hp    #> [1,] \"\"               \"mpg\"  \"cyl\" \"disp\"  \"hp\"  #> [2,] \"Porsche 914-2\"  \"26\"   \"4\"   \"120.3\" \"91\"  #> [3,] \"Lotus Europa\"   \"30.4\" \"4\"   \"95.1\"  \"113\" #> [4,] \"Ford Pantera L\" \"15.8\" \"8\"   \"351\"   \"264\" #> [5,] \"Ferrari Dino\"   \"19.7\" \"6\"   \"145\"   \"175\" #> [6,] \"Maserati Bora\"  \"15\"   \"8\"   \"301\"   \"335\" #> [7,] \"Volvo 142E\"     \"21.4\" \"4\"   \"121\"   \"109\" #>  #> $spans #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    1    1    1    1 #> [2,]    1    1    1    1    1 #> [3,]    1    1    1    1    1 #> [4,]    1    1    1    1    1 #> [5,]    1    1    1    1    1 #> [6,]    1    1    1    1    1 #> [7,]    1    1    1    1    1 #>  #> $aligns #>      [,1]   [,2]     [,3]     [,4]     [,5]     #> [1,] \"left\" \"center\" \"center\" \"center\" \"center\" #> [2,] \"left\" \"center\" \"center\" \"center\" \"center\" #> [3,] \"left\" \"center\" \"center\" \"center\" \"center\" #> [4,] \"left\" \"center\" \"center\" \"center\" \"center\" #> [5,] \"left\" \"center\" \"center\" \"center\" \"center\" #> [6,] \"left\" \"center\" \"center\" \"center\" \"center\" #> [7,] \"left\" \"center\" \"center\" \"center\" \"center\" #>  #> $display #>      [,1] [,2] [,3] [,4] [,5] #> [1,] TRUE TRUE TRUE TRUE TRUE #> [2,] TRUE TRUE TRUE TRUE TRUE #> [3,] TRUE TRUE TRUE TRUE TRUE #> [4,] TRUE TRUE TRUE TRUE TRUE #> [5,] TRUE TRUE TRUE TRUE TRUE #> [6,] TRUE TRUE TRUE TRUE TRUE #> [7,] TRUE TRUE TRUE TRUE TRUE #>  #> $formats #>    rnms mpg cyl disp hp #> 1                       #> 28       xx  xx   xx xx #> 29       xx  xx   xx xx #> 30       xx  xx   xx xx #> 31       xx  xx   xx xx #> 32       xx  xx   xx xx #> 33       xx  xx   xx xx #>  #> $row_info #>                         label           name abs_rownumber         path #> Porsche 914-2   Porsche 914-2  Porsche 914-2             1 Porsche .... #> Lotus Europa     Lotus Europa   Lotus Europa             2 Lotus Europa #> Ford Pantera L Ford Pantera L Ford Pantera L             3 Ford Pan.... #> Ferrari Dino     Ferrari Dino   Ferrari Dino             4 Ferrari Dino #> Maserati Bora   Maserati Bora  Maserati Bora             5 Maserati.... #> Volvo 142E         Volvo 142E     Volvo 142E             6   Volvo 142E #>                pos_in_siblings n_siblings self_extent par_extent reprint_inds #> Porsche 914-2               27         32           1          0              #> Lotus Europa                28         32           1          0              #> Ford Pantera L              29         32           1          0              #> Ferrari Dino                30         32           1          0              #> Maserati Bora               31         32           1          0              #> Volvo 142E                  32         32           1          0              #>                node_class indent nrowrefs ncellrefs nreflines force_page #> Porsche 914-2     DataRow      0        0         0         0      FALSE #> Lotus Europa      DataRow      0        0         0         0      FALSE #> Ford Pantera L    DataRow      0        0         0         0      FALSE #> Ferrari Dino      DataRow      0        0         0         0      FALSE #> Maserati Bora     DataRow      0        0         0         0      FALSE #> Volvo 142E        DataRow      0        0         0         0      FALSE #>                page_title trailing_sep ref_info_df #> Porsche 914-2        <NA>         <NA>             #> Lotus Europa         <NA>         <NA>             #> Ford Pantera L       <NA>         <NA>             #> Ferrari Dino         <NA>         <NA>             #> Maserati Bora        <NA>         <NA>             #> Volvo 142E           <NA>         <NA>             #>  #> $line_grouping #> [1] 1 2 3 4 5 6 7 #>  #> $main_title #> [1] \"\" #>  #> $subtitles #> character(0) #>  #> $page_titles #> character(0) #>  #> $main_footer #> [1] \"\" #>  #> $prov_footer #> [1] \"                                         page 7 of 9\" #>  #> $header_section_div #> [1] NA #>  #> $horizontal_sep #> [1] \"o\" #>  #> $col_gap #> [1] 3 #>  #> $listing_keycols #> NULL #>  #> $table_inset #> [1] 0 #>  #> $has_topleft #> [1] FALSE #>  #> $indent_size #> [1] 2 #>  #> $col_widths #> rnms  mpg  cyl disp   hp  #>   19    4    3    5    3  #>  #> $fontspec #> $family #> [1] \"Courier\" #>  #> $size #> [1] 8 #>  #> $lineheight #> [1] 1 #>  #> attr(,\"class\") #> [1] \"font_spec\" \"list\"      #>  #> $num_rep_cols #> [1] 0 #>  #> $ref_fnote_df #> [1] row_path  col_path  row       col       symbol    ref_index msg       #> [8] nlines    #> <0 rows> (or 0-length row.names) #>  #> $col_info #>   label name abs_rownumber path pos_in_siblings n_siblings self_extent #> 1     1    1             1   NA               0          0           4 #> 2     2    2             2   NA               0          0           3 #> 3     3    3             3   NA               0          0           5 #> 4     4    4             4   NA               0          0           3 #>   par_extent reprint_inds node_class indent nrowrefs ncellrefs nreflines #> 1          0                   stuff      0        0         0         0 #> 2          0                   stuff      0        0         0         0 #> 3          0                   stuff      0        0         0         0 #> 4          0                   stuff      0        0         0         0 #>   force_page page_title trailing_sep ref_info_df #> 1      FALSE       <NA>         <NA>             #> 2      FALSE       <NA>         <NA>             #> 3      FALSE       <NA>         <NA>             #> 4      FALSE       <NA>         <NA>             #>  #> attr(,\"nrow_header\") #> [1] 1 #> attr(,\"ncols\") #> [1] 4 #> attr(,\"class\") #> [1] \"MatrixPrintForm\" \"list\"            #>  #> [[8]] #> $strings #>      rnms             drat   wt      qsec   vs   am   #> [1,] \"\"               \"drat\" \"wt\"    \"qsec\" \"vs\" \"am\" #> [2,] \"Porsche 914-2\"  \"4.43\" \"2.14\"  \"16.7\" \"0\"  \"1\"  #> [3,] \"Lotus Europa\"   \"3.77\" \"1.513\" \"16.9\" \"1\"  \"1\"  #> [4,] \"Ford Pantera L\" \"4.22\" \"3.17\"  \"14.5\" \"0\"  \"1\"  #> [5,] \"Ferrari Dino\"   \"3.62\" \"2.77\"  \"15.5\" \"0\"  \"1\"  #> [6,] \"Maserati Bora\"  \"3.54\" \"3.57\"  \"14.6\" \"0\"  \"1\"  #> [7,] \"Volvo 142E\"     \"4.11\" \"2.78\"  \"18.6\" \"1\"  \"1\"  #>  #> $spans #>      [,1] [,2] [,3] [,4] [,5] [,6] #> [1,]    1    1    1    1    1    1 #> [2,]    1    1    1    1    1    1 #> [3,]    1    1    1    1    1    1 #> [4,]    1    1    1    1    1    1 #> [5,]    1    1    1    1    1    1 #> [6,]    1    1    1    1    1    1 #> [7,]    1    1    1    1    1    1 #>  #> $aligns #>      [,1]   [,2]     [,3]     [,4]     [,5]     [,6]     #> [1,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [2,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [3,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [4,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [5,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [6,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #> [7,] \"left\" \"center\" \"center\" \"center\" \"center\" \"center\" #>  #> $display #>      [,1] [,2] [,3] [,4] [,5] [,6] #> [1,] TRUE TRUE TRUE TRUE TRUE TRUE #> [2,] TRUE TRUE TRUE TRUE TRUE TRUE #> [3,] TRUE TRUE TRUE TRUE TRUE TRUE #> [4,] TRUE TRUE TRUE TRUE TRUE TRUE #> [5,] TRUE TRUE TRUE TRUE TRUE TRUE #> [6,] TRUE TRUE TRUE TRUE TRUE TRUE #> [7,] TRUE TRUE TRUE TRUE TRUE TRUE #>  #> $formats #>    rnms drat wt qsec vs am #> 1                          #> 28        xx xx   xx xx xx #> 29        xx xx   xx xx xx #> 30        xx xx   xx xx xx #> 31        xx xx   xx xx xx #> 32        xx xx   xx xx xx #> 33        xx xx   xx xx xx #>  #> $row_info #>                         label           name abs_rownumber         path #> Porsche 914-2   Porsche 914-2  Porsche 914-2             1 Porsche .... #> Lotus Europa     Lotus Europa   Lotus Europa             2 Lotus Europa #> Ford Pantera L Ford Pantera L Ford Pantera L             3 Ford Pan.... #> Ferrari Dino     Ferrari Dino   Ferrari Dino             4 Ferrari Dino #> Maserati Bora   Maserati Bora  Maserati Bora             5 Maserati.... #> Volvo 142E         Volvo 142E     Volvo 142E             6   Volvo 142E #>                pos_in_siblings n_siblings self_extent par_extent reprint_inds #> Porsche 914-2               27         32           1          0              #> Lotus Europa                28         32           1          0              #> Ford Pantera L              29         32           1          0              #> Ferrari Dino                30         32           1          0              #> Maserati Bora               31         32           1          0              #> Volvo 142E                  32         32           1          0              #>                node_class indent nrowrefs ncellrefs nreflines force_page #> Porsche 914-2     DataRow      0        0         0         0      FALSE #> Lotus Europa      DataRow      0        0         0         0      FALSE #> Ford Pantera L    DataRow      0        0         0         0      FALSE #> Ferrari Dino      DataRow      0        0         0         0      FALSE #> Maserati Bora     DataRow      0        0         0         0      FALSE #> Volvo 142E        DataRow      0        0         0         0      FALSE #>                page_title trailing_sep ref_info_df #> Porsche 914-2        <NA>         <NA>             #> Lotus Europa         <NA>         <NA>             #> Ford Pantera L       <NA>         <NA>             #> Ferrari Dino         <NA>         <NA>             #> Maserati Bora        <NA>         <NA>             #> Volvo 142E           <NA>         <NA>             #>  #> $line_grouping #> [1] 1 2 3 4 5 6 7 #>  #> $main_title #> [1] \"\" #>  #> $subtitles #> character(0) #>  #> $page_titles #> character(0) #>  #> $main_footer #> [1] \"\" #>  #> $prov_footer #> [1] \"                                         page 8 of 9\" #>  #> $header_section_div #> [1] NA #>  #> $horizontal_sep #> [1] \"o\" #>  #> $col_gap #> [1] 3 #>  #> $listing_keycols #> NULL #>  #> $table_inset #> [1] 0 #>  #> $has_topleft #> [1] FALSE #>  #> $indent_size #> [1] 2 #>  #> $col_widths #> rnms drat   wt qsec   vs   am  #>   19    4    5    5    2    2  #>  #> $fontspec #> $family #> [1] \"Courier\" #>  #> $size #> [1] 8 #>  #> $lineheight #> [1] 1 #>  #> attr(,\"class\") #> [1] \"font_spec\" \"list\"      #>  #> $num_rep_cols #> [1] 0 #>  #> $ref_fnote_df #> [1] row_path  col_path  row       col       symbol    ref_index msg       #> [8] nlines    #> <0 rows> (or 0-length row.names) #>  #> $col_info #>   label name abs_rownumber path pos_in_siblings n_siblings self_extent #> 5     5    5             5   NA               0          0           4 #> 6     6    6             6   NA               0          0           5 #> 7     7    7             7   NA               0          0           5 #> 8     8    8             8   NA               0          0           2 #> 9     9    9             9   NA               0          0           2 #>   par_extent reprint_inds node_class indent nrowrefs ncellrefs nreflines #> 5          0                   stuff      0        0         0         0 #> 6          0                   stuff      0        0         0         0 #> 7          0                   stuff      0        0         0         0 #> 8          0                   stuff      0        0         0         0 #> 9          0                   stuff      0        0         0         0 #>   force_page page_title trailing_sep ref_info_df #> 5      FALSE       <NA>         <NA>             #> 6      FALSE       <NA>         <NA>             #> 7      FALSE       <NA>         <NA>             #> 8      FALSE       <NA>         <NA>             #> 9      FALSE       <NA>         <NA>             #>  #> attr(,\"nrow_header\") #> [1] 1 #> attr(,\"ncols\") #> [1] 5 #> attr(,\"class\") #> [1] \"MatrixPrintForm\" \"list\"            #>  #> [[9]] #> $strings #>      rnms             gear   carb   #> [1,] \"\"               \"gear\" \"carb\" #> [2,] \"Porsche 914-2\"  \"5\"    \"2\"    #> [3,] \"Lotus Europa\"   \"5\"    \"2\"    #> [4,] \"Ford Pantera L\" \"5\"    \"4\"    #> [5,] \"Ferrari Dino\"   \"5\"    \"6\"    #> [6,] \"Maserati Bora\"  \"5\"    \"8\"    #> [7,] \"Volvo 142E\"     \"4\"    \"2\"    #>  #> $spans #>      [,1] [,2] [,3] #> [1,]    1    1    1 #> [2,]    1    1    1 #> [3,]    1    1    1 #> [4,]    1    1    1 #> [5,]    1    1    1 #> [6,]    1    1    1 #> [7,]    1    1    1 #>  #> $aligns #>      [,1]   [,2]     [,3]     #> [1,] \"left\" \"center\" \"center\" #> [2,] \"left\" \"center\" \"center\" #> [3,] \"left\" \"center\" \"center\" #> [4,] \"left\" \"center\" \"center\" #> [5,] \"left\" \"center\" \"center\" #> [6,] \"left\" \"center\" \"center\" #> [7,] \"left\" \"center\" \"center\" #>  #> $display #>      [,1] [,2] [,3] #> [1,] TRUE TRUE TRUE #> [2,] TRUE TRUE TRUE #> [3,] TRUE TRUE TRUE #> [4,] TRUE TRUE TRUE #> [5,] TRUE TRUE TRUE #> [6,] TRUE TRUE TRUE #> [7,] TRUE TRUE TRUE #>  #> $formats #>    rnms gear carb #> 1                 #> 28        xx   xx #> 29        xx   xx #> 30        xx   xx #> 31        xx   xx #> 32        xx   xx #> 33        xx   xx #>  #> $row_info #>                         label           name abs_rownumber         path #> Porsche 914-2   Porsche 914-2  Porsche 914-2             1 Porsche .... #> Lotus Europa     Lotus Europa   Lotus Europa             2 Lotus Europa #> Ford Pantera L Ford Pantera L Ford Pantera L             3 Ford Pan.... #> Ferrari Dino     Ferrari Dino   Ferrari Dino             4 Ferrari Dino #> Maserati Bora   Maserati Bora  Maserati Bora             5 Maserati.... #> Volvo 142E         Volvo 142E     Volvo 142E             6   Volvo 142E #>                pos_in_siblings n_siblings self_extent par_extent reprint_inds #> Porsche 914-2               27         32           1          0              #> Lotus Europa                28         32           1          0              #> Ford Pantera L              29         32           1          0              #> Ferrari Dino                30         32           1          0              #> Maserati Bora               31         32           1          0              #> Volvo 142E                  32         32           1          0              #>                node_class indent nrowrefs ncellrefs nreflines force_page #> Porsche 914-2     DataRow      0        0         0         0      FALSE #> Lotus Europa      DataRow      0        0         0         0      FALSE #> Ford Pantera L    DataRow      0        0         0         0      FALSE #> Ferrari Dino      DataRow      0        0         0         0      FALSE #> Maserati Bora     DataRow      0        0         0         0      FALSE #> Volvo 142E        DataRow      0        0         0         0      FALSE #>                page_title trailing_sep ref_info_df #> Porsche 914-2        <NA>         <NA>             #> Lotus Europa         <NA>         <NA>             #> Ford Pantera L       <NA>         <NA>             #> Ferrari Dino         <NA>         <NA>             #> Maserati Bora        <NA>         <NA>             #> Volvo 142E           <NA>         <NA>             #>  #> $line_grouping #> [1] 1 2 3 4 5 6 7 #>  #> $main_title #> [1] \"\" #>  #> $subtitles #> character(0) #>  #> $page_titles #> character(0) #>  #> $main_footer #> [1] \"\" #>  #> $prov_footer #> [1] \"                                         page 9 of 9\" #>  #> $header_section_div #> [1] NA #>  #> $horizontal_sep #> [1] \"o\" #>  #> $col_gap #> [1] 3 #>  #> $listing_keycols #> NULL #>  #> $table_inset #> [1] 0 #>  #> $has_topleft #> [1] FALSE #>  #> $indent_size #> [1] 2 #>  #> $col_widths #> rnms gear carb  #>   19    4    4  #>  #> $fontspec #> $family #> [1] \"Courier\" #>  #> $size #> [1] 8 #>  #> $lineheight #> [1] 1 #>  #> attr(,\"class\") #> [1] \"font_spec\" \"list\"      #>  #> $num_rep_cols #> [1] 0 #>  #> $ref_fnote_df #> [1] row_path  col_path  row       col       symbol    ref_index msg       #> [8] nlines    #> <0 rows> (or 0-length row.names) #>  #> $col_info #>    label name abs_rownumber path pos_in_siblings n_siblings self_extent #> 10    10   10            10   NA               0          0           4 #> 11    11   11            11   NA               0          0           4 #>    par_extent reprint_inds node_class indent nrowrefs ncellrefs nreflines #> 10          0                   stuff      0        0         0         0 #> 11          0                   stuff      0        0         0         0 #>    force_page page_title trailing_sep ref_info_df #> 10      FALSE       <NA>         <NA>             #> 11      FALSE       <NA>         <NA>             #>  #> attr(,\"nrow_header\") #> [1] 1 #> attr(,\"ncols\") #> [1] 2 #> attr(,\"class\") #> [1] \"MatrixPrintForm\" \"list\"            #>   diagnose_pagination(mpf, pg_width = 5, pg_height = 3) #> Determining lines required for header content: 0 title and 2 table header lines #> Determining lines required for footer content: 3 lines #> Lines per page available for tables rows: 13 (original: 18) #> --------- ROW-WISE: Checking possible pagination for page 1 #> -> Attempting pagination between 1 and 13 row #>   OK [13 lines] #> --------- ROW-WISE: Checking possible pagination for page 2 #> -> Attempting pagination between 14 and 26 row #>   OK [13 lines] #> --------- ROW-WISE: Checking possible pagination for page 3 #> -> Attempting pagination between 27 and 32 row #>   OK [6 lines] #> Adjusted characters per page: 33 [original: 52, table inset: 0, row labels: 19] #> ========= COLUMN-WISE: Checking possible pagination for page 1 #> -> Attempting pagination between 1 and 11 column #>   FAIL: selected 11 columns require 107 chars, while only 52 are available.  #>         details: [raw: 74 chars (11 cols), rep. cols: 0 chars (0 cols), tot. colgap: 33 chars]. #> -> Attempting pagination between 1 and 10 column #>   FAIL: selected 10 columns require 97 chars, while only 52 are available.  #>         details: [raw: 67 chars (10 cols), rep. cols: 0 chars (0 cols), tot. colgap: 30 chars]. #> -> Attempting pagination between 1 and 9 column #>   FAIL: selected 9 columns require 87 chars, while only 52 are available.  #>         details: [raw: 60 chars (9 cols), rep. cols: 0 chars (0 cols), tot. colgap: 27 chars]. #> -> Attempting pagination between 1 and 8 column #>   FAIL: selected 8 columns require 79 chars, while only 52 are available.  #>         details: [raw: 55 chars (8 cols), rep. cols: 0 chars (0 cols), tot. colgap: 24 chars]. #> -> Attempting pagination between 1 and 7 column #>   FAIL: selected 7 columns require 71 chars, while only 52 are available.  #>         details: [raw: 50 chars (7 cols), rep. cols: 0 chars (0 cols), tot. colgap: 21 chars]. #> -> Attempting pagination between 1 and 6 column #>   FAIL: selected 6 columns require 60 chars, while only 52 are available.  #>         details: [raw: 42 chars (6 cols), rep. cols: 0 chars (0 cols), tot. colgap: 18 chars]. #> -> Attempting pagination between 1 and 5 column #>   FAIL: selected 5 columns require 49 chars, while only 52 are available.  #>         details: [raw: 34 chars (5 cols), rep. cols: 0 chars (0 cols), tot. colgap: 15 chars]. #> -> Attempting pagination between 1 and 4 column #>   OK [27 chars] #> ========= COLUMN-WISE: Checking possible pagination for page 2 #> -> Attempting pagination between 5 and 11 column #>   FAIL: selected 7 columns require 68 chars, while only 52 are available.  #>         details: [raw: 47 chars (7 cols), rep. cols: 0 chars (0 cols), tot. colgap: 21 chars]. #> -> Attempting pagination between 5 and 10 column #>   FAIL: selected 6 columns require 58 chars, while only 52 are available.  #>         details: [raw: 40 chars (6 cols), rep. cols: 0 chars (0 cols), tot. colgap: 18 chars]. #> -> Attempting pagination between 5 and 9 column #>   OK [33 chars] #> ========= COLUMN-WISE: Checking possible pagination for page 3 #> -> Attempting pagination between 10 and 11 column #>   OK [14 chars] #> $lpp_diagnostics #> character(0) #>  #> $row_diagnostics #>    abs_rownumber               label self_extent par_extent node_class #> 1              1           Mazda RX4           1          0    DataRow #> 2              2       Mazda RX4 Wag           1          0    DataRow #> 3              3          Datsun 710           1          0    DataRow #> 4              4      Hornet 4 Drive           1          0    DataRow #> 5              5   Hornet Sportabout           1          0    DataRow #> 6              6             Valiant           1          0    DataRow #> 7              7          Duster 360           1          0    DataRow #> 8              8           Merc 240D           1          0    DataRow #> 9              9            Merc 230           1          0    DataRow #> 10            10            Merc 280           1          0    DataRow #> 11            11           Merc 280C           1          0    DataRow #> 12            12          Merc 450SE           1          0    DataRow #> 13            13          Merc 450SL           1          0    DataRow #> 14            14         Merc 450SLC           1          0    DataRow #> 15            15  Cadillac Fleetwood           1          0    DataRow #> 16            16 Lincoln Continental           1          0    DataRow #> 17            17   Chrysler Imperial           1          0    DataRow #> 18            18            Fiat 128           1          0    DataRow #> 19            19         Honda Civic           1          0    DataRow #> 20            20      Toyota Corolla           1          0    DataRow #> 21            21       Toyota Corona           1          0    DataRow #> 22            22    Dodge Challenger           1          0    DataRow #> 23            23         AMC Javelin           1          0    DataRow #> 24            24          Camaro Z28           1          0    DataRow #> 25            25    Pontiac Firebird           1          0    DataRow #> 26            26           Fiat X1-9           1          0    DataRow #> 27            27       Porsche 914-2           1          0    DataRow #> 28            28        Lotus Europa           1          0    DataRow #> 29            29      Ford Pantera L           1          0    DataRow #> 30            30        Ferrari Dino           1          0    DataRow #> 31            31       Maserati Bora           1          0    DataRow #> 32            32          Volvo 142E           1          0    DataRow #>    pag_attempted final_pag_result #> 1          FALSE             <NA> #> 2          FALSE             <NA> #> 3          FALSE             <NA> #> 4          FALSE             <NA> #> 5          FALSE             <NA> #> 6          FALSE             <NA> #> 7          FALSE             <NA> #> 8          FALSE             <NA> #> 9          FALSE             <NA> #> 10         FALSE             <NA> #> 11         FALSE             <NA> #> 12         FALSE             <NA> #> 13         FALSE             <NA> #> 14         FALSE             <NA> #> 15         FALSE             <NA> #> 16         FALSE             <NA> #> 17         FALSE             <NA> #> 18         FALSE             <NA> #> 19         FALSE             <NA> #> 20         FALSE             <NA> #> 21         FALSE             <NA> #> 22         FALSE             <NA> #> 23         FALSE             <NA> #> 24         FALSE             <NA> #> 25         FALSE             <NA> #> 26         FALSE             <NA> #> 27         FALSE             <NA> #> 28         FALSE             <NA> #> 29         FALSE             <NA> #> 30         FALSE             <NA> #> 31         FALSE             <NA> #> 32         FALSE             <NA> #>  #> $cpp_diagnostics #> character(0) #>  #> $col_diagnostics #>    abs_colnumber self_extent pag_attempted final_pag_result #> 1              1           4         FALSE             <NA> #> 2              2           3         FALSE             <NA> #> 3              3           5         FALSE             <NA> #> 4              4           3         FALSE             <NA> #> 5              5           4         FALSE             <NA> #> 6              6           5         FALSE             <NA> #> 7              7           5         FALSE             <NA> #> 8              8           2         FALSE             <NA> #> 9              9           2         FALSE             <NA> #> 10            10           4         FALSE             <NA> #> 11            11           4         FALSE             <NA> #>  clws <- propose_column_widths(mpf) clws[1] <- floor(clws[1] / 3) dgnost <- diagnose_pagination(mpf, pg_width = 5, pg_height = 3, colwidths = clws) #> Determining lines required for header content: 0 title and 2 table header lines #> Determining lines required for footer content: 3 lines #> Lines per page available for tables rows: 13 (original: 18) #> --------- ROW-WISE: Checking possible pagination for page 1 #> -> Attempting pagination between 1 and 13 row #>   FAIL: rows selected for pagination require 29 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 29 lns (13 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 1 and 12 row #>   FAIL: rows selected for pagination require 27 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 27 lns (12 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 1 and 11 row #>   FAIL: rows selected for pagination require 25 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 25 lns (11 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 1 and 10 row #>   FAIL: rows selected for pagination require 23 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 23 lns (10 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 1 and 9 row #>   FAIL: rows selected for pagination require 21 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 21 lns (9 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 1 and 8 row #>   FAIL: rows selected for pagination require 19 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 19 lns (8 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 1 and 7 row #>   FAIL: rows selected for pagination require 17 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 17 lns (7 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 1 and 6 row #>   FAIL: rows selected for pagination require 15 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 15 lns (6 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 1 and 5 row #>   OK [13 lines] #> --------- ROW-WISE: Checking possible pagination for page 2 #> -> Attempting pagination between 6 and 18 row #>   FAIL: rows selected for pagination require 30 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 30 lns (13 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 6 and 17 row #>   FAIL: rows selected for pagination require 28 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 28 lns (12 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 6 and 16 row #>   FAIL: rows selected for pagination require 25 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 25 lns (11 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 6 and 15 row #>   FAIL: rows selected for pagination require 21 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 21 lns (10 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 6 and 14 row #>   FAIL: rows selected for pagination require 18 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 18 lns (9 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 6 and 13 row #>   FAIL: rows selected for pagination require 16 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 16 lns (8 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 6 and 12 row #>   FAIL: rows selected for pagination require 14 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 14 lns (7 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 6 and 11 row #>   OK [12 lines] #> --------- ROW-WISE: Checking possible pagination for page 3 #> -> Attempting pagination between 12 and 24 row #>   FAIL: rows selected for pagination require 32 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 32 lns (13 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 12 and 23 row #>   FAIL: rows selected for pagination require 30 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 30 lns (12 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 12 and 22 row #>   FAIL: rows selected for pagination require 28 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 28 lns (11 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 12 and 21 row #>   FAIL: rows selected for pagination require 25 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 25 lns (10 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 12 and 20 row #>   FAIL: rows selected for pagination require 23 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 23 lns (9 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 12 and 19 row #>   FAIL: rows selected for pagination require 20 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 20 lns (8 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 12 and 18 row #>   FAIL: rows selected for pagination require 18 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 18 lns (7 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 12 and 17 row #>   FAIL: rows selected for pagination require 16 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 16 lns (6 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 12 and 16 row #>   OK [13 lines] #> --------- ROW-WISE: Checking possible pagination for page 4 #> -> Attempting pagination between 17 and 29 row #>   FAIL: rows selected for pagination require 32 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 32 lns (13 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 17 and 28 row #>   FAIL: rows selected for pagination require 29 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 29 lns (12 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 17 and 27 row #>   FAIL: rows selected for pagination require 27 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 27 lns (11 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 17 and 26 row #>   FAIL: rows selected for pagination require 24 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 24 lns (10 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 17 and 25 row #>   FAIL: rows selected for pagination require 22 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 22 lns (9 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 17 and 24 row #>   FAIL: rows selected for pagination require 19 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 19 lns (8 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 17 and 23 row #>   FAIL: rows selected for pagination require 17 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 17 lns (7 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 17 and 22 row #>   FAIL: rows selected for pagination require 15 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 15 lns (6 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 17 and 21 row #>   OK [12 lines] #> --------- ROW-WISE: Checking possible pagination for page 5 #> -> Attempting pagination between 22 and 32 row #>   FAIL: rows selected for pagination require 27 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 27 lns (11 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 22 and 31 row #>   FAIL: rows selected for pagination require 25 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 25 lns (10 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 22 and 30 row #>   FAIL: rows selected for pagination require 22 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 22 lns (9 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 22 and 29 row #>   FAIL: rows selected for pagination require 20 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 20 lns (8 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 22 and 28 row #>   FAIL: rows selected for pagination require 17 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 17 lns (7 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 22 and 27 row #>   FAIL: rows selected for pagination require 15 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 15 lns (6 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 22 and 26 row #>   OK [12 lines] #> --------- ROW-WISE: Checking possible pagination for page 6 #> -> Attempting pagination between 27 and 32 row #>   FAIL: rows selected for pagination require 15 lines while only 13 are available from lpp = 18 and 5 header/footers lines. #>         details: [raw: 15 lns (6 rws), rep. context: 0 lns (0 rws), refs: 0 lns (0) sect. divs: 0 lns]. #> -> Attempting pagination between 27 and 31 row #>   FAIL: last row had only 0 following siblings, needed 2 #> -> Attempting pagination between 27 and 30 row #>   FAIL: last row had only 1 following siblings, needed 2 #> -> Attempting pagination between 27 and 29 row #>   OK [8 lines] #> --------- ROW-WISE: Checking possible pagination for page 7 #> -> Attempting pagination between 30 and 32 row #>   OK [7 lines] #> Adjusted characters per page: 46 [original: 52, table inset: 0, row labels: 6] #> ========= COLUMN-WISE: Checking possible pagination for page 1 #> -> Attempting pagination between 1 and 11 column #>   FAIL: selected 11 columns require 107 chars, while only 52 are available.  #>         details: [raw: 74 chars (11 cols), rep. cols: 0 chars (0 cols), tot. colgap: 33 chars]. #> -> Attempting pagination between 1 and 10 column #>   FAIL: selected 10 columns require 97 chars, while only 52 are available.  #>         details: [raw: 67 chars (10 cols), rep. cols: 0 chars (0 cols), tot. colgap: 30 chars]. #> -> Attempting pagination between 1 and 9 column #>   FAIL: selected 9 columns require 87 chars, while only 52 are available.  #>         details: [raw: 60 chars (9 cols), rep. cols: 0 chars (0 cols), tot. colgap: 27 chars]. #> -> Attempting pagination between 1 and 8 column #>   FAIL: selected 8 columns require 79 chars, while only 52 are available.  #>         details: [raw: 55 chars (8 cols), rep. cols: 0 chars (0 cols), tot. colgap: 24 chars]. #> -> Attempting pagination between 1 and 7 column #>   FAIL: selected 7 columns require 71 chars, while only 52 are available.  #>         details: [raw: 50 chars (7 cols), rep. cols: 0 chars (0 cols), tot. colgap: 21 chars]. #> -> Attempting pagination between 1 and 6 column #>   OK [42 chars] #> ========= COLUMN-WISE: Checking possible pagination for page 2 #> -> Attempting pagination between 7 and 11 column #>   OK [32 chars] try(diagnose_pagination(mpf, pg_width = 1)) # fails #> Determining lines required for header content: 0 title and 2 table header lines #> Determining lines required for footer content: 3 lines #> Lines per page available for tables rows: 85 (original: 90) #> --------- ROW-WISE: Checking possible pagination for page 1 #> -> Attempting pagination between 1 and 32 row #>   OK [32 lines] #> Adjusted characters per page: -27 [original: -8, table inset: 0, row labels: 19] #> Error in pag_indices_inner(mf_cinfo(mf), rlpp = rcpp, lpp_or_cpp = cpp,  :  #>   Width of row labels equal to or larger than specified characters per page. #> Error in diagnose_pagination(mpf, pg_width = 1) :  #>   Width of row labels equal to or larger than specified characters per page."},{"path":"https://insightsengineering.github.io/formatters/main/reference/pagination_algo.html","id":null,"dir":"Reference","previous_headings":"","what":"Pagination ‚Äî pagination_algo","title":"Pagination ‚Äî pagination_algo","text":"Pagination","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/pagination_algo.html","id":"pagination-algorithm","dir":"Reference","previous_headings":"","what":"Pagination Algorithm","title":"Pagination ‚Äî pagination_algo","text":"Pagination performed independently vertical horizontal directions based solely pagination data frame, includes following information row/column: Number lines/characters rendering row take word-wrapping (self_extent) indices (reprint_inds) number lines (par_extent) rows act context row row's number siblings position within siblings Given lpp (cpp) already adjusted rendered elements rows/columns data frame pagination information, pagination performed via following algorithm start = 1. Core Pagination Algorithm: Initial guess pagination position start + lpp (start + cpp) guess valid pagination position, guess > start, decrement guess repeat. error thrown possible pagination positions start start + lpp (start + cpp) < start decrementing Retain pagination index pagination point less NROW(tt) (ncol(tt)), set start pos + 1, repeat steps (1) - (4). Validating Pagination Position: Given (already adjusted) lpp cpp value, pagination invalid : rows/columns page take (adjusted) lpp lines/cpp characters render including: word-wrapping (vertical ) context repetition (vertical ) footnote messages /section divider lines take many lines rendering rows (vertical ) row label content (row-group summary) row (vertical ) row pagination point siblings, less min_siblings preceding following siblings pagination occur within sub-table listed nosplitin","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/propose_column_widths.html","id":null,"dir":"Reference","previous_headings":"","what":"Propose column widths based on the MatrixPrintForm of an object ‚Äî propose_column_widths","title":"Propose column widths based on the MatrixPrintForm of an object ‚Äî propose_column_widths","text":"Row names also considered column output.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/propose_column_widths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Propose column widths based on the MatrixPrintForm of an object ‚Äî propose_column_widths","text":"","code":"propose_column_widths(   x,   indent_size = 2,   fontspec = font_spec(),   round_type = c(\"iec\", \"sas\") )"},{"path":"https://insightsengineering.github.io/formatters/main/reference/propose_column_widths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Propose column widths based on the MatrixPrintForm of an object ‚Äî propose_column_widths","text":"x () MatrixPrintForm object, object matrix_form method. indent_size (numeric(1)) indent size, characters. Ignored x already MatrixPrintForm object favor information . fontspec (font_spec) font_spec object specifying font information use calculating string widths heights, returned font_spec(). round_type (\"iec\" \"sas\") type rounding perform. iec, default, peforms rounding compliant IEC 60559 (see details), sas performs nearest-value rounding consistent rounding within SAS.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/propose_column_widths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Propose column widths based on the MatrixPrintForm of an object ‚Äî propose_column_widths","text":"vector column widths based content x use printing pagination.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/propose_column_widths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Propose column widths based on the MatrixPrintForm of an object ‚Äî propose_column_widths","text":"","code":"mf <- basic_matrix_form(mtcars) propose_column_widths(mf) #> rnms  mpg  cyl disp   hp drat   wt qsec   vs   am gear carb  #>   19    4    3    5    3    4    5    5    2    2    4    4"},{"path":"https://insightsengineering.github.io/formatters/main/reference/ref_df_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a row for a referential footnote information data frame ‚Äî ref_df_row","title":"Create a row for a referential footnote information data frame ‚Äî ref_df_row","text":"Create row referential footnote information data frame","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/ref_df_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a row for a referential footnote information data frame ‚Äî ref_df_row","text":"","code":"ref_df_row(   row_path = NA_character_,   col_path = NA_character_,   row = NA_integer_,   col = NA_integer_,   symbol = NA_character_,   ref_index = NA_integer_,   msg = NA_character_,   max_width = NULL )"},{"path":"https://insightsengineering.github.io/formatters/main/reference/ref_df_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a row for a referential footnote information data frame ‚Äî ref_df_row","text":"row_path (character) row path (NA_character_ none). col_path (character) column path (NA_character_ none). row (integer(1)) integer position row. col (integer(1)) integer position column. symbol (string) symbol reference. NA_character_ use ref_index automatically. ref_index (integer(1)) index footnote, used ordering even symbol NA. msg (string) string message, including symbol portion ({symbol} - ) max_width (numeric(1)) width strings wrapped determining many lines require.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/ref_df_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a row for a referential footnote information data frame ‚Äî ref_df_row","text":"single row data frame appropriate columns.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/round_fmt.html","id":null,"dir":"Reference","previous_headings":"","what":"Round and prepare a value for display ‚Äî round_fmt","title":"Round and prepare a value for display ‚Äî round_fmt","text":"function used within format_value() prepare numeric values within cells formatting display.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/round_fmt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round and prepare a value for display ‚Äî round_fmt","text":"","code":"round_fmt(x, digits, na_str = \"NA\", round_type = c(\"iec\", \"sas\"))"},{"path":"https://insightsengineering.github.io/formatters/main/reference/round_fmt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round and prepare a value for display ‚Äî round_fmt","text":"x (numeric(1)) value format. digits (numeric(1)) number digits round , NA convert character value rounding. na_str (string) value return x NA. round_type (\"iec\" \"sas\") type rounding perform. iec, default, peforms rounding compliant IEC 60559 (see details), sas performs nearest-value rounding consistent rounding within SAS.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/round_fmt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round and prepare a value for display ‚Äî round_fmt","text":"character value representing value rounding, containing trailing zeros required display exactly digits elements.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/round_fmt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Round and prepare a value for display ‚Äî round_fmt","text":"function combines rounding behavior strict decimal display sprintf(). default, R's standards-compliant round() function (see Details section documentation) used. exact behavior follows: x NA, value na_str returned. x non-NA digits NA, x converted character returned. x digits non-NA, round() called first, sprintf() used convert rounded value character appropriate number trailing zeros enforced.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/round_fmt.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Round and prepare a value for display ‚Äî round_fmt","text":"differs base R round() function NA digits indicate x converted character returned unchanged whereas round(x, digits=NA) returns NA values x. behavior differ .character(round(x, digits = digits)) case least digits significant digits decimal remain rounding. may differ sprintf(\"\\%.Nf\", x) values ending 5 decimal place many popular operating systems due round's stricter adherence IEC 60559 standard, particularly R versions > 4.0.0 (see warning round() documentation).","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/formatters/main/reference/round_fmt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Round and prepare a value for display ‚Äî round_fmt","text":"","code":"round_fmt(0, digits = 3) #> [1] \"0.000\" round_fmt(.395, digits = 2) #> [1] \"0.40\" round_fmt(NA, digits = 1) #> [1] \"NA\" round_fmt(NA, digits = 1, na_str = \"-\") #> [1] \"-\" round_fmt(2.765923, digits = NA) #> [1] \"2.765923\" round_fmt(0.845, digits = 2) #> [1] \"0.84\" round_fmt(0.845, digits = 2, round_type = \"sas\") #> [1] \"0.85\""},{"path":"https://insightsengineering.github.io/formatters/main/reference/spans_to_viscell.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform a vector of spans (with duplication) into a visibility vector ‚Äî spans_to_viscell","title":"Transform a vector of spans (with duplication) into a visibility vector ‚Äî spans_to_viscell","text":"Transform vector spans (duplication) visibility vector","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/spans_to_viscell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform a vector of spans (with duplication) into a visibility vector ‚Äî spans_to_viscell","text":"","code":"spans_to_viscell(spans)"},{"path":"https://insightsengineering.github.io/formatters/main/reference/spans_to_viscell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform a vector of spans (with duplication) into a visibility vector ‚Äî spans_to_viscell","text":"spans (numeric) vector spans, span value repeated cells covers.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/spans_to_viscell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform a vector of spans (with duplication) into a visibility vector ‚Äî spans_to_viscell","text":"logical vector length spans indicating whether contents string vector spans valid.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/spans_to_viscell.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform a vector of spans (with duplication) into a visibility vector ‚Äî spans_to_viscell","text":"values spans assumed repeated individual position covered span repeated value. means block values spans must length least equal value (.e. two 2s, three 3s, etc). function correctly handles cases two spans size next ; .e., block four 2s represents two large cells spans two individual cells.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/spans_to_viscell.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Transform a vector of spans (with duplication) into a visibility vector ‚Äî spans_to_viscell","text":"Currently checking enforcement done verify vector spans valid according specifications described Details section .","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/spans_to_viscell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform a vector of spans (with duplication) into a visibility vector ‚Äî spans_to_viscell","text":"","code":"spans_to_viscell(c(2, 2, 2, 2, 1, 3, 3, 3)) #> [1]  TRUE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE"},{"path":"https://insightsengineering.github.io/formatters/main/reference/spread_integer.html","id":null,"dir":"Reference","previous_headings":"","what":"Spread an integer to a given length ‚Äî spread_integer","title":"Spread an integer to a given length ‚Äî spread_integer","text":"Spread integer given length","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/spread_integer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spread an integer to a given length ‚Äî spread_integer","text":"","code":"spread_integer(x, len)"},{"path":"https://insightsengineering.github.io/formatters/main/reference/spread_integer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spread an integer to a given length ‚Äî spread_integer","text":"x (integer(1)) number spread. len (integer(1)) number times repeat x.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/spread_integer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spread an integer to a given length ‚Äî spread_integer","text":"x scalar whole number value (see .wholenumber()), value x repeated len times. Otherwise, error thrown.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/spread_integer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spread an integer to a given length ‚Äî spread_integer","text":"","code":"spread_integer(3, 1) #> [1] 3 spread_integer(0, 3) #> [1] 0 0 0 spread_integer(1, 3) #> [1] 1 0 0 spread_integer(2, 3) #> [1] 1 1 0 spread_integer(3, 3) #> [1] 1 1 1 spread_integer(4, 3) #> [1] 2 1 1 spread_integer(5, 3) #> [1] 2 2 1 spread_integer(6, 3) #> [1] 2 2 2 spread_integer(7, 3) #> [1] 3 2 2"},{"path":"https://insightsengineering.github.io/formatters/main/reference/sprintf_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify text format via a sprintf format string ‚Äî sprintf_format","title":"Specify text format via a sprintf format string ‚Äî sprintf_format","text":"Specify text format via sprintf format string","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/sprintf_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify text format via a sprintf format string ‚Äî sprintf_format","text":"","code":"sprintf_format(format)"},{"path":"https://insightsengineering.github.io/formatters/main/reference/sprintf_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify text format via a sprintf format string ‚Äî sprintf_format","text":"format (string) format string passed sprintf().","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/sprintf_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify text format via a sprintf format string ‚Äî sprintf_format","text":"formatting function wraps applies specified sprintf-style format string format.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/formatters/main/reference/sprintf_format.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify text format via a sprintf format string ‚Äî sprintf_format","text":"","code":"fmtfun <- sprintf_format(\"(N=%i\") format_value(100, format = fmtfun) #> [1] \"(N=100\"  fmtfun2 <- sprintf_format(\"%.4f - %.2f\") format_value(list(12.23456, 2.724)) #> [1] \"12.23456, 2.724\""},{"path":"https://insightsengineering.github.io/formatters/main/reference/table_inset.html","id":null,"dir":"Reference","previous_headings":"","what":"Access or (recursively) set table inset ‚Äî table_inset","title":"Access or (recursively) set table inset ‚Äî table_inset","text":"Table inset amount characters body table, referential footnotes, main footer material inset left-alignment titles provenance footer materials.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/table_inset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access or (recursively) set table inset ‚Äî table_inset","text":"","code":"table_inset(obj)  # S4 method for class 'MatrixPrintForm' table_inset(obj)  table_inset(obj) <- value  # S4 method for class 'MatrixPrintForm' table_inset(obj) <- value"},{"path":"https://insightsengineering.github.io/formatters/main/reference/table_inset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access or (recursively) set table inset ‚Äî table_inset","text":"obj () object get (recursively necessary) set table inset . value (string) string use new header/body separator.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/table_inset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access or (recursively) set table inset ‚Äî table_inset","text":"table_inset returns integer value table body (including column heading information section dividers), referential footnotes, main footer inset left alignment titles provenance footers rendering. table_inset<- returns obj new table_inset value applied recursively subtables.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/test_matrix_form.html","id":null,"dir":"Reference","previous_headings":"","what":"Create spoof matrix form from a data frame ‚Äî test_matrix_form","title":"Create spoof matrix form from a data frame ‚Äî test_matrix_form","text":"Useful functions writing tests examples, starting point sophisticated custom matrix_form methods.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/test_matrix_form.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create spoof matrix form from a data frame ‚Äî test_matrix_form","text":"","code":"basic_matrix_form(   df,   indent_rownames = FALSE,   parent_path = NULL,   ignore_rownames = FALSE,   add_decoration = FALSE,   fontspec = font_spec(),   split_labels = NULL,   data_labels = NULL,   num_rep_cols = 0L )  basic_listing_mf(   df,   keycols = names(df)[1],   add_decoration = TRUE,   fontspec = font_spec() )"},{"path":"https://insightsengineering.github.io/formatters/main/reference/test_matrix_form.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create spoof matrix form from a data frame ‚Äî test_matrix_form","text":"df (data.frame) data frame. indent_rownames (flag) whether row names indented. used testing purposes, defaults FALSE. TRUE, assigns label rows even lines (also format \"-\" value strings \"\"). Indentation works split labels used (see parameters split_labels data_labels). parent_path (string) parent path rows \"children \". Defaults NULL, usually needed. may necessary use \"root\", specific scenarios. ignore_rownames (flag) whether row names ignored. add_decoration (flag) whether adds title footer decorations added matrix form. fontspec (font_spec) font_spec object specifying font information use calculating string widths heights, returned font_spec(). split_labels (string) indicates column use split labels. NULL, split labels used. data_labels (string) indicates column use data labels. ignored split_labels present automatically assigned \"Analysis method\" split_labels present, data_labels NULL. direct column name used node name \"DataRow\" pathing. See mf_rinfo() information. num_rep_cols (numeric(1)) Number columns treated repeating columns. Defaults 0 basic_matrix_form length(keycols) basic_listing_mf. Note repeating columns separate row labels present. keycols (character) vector df column names printed first repeated values assigned \"\". format characteristic listing matrix form.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/test_matrix_form.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create spoof matrix form from a data frame ‚Äî test_matrix_form","text":"valid MatrixPrintForm object representing df ready ASCII rendering. valid MatrixPrintForm object representing df listing ready ASCII rendering.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/test_matrix_form.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create spoof matrix form from a data frame ‚Äî test_matrix_form","text":"column obj_format assigned, respected column values except label rows, present (see parameter split_labels).","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/test_matrix_form.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create spoof matrix form from a data frame ‚Äî test_matrix_form","text":"basic_listing_mf(): Create MatrixPrintForm object data frame df respects default formats listing object.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/test_matrix_form.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create spoof matrix form from a data frame ‚Äî test_matrix_form","text":"","code":"mform <- basic_matrix_form(mtcars) cat(toString(mform)) #>                       mpg    cyl   disp    hp    drat    wt     qsec    vs   am   gear   carb #> ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo #> Mazda RX4              21     6     160    110   3.9    2.62    16.46   0    1     4      4   #> Mazda RX4 Wag          21     6     160    110   3.9    2.875   17.02   0    1     4      4   #> Datsun 710            22.8    4     108    93    3.85   2.32    18.61   1    1     4      1   #> Hornet 4 Drive        21.4    6     258    110   3.08   3.215   19.44   1    0     3      1   #> Hornet Sportabout     18.7    8     360    175   3.15   3.44    17.02   0    0     3      2   #> Valiant               18.1    6     225    105   2.76   3.46    20.22   1    0     3      1   #> Duster 360            14.3    8     360    245   3.21   3.57    15.84   0    0     3      4   #> Merc 240D             24.4    4    146.7   62    3.69   3.19     20     1    0     4      2   #> Merc 230              22.8    4    140.8   95    3.92   3.15    22.9    1    0     4      2   #> Merc 280              19.2    6    167.6   123   3.92   3.44    18.3    1    0     4      4   #> Merc 280C             17.8    6    167.6   123   3.92   3.44    18.9    1    0     4      4   #> Merc 450SE            16.4    8    275.8   180   3.07   4.07    17.4    0    0     3      3   #> Merc 450SL            17.3    8    275.8   180   3.07   3.73    17.6    0    0     3      3   #> Merc 450SLC           15.2    8    275.8   180   3.07   3.78     18     0    0     3      3   #> Cadillac Fleetwood    10.4    8     472    205   2.93   5.25    17.98   0    0     3      4   #> Lincoln Continental   10.4    8     460    215    3     5.424   17.82   0    0     3      4   #> Chrysler Imperial     14.7    8     440    230   3.23   5.345   17.42   0    0     3      4   #> Fiat 128              32.4    4    78.7    66    4.08    2.2    19.47   1    1     4      1   #> Honda Civic           30.4    4    75.7    52    4.93   1.615   18.52   1    1     4      2   #> Toyota Corolla        33.9    4    71.1    65    4.22   1.835   19.9    1    1     4      1   #> Toyota Corona         21.5    4    120.1   97    3.7    2.465   20.01   1    0     3      1   #> Dodge Challenger      15.5    8     318    150   2.76   3.52    16.87   0    0     3      2   #> AMC Javelin           15.2    8     304    150   3.15   3.435   17.3    0    0     3      2   #> Camaro Z28            13.3    8     350    245   3.73   3.84    15.41   0    0     3      4   #> Pontiac Firebird      19.2    8     400    175   3.08   3.845   17.05   0    0     3      2   #> Fiat X1-9             27.3    4     79     66    4.08   1.935   18.9    1    1     4      1   #> Porsche 914-2          26     4    120.3   91    4.43   2.14    16.7    0    1     5      2   #> Lotus Europa          30.4    4    95.1    113   3.77   1.513   16.9    1    1     5      2   #> Ford Pantera L        15.8    8     351    264   4.22   3.17    14.5    0    1     5      4   #> Ferrari Dino          19.7    6     145    175   3.62   2.77    15.5    0    1     5      6   #> Maserati Bora          15     8     301    335   3.54   3.57    14.6    0    1     5      8   #> Volvo 142E            21.4    4     121    109   4.11   2.78    18.6    1    1     4      2    # Advanced test case with label rows library(dplyr) iris_output <- iris %>%   group_by(Species) %>%   summarize(\"all obs\" = round(mean(Petal.Length), 2)) %>%   mutate(\"DataRow_label\" = \"Mean\") mf <- basic_matrix_form(iris_output,   indent_rownames = TRUE,   split_labels = \"Species\", data_labels = \"DataRow_label\" ) cat(toString(mf)) #>              all obs #> oooooooooooooooooooo #> setosa               #>   Mean        1.46   #> versicolor           #>   Mean        4.26   #> virginica            #>   Mean        5.55   mform <- basic_listing_mf(mtcars) cat(toString(mform)) #> main title #> sub #> titles #>  #> ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo #> mpg    cyl   disp    hp    drat    wt     qsec    vs   am   gear   carb #> ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo #> 10.4    8     472    205   2.93   5.25    17.98   0    0     3      4   #>         8     460    215    3     5.424   17.82   0    0     3      4   #> 13.3    8     350    245   3.73   3.84    15.41   0    0     3      4   #> 14.3    8     360    245   3.21   3.57    15.84   0    0     3      4   #> 14.7    8     440    230   3.23   5.345   17.42   0    0     3      4   #>  15     8     301    335   3.54   3.57    14.6    0    1     5      8   #> 15.2    8    275.8   180   3.07   3.78     18     0    0     3      3   #>         8     304    150   3.15   3.435   17.3    0    0     3      2   #> 15.5    8     318    150   2.76   3.52    16.87   0    0     3      2   #> 15.8    8     351    264   4.22   3.17    14.5    0    1     5      4   #> 16.4    8    275.8   180   3.07   4.07    17.4    0    0     3      3   #> 17.3    8    275.8   180   3.07   3.73    17.6    0    0     3      3   #> 17.8    6    167.6   123   3.92   3.44    18.9    1    0     4      4   #> 18.1    6     225    105   2.76   3.46    20.22   1    0     3      1   #> 18.7    8     360    175   3.15   3.44    17.02   0    0     3      2   #> 19.2    6    167.6   123   3.92   3.44    18.3    1    0     4      4   #>         8     400    175   3.08   3.845   17.05   0    0     3      2   #> 19.7    6     145    175   3.62   2.77    15.5    0    1     5      6   #>  21     6     160    110   3.9    2.62    16.46   0    1     4      4   #>         6     160    110   3.9    2.875   17.02   0    1     4      4   #> 21.4    6     258    110   3.08   3.215   19.44   1    0     3      1   #>         4     121    109   4.11   2.78    18.6    1    1     4      2   #> 21.5    4    120.1   97    3.7    2.465   20.01   1    0     3      1   #> 22.8    4     108    93    3.85   2.32    18.61   1    1     4      1   #>         4    140.8   95    3.92   3.15    22.9    1    0     4      2   #> 24.4    4    146.7   62    3.69   3.19     20     1    0     4      2   #>  26     4    120.3   91    4.43   2.14    16.7    0    1     5      2   #> 27.3    4     79     66    4.08   1.935   18.9    1    1     4      1   #> 30.4    4    75.7    52    4.93   1.615   18.52   1    1     4      2   #>         4    95.1    113   3.77   1.513   16.9    1    1     5      2   #> 32.4    4    78.7    66    4.08    2.2    19.47   1    1     4      1   #> 33.9    4    71.1    65    4.22   1.835   19.9    1    1     4      1   #> ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo #>  #> main #>   footer #>  #> prov footer"},{"path":"https://insightsengineering.github.io/formatters/main/reference/title_footer.html","id":null,"dir":"Reference","previous_headings":"","what":"General title and footer accessors ‚Äî main_title","title":"General title and footer accessors ‚Äî main_title","text":"General title footer accessors","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/title_footer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General title and footer accessors ‚Äî main_title","text":"","code":"main_title(obj)  # S4 method for class 'MatrixPrintForm' main_title(obj)  main_title(obj) <- value  # S4 method for class 'MatrixPrintForm' main_title(obj) <- value  subtitles(obj)  # S4 method for class 'MatrixPrintForm' subtitles(obj)  subtitles(obj) <- value  # S4 method for class 'MatrixPrintForm' subtitles(obj) <- value  page_titles(obj)  # S4 method for class 'MatrixPrintForm' page_titles(obj)  # S4 method for class 'ANY' page_titles(obj)  page_titles(obj) <- value  # S4 method for class 'MatrixPrintForm' page_titles(obj) <- value  main_footer(obj)  # S4 method for class 'MatrixPrintForm' main_footer(obj)  main_footer(obj) <- value  # S4 method for class 'MatrixPrintForm' main_footer(obj) <- value  prov_footer(obj)  # S4 method for class 'MatrixPrintForm' prov_footer(obj)  prov_footer(obj) <- value  # S4 method for class 'MatrixPrintForm' prov_footer(obj) <- value  all_footers(obj)  all_titles(obj)"},{"path":"https://insightsengineering.github.io/formatters/main/reference/title_footer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General title and footer accessors ‚Äî main_title","text":"obj () object extract information . value character. New value.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/title_footer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"General title and footer accessors ‚Äî main_title","text":"character scalar (main_title), character vector (main_footer), vector length zero (subtitles, page_titles, prov_footer) containing relevant title/footer contents.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/tostring.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform objects into string representations ‚Äî toString","title":"Transform objects into string representations ‚Äî toString","text":"Transform complex object string representation ready printed written plain-text file. objects printed console pass via toString. function allows fundamental formatting specifications applied final output, like column widths relative wrapping (width), title footer wrapping (tf_wrap = TRUE max_width), horizontal separator character (e.g. hsep = \"+\").","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/tostring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform objects into string representations ‚Äî toString","text":"","code":"toString(x, ...)  # S4 method for class 'MatrixPrintForm' toString(   x,   widths = NULL,   tf_wrap = FALSE,   max_width = NULL,   col_gap = mf_colgap(x),   hsep = NULL,   fontspec = font_spec(),   ttype_ok = FALSE,   round_type = c(\"iec\", \"sas\") )"},{"path":"https://insightsengineering.github.io/formatters/main/reference/tostring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform objects into string representations ‚Äî toString","text":"x () object prepared rendering. ... additional parameters passed individual methods. widths (numeric  NULL) Proposed widths columns x. expected length numeric vector can retrieved ncol(x) + 1 column row names must also considered. tf_wrap (flag) whether text title, subtitles, footnotes wrapped. max_width (integer(1), string NULL) width title footer (including footnotes) materials word-wrapped . NULL, set current print width session (getOption(\"width\")). set \"auto\", width table (plus table inset) used. Parameter ignored tf_wrap = FALSE. col_gap (numeric(1)) space (characters) columns. hsep (string) character repeat create header/body separator line. NULL, object value used. \" \", empty separator printed. See default_hsep() information. fontspec (font_spec) font_spec object specifying font information use calculating string widths heights, returned font_spec(). ttype_ok (logical(1)) truetype (non-monospace) fonts allowed via fontspec. Defaults FALSE. parameter primarily internal testing generally set end users. round_type (\"iec\" \"sas\") type rounding perform. iec, default, peforms rounding compliant IEC 60559 (see details), sas performs nearest-value rounding consistent rounding within SAS.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/tostring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform objects into string representations ‚Äî toString","text":"character string containing ASCII rendering table-like object represented x.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/tostring.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform objects into string representations ‚Äî toString","text":"Manual insertion newlines supported tf_wrap = TRUE result warning undefined wrapping behavior. Passing vectors already split strings remains supported, however case string word-wrapped separately behavior described .","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/formatters/main/reference/tostring.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform objects into string representations ‚Äî toString","text":"","code":"mform <- basic_matrix_form(mtcars) cat(toString(mform)) #>                       mpg    cyl   disp    hp    drat    wt     qsec    vs   am   gear   carb #> ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo #> Mazda RX4              21     6     160    110   3.9    2.62    16.46   0    1     4      4   #> Mazda RX4 Wag          21     6     160    110   3.9    2.875   17.02   0    1     4      4   #> Datsun 710            22.8    4     108    93    3.85   2.32    18.61   1    1     4      1   #> Hornet 4 Drive        21.4    6     258    110   3.08   3.215   19.44   1    0     3      1   #> Hornet Sportabout     18.7    8     360    175   3.15   3.44    17.02   0    0     3      2   #> Valiant               18.1    6     225    105   2.76   3.46    20.22   1    0     3      1   #> Duster 360            14.3    8     360    245   3.21   3.57    15.84   0    0     3      4   #> Merc 240D             24.4    4    146.7   62    3.69   3.19     20     1    0     4      2   #> Merc 230              22.8    4    140.8   95    3.92   3.15    22.9    1    0     4      2   #> Merc 280              19.2    6    167.6   123   3.92   3.44    18.3    1    0     4      4   #> Merc 280C             17.8    6    167.6   123   3.92   3.44    18.9    1    0     4      4   #> Merc 450SE            16.4    8    275.8   180   3.07   4.07    17.4    0    0     3      3   #> Merc 450SL            17.3    8    275.8   180   3.07   3.73    17.6    0    0     3      3   #> Merc 450SLC           15.2    8    275.8   180   3.07   3.78     18     0    0     3      3   #> Cadillac Fleetwood    10.4    8     472    205   2.93   5.25    17.98   0    0     3      4   #> Lincoln Continental   10.4    8     460    215    3     5.424   17.82   0    0     3      4   #> Chrysler Imperial     14.7    8     440    230   3.23   5.345   17.42   0    0     3      4   #> Fiat 128              32.4    4    78.7    66    4.08    2.2    19.47   1    1     4      1   #> Honda Civic           30.4    4    75.7    52    4.93   1.615   18.52   1    1     4      2   #> Toyota Corolla        33.9    4    71.1    65    4.22   1.835   19.9    1    1     4      1   #> Toyota Corona         21.5    4    120.1   97    3.7    2.465   20.01   1    0     3      1   #> Dodge Challenger      15.5    8     318    150   2.76   3.52    16.87   0    0     3      2   #> AMC Javelin           15.2    8     304    150   3.15   3.435   17.3    0    0     3      2   #> Camaro Z28            13.3    8     350    245   3.73   3.84    15.41   0    0     3      4   #> Pontiac Firebird      19.2    8     400    175   3.08   3.845   17.05   0    0     3      2   #> Fiat X1-9             27.3    4     79     66    4.08   1.935   18.9    1    1     4      1   #> Porsche 914-2          26     4    120.3   91    4.43   2.14    16.7    0    1     5      2   #> Lotus Europa          30.4    4    95.1    113   3.77   1.513   16.9    1    1     5      2   #> Ford Pantera L        15.8    8     351    264   4.22   3.17    14.5    0    1     5      4   #> Ferrari Dino          19.7    6     145    175   3.62   2.77    15.5    0    1     5      6   #> Maserati Bora          15     8     301    335   3.54   3.57    14.6    0    1     5      8   #> Volvo 142E            21.4    4     121    109   4.11   2.78    18.6    1    1     4      2"},{"path":"https://insightsengineering.github.io/formatters/main/reference/var_labels-set.html","id":null,"dir":"Reference","previous_headings":"","what":"Set label attributes of all variables in a data.frame ‚Äî var_labels<-","title":"Set label attributes of all variables in a data.frame ‚Äî var_labels<-","text":"Variable labels can stored label attribute variable. functions sets non-missing (non-NA) variable labels data.frame.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/var_labels-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set label attributes of all variables in a data.frame ‚Äî var_labels<-","text":"","code":"var_labels(x) <- value"},{"path":"https://insightsengineering.github.io/formatters/main/reference/var_labels-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set label attributes of all variables in a data.frame ‚Äî var_labels<-","text":"x (data.frame) data frame object. value (character) vector new variable labels. values NA, label variable removed.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/var_labels-set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set label attributes of all variables in a data.frame ‚Äî var_labels<-","text":"x modified variable labels.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/var_labels-set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set label attributes of all variables in a data.frame ‚Äî var_labels<-","text":"","code":"x <- iris var_labels(x) #> Sepal.Length  Sepal.Width Petal.Length  Petal.Width      Species  #>           NA           NA           NA           NA           NA  var_labels(x) <- paste(\"label for\", names(iris)) var_labels(x) #>             Sepal.Length              Sepal.Width             Petal.Length  #> \"label for Sepal.Length\"  \"label for Sepal.Width\" \"label for Petal.Length\"  #>              Petal.Width                  Species  #>  \"label for Petal.Width\"      \"label for Species\"   if (interactive()) {   View(x) # in RStudio data viewer labels are displayed }"},{"path":"https://insightsengineering.github.io/formatters/main/reference/var_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Get label attributes of variables in a data.frame ‚Äî var_labels","title":"Get label attributes of variables in a data.frame ‚Äî var_labels","text":"Variable labels can stored label attribute variable. functions returns named character vector variable labels (empty strings specified).","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/var_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get label attributes of variables in a data.frame ‚Äî var_labels","text":"","code":"var_labels(x, fill = FALSE)"},{"path":"https://insightsengineering.github.io/formatters/main/reference/var_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get label attributes of variables in a data.frame ‚Äî var_labels","text":"x (data.frame) data frame object. fill (flag) whether variable names returned variables label attribute exist. FALSE, variables filled NAs instead.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/var_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get label attributes of variables in a data.frame ‚Äî var_labels","text":"named character vector variable labels x, names corresponding variable names.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/var_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get label attributes of variables in a data.frame ‚Äî var_labels","text":"","code":"x <- iris var_labels(x) #> Sepal.Length  Sepal.Width Petal.Length  Petal.Width      Species  #>           NA           NA           NA           NA           NA  var_labels(x) <- paste(\"label for\", names(iris)) var_labels(x) #>             Sepal.Length              Sepal.Width             Petal.Length  #> \"label for Sepal.Length\"  \"label for Sepal.Width\" \"label for Petal.Length\"  #>              Petal.Width                  Species  #>  \"label for Petal.Width\"      \"label for Species\""},{"path":"https://insightsengineering.github.io/formatters/main/reference/var_labels_remove.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove variable labels of a data.frame ‚Äî var_labels_remove","title":"Remove variable labels of a data.frame ‚Äî var_labels_remove","text":"Remove label attribute variables data frame.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/var_labels_remove.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove variable labels of a data.frame ‚Äî var_labels_remove","text":"","code":"var_labels_remove(x)"},{"path":"https://insightsengineering.github.io/formatters/main/reference/var_labels_remove.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove variable labels of a data.frame ‚Äî var_labels_remove","text":"x (data.frame) data.frame object.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/var_labels_remove.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove variable labels of a data.frame ‚Äî var_labels_remove","text":"x variable labels stripped.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/var_labels_remove.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove variable labels of a data.frame ‚Äî var_labels_remove","text":"","code":"x <- var_labels_remove(iris)"},{"path":"https://insightsengineering.github.io/formatters/main/reference/var_relabel.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy and change variable labels of a data.frame ‚Äî var_relabel","title":"Copy and change variable labels of a data.frame ‚Äî var_relabel","text":"Relabel subset variables.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/var_relabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy and change variable labels of a data.frame ‚Äî var_relabel","text":"","code":"var_relabel(x, ...)"},{"path":"https://insightsengineering.github.io/formatters/main/reference/var_relabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy and change variable labels of a data.frame ‚Äî var_relabel","text":"x (data.frame) data frame object. ... name-value pairs, name corresponds variable name x value new variable label.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/var_relabel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy and change variable labels of a data.frame ‚Äî var_relabel","text":"copy x labels modified according ...","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/var_relabel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Copy and change variable labels of a data.frame ‚Äî var_relabel","text":"","code":"x <- var_relabel(iris, Sepal.Length = \"Sepal Length of iris flower\") var_labels(x) #>                  Sepal.Length                   Sepal.Width  #> \"Sepal Length of iris flower\"                            NA  #>                  Petal.Length                   Petal.Width  #>                            NA                            NA  #>                       Species  #>                            NA"},{"path":"https://insightsengineering.github.io/formatters/main/reference/vert_pag_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Find column indices for vertical pagination ‚Äî vert_pag_indices","title":"Find column indices for vertical pagination ‚Äî vert_pag_indices","text":"Find column indices vertical pagination","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/vert_pag_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find column indices for vertical pagination ‚Äî vert_pag_indices","text":"","code":"vert_pag_indices(   obj,   cpp = 40,   colwidths = NULL,   verbose = FALSE,   rep_cols = 0L,   fontspec,   nosplitin = character(),   round_type = c(\"iec\", \"sas\") )"},{"path":"https://insightsengineering.github.io/formatters/main/reference/vert_pag_indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find column indices for vertical pagination ‚Äî vert_pag_indices","text":"obj () object paginated. Must matrix_form() method. cpp (numeric(1)) number characters per page (width). colwidths (numeric) vector column widths (characters) use vertical pagination. verbose (flag) whether additional informative messages search pagination breaks shown. Defaults FALSE. rep_cols (numeric(1)) number columns (including row labels) repeated every page. Defaults 0. fontspec (font_spec) font_spec object specifying font information use calculating string widths heights, returned font_spec(). nosplitin (character) list names subtables page breaks allowed, regardless considerations. Defaults none. round_type (\"iec\" \"sas\") type rounding perform. iec, default, peforms rounding compliant IEC 60559 (see details), sas performs nearest-value rounding consistent rounding within SAS.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/vert_pag_indices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find column indices for vertical pagination ‚Äî vert_pag_indices","text":"list partitioning vector column indices subsets 1 horizontally paginated pages.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/vert_pag_indices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find column indices for vertical pagination ‚Äî vert_pag_indices","text":"","code":"mf <- basic_matrix_form(df = mtcars) colpaginds <- vert_pag_indices(mf, fontspec = font_spec()) lapply(colpaginds, function(j) mtcars[, j, drop = FALSE]) #> [[1]] #>                      mpg cyl  disp #> Mazda RX4           21.0   6 160.0 #> Mazda RX4 Wag       21.0   6 160.0 #> Datsun 710          22.8   4 108.0 #> Hornet 4 Drive      21.4   6 258.0 #> Hornet Sportabout   18.7   8 360.0 #> Valiant             18.1   6 225.0 #> Duster 360          14.3   8 360.0 #> Merc 240D           24.4   4 146.7 #> Merc 230            22.8   4 140.8 #> Merc 280            19.2   6 167.6 #> Merc 280C           17.8   6 167.6 #> Merc 450SE          16.4   8 275.8 #> Merc 450SL          17.3   8 275.8 #> Merc 450SLC         15.2   8 275.8 #> Cadillac Fleetwood  10.4   8 472.0 #> Lincoln Continental 10.4   8 460.0 #> Chrysler Imperial   14.7   8 440.0 #> Fiat 128            32.4   4  78.7 #> Honda Civic         30.4   4  75.7 #> Toyota Corolla      33.9   4  71.1 #> Toyota Corona       21.5   4 120.1 #> Dodge Challenger    15.5   8 318.0 #> AMC Javelin         15.2   8 304.0 #> Camaro Z28          13.3   8 350.0 #> Pontiac Firebird    19.2   8 400.0 #> Fiat X1-9           27.3   4  79.0 #> Porsche 914-2       26.0   4 120.3 #> Lotus Europa        30.4   4  95.1 #> Ford Pantera L      15.8   8 351.0 #> Ferrari Dino        19.7   6 145.0 #> Maserati Bora       15.0   8 301.0 #> Volvo 142E          21.4   4 121.0 #>  #> [[2]] #>                      hp drat    wt #> Mazda RX4           110 3.90 2.620 #> Mazda RX4 Wag       110 3.90 2.875 #> Datsun 710           93 3.85 2.320 #> Hornet 4 Drive      110 3.08 3.215 #> Hornet Sportabout   175 3.15 3.440 #> Valiant             105 2.76 3.460 #> Duster 360          245 3.21 3.570 #> Merc 240D            62 3.69 3.190 #> Merc 230             95 3.92 3.150 #> Merc 280            123 3.92 3.440 #> Merc 280C           123 3.92 3.440 #> Merc 450SE          180 3.07 4.070 #> Merc 450SL          180 3.07 3.730 #> Merc 450SLC         180 3.07 3.780 #> Cadillac Fleetwood  205 2.93 5.250 #> Lincoln Continental 215 3.00 5.424 #> Chrysler Imperial   230 3.23 5.345 #> Fiat 128             66 4.08 2.200 #> Honda Civic          52 4.93 1.615 #> Toyota Corolla       65 4.22 1.835 #> Toyota Corona        97 3.70 2.465 #> Dodge Challenger    150 2.76 3.520 #> AMC Javelin         150 3.15 3.435 #> Camaro Z28          245 3.73 3.840 #> Pontiac Firebird    175 3.08 3.845 #> Fiat X1-9            66 4.08 1.935 #> Porsche 914-2        91 4.43 2.140 #> Lotus Europa        113 3.77 1.513 #> Ford Pantera L      264 4.22 3.170 #> Ferrari Dino        175 3.62 2.770 #> Maserati Bora       335 3.54 3.570 #> Volvo 142E          109 4.11 2.780 #>  #> [[3]] #>                      qsec vs am #> Mazda RX4           16.46  0  1 #> Mazda RX4 Wag       17.02  0  1 #> Datsun 710          18.61  1  1 #> Hornet 4 Drive      19.44  1  0 #> Hornet Sportabout   17.02  0  0 #> Valiant             20.22  1  0 #> Duster 360          15.84  0  0 #> Merc 240D           20.00  1  0 #> Merc 230            22.90  1  0 #> Merc 280            18.30  1  0 #> Merc 280C           18.90  1  0 #> Merc 450SE          17.40  0  0 #> Merc 450SL          17.60  0  0 #> Merc 450SLC         18.00  0  0 #> Cadillac Fleetwood  17.98  0  0 #> Lincoln Continental 17.82  0  0 #> Chrysler Imperial   17.42  0  0 #> Fiat 128            19.47  1  1 #> Honda Civic         18.52  1  1 #> Toyota Corolla      19.90  1  1 #> Toyota Corona       20.01  1  0 #> Dodge Challenger    16.87  0  0 #> AMC Javelin         17.30  0  0 #> Camaro Z28          15.41  0  0 #> Pontiac Firebird    17.05  0  0 #> Fiat X1-9           18.90  1  1 #> Porsche 914-2       16.70  0  1 #> Lotus Europa        16.90  1  1 #> Ford Pantera L      14.50  0  1 #> Ferrari Dino        15.50  0  1 #> Maserati Bora       14.60  0  1 #> Volvo 142E          18.60  1  1 #>  #> [[4]] #>                     gear carb #> Mazda RX4              4    4 #> Mazda RX4 Wag          4    4 #> Datsun 710             4    1 #> Hornet 4 Drive         3    1 #> Hornet Sportabout      3    2 #> Valiant                3    1 #> Duster 360             3    4 #> Merc 240D              4    2 #> Merc 230               4    2 #> Merc 280               4    4 #> Merc 280C              4    4 #> Merc 450SE             3    3 #> Merc 450SL             3    3 #> Merc 450SLC            3    3 #> Cadillac Fleetwood     3    4 #> Lincoln Continental    3    4 #> Chrysler Imperial      3    4 #> Fiat 128               4    1 #> Honda Civic            4    2 #> Toyota Corolla         4    1 #> Toyota Corona          3    1 #> Dodge Challenger       3    2 #> AMC Javelin            3    2 #> Camaro Z28             3    4 #> Pontiac Firebird       3    2 #> Fiat X1-9              4    1 #> Porsche 914-2          5    2 #> Lotus Europa           5    2 #> Ford Pantera L         5    4 #> Ferrari Dino           5    6 #> Maserati Bora          5    8 #> Volvo 142E             4    2 #>"},{"path":"https://insightsengineering.github.io/formatters/main/reference/with_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Return an object with a label attribute ‚Äî with_label","title":"Return an object with a label attribute ‚Äî with_label","text":"Return object label attribute","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/with_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return an object with a label attribute ‚Äî with_label","text":"","code":"with_label(x, label)"},{"path":"https://insightsengineering.github.io/formatters/main/reference/with_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return an object with a label attribute ‚Äî with_label","text":"x () object. label (string) label attribute attach x.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/with_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return an object with a label attribute ‚Äî with_label","text":"x labeled label. Note exact mechanism labeling considered internal implementation detail, label can always retrieved via obj_label.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/with_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return an object with a label attribute ‚Äî with_label","text":"","code":"x <- with_label(c(1, 2, 3), label = \"Test\") obj_label(x) #> [1] \"Test\""},{"path":"https://insightsengineering.github.io/formatters/main/reference/wrap_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap a string to a precise width ‚Äî wrap_string","title":"Wrap a string to a precise width ‚Äî wrap_string","text":"Core wrapping functionality preserves whitespace. Newline character \"\\n\" supported core functionality stringi::stri_wrap(). usually solved beforehand matrix_form(). width smaller large word, truncated width characters. split leaves trailing groups empty spaces, dropped.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/wrap_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap a string to a precise width ‚Äî wrap_string","text":"","code":"wrap_string(str, width, collapse = NULL, fontspec = font_spec())  wrap_txt(str, width, collapse = NULL, fontspec = font_spec())"},{"path":"https://insightsengineering.github.io/formatters/main/reference/wrap_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap a string to a precise width ‚Äî wrap_string","text":"str (string, character, list) string wrapped. vector list, looped list returned unlist(use.names = FALSE). width (numeric(1)) width, characters, text wrapped . collapse (string NULL) collapse character used separate segments words split pasted together. usually done internally \"\\n\" update wrapping along internal values. fontspec (font_spec) font_spec object specifying font information use calculating string widths heights, returned font_spec().","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/wrap_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrap a string to a precise width ‚Äî wrap_string","text":"string str one element collapse = NULL. Otherwise, list elements (length(str) > 1) can contain strings vectors characters (collapse = NULL).","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/wrap_string.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrap a string to a precise width ‚Äî wrap_string","text":"Word wrapping happens similarly stringi::stri_wrap() following difference: individual words longer max_width broken way fits word wrapping.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/wrap_string.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Wrap a string to a precise width ‚Äî wrap_string","text":"wrap_txt(): Deprecated function. Please use wrap_string() instead.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/wrap_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrap a string to a precise width ‚Äî wrap_string","text":"","code":"str <- list(   \"  , something really  \\\\tnot  very good\", # \\t needs to be escaped   \"  but I keep it12   \" ) wrap_string(str, 5, collapse = \"\\n\") #> [1] \"  ,\\nsomet\\nhing\\nreall\\ny  \\\\t\\nnot \\nvery\\ngood\" #> [2] \" \\nbut I\\nkeep\\nit12\"                               wrap_txt(str, 5, collapse = NULL) #>  [1] \"  ,\"    \"somet\"  \"hing\"   \"reall\"  \"y  \\\\t\" \"not \"   \"very\"   \"good\"   #>  [9] \" \"      \"but I\"  \"keep\"   \"it12\""},{"path":"https://insightsengineering.github.io/formatters/main/reference/wrap_string_ttype.html","id":null,"dir":"Reference","previous_headings":"","what":"wrap string given a Truetype font ‚Äî split_word_ttype","title":"wrap string given a Truetype font ‚Äî split_word_ttype","text":"wrap string given Truetype font","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/wrap_string_ttype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"wrap string given a Truetype font ‚Äî split_word_ttype","text":"","code":"split_word_ttype(str, width, fontspec, min_ok_chars)  wrap_string_ttype(   str,   width,   fontspec,   collapse = NULL,   min_ok_chars = min(floor(nchar(str)/2), 4, floor(width/2)),   wordbreak_ok = TRUE )"},{"path":"https://insightsengineering.github.io/formatters/main/reference/wrap_string_ttype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"wrap string given a Truetype font ‚Äî split_word_ttype","text":"str (string, character, list) string wrapped. vector list, looped list returned unlist(use.names = FALSE). width (numeric(1)) width, characters, text wrapped . fontspec (font_spec) font_spec object specifying font information use calculating string widths heights, returned font_spec(). min_ok_chars (numeric(1)) number minimum characters remain either side word split. collapse (string NULL) collapse character used separate segments words split pasted together. usually done internally \"\\n\" update wrapping along internal values. wordbreak_ok (logical(1)) breaking within word allowed? , FALSE, attempts wrap string width narrower widest word result error.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/reference/wrap_string_ttype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"wrap string given a Truetype font ‚Äî split_word_ttype","text":"str, broken word-wrapped vector","code":""},{"path":"https://insightsengineering.github.io/formatters/main/news/index.html","id":"formatters-05109002","dir":"Changelog","previous_headings":"","what":"formatters 0.5.10.9002","title":"formatters 0.5.10.9002","text":"Fixed bug mform_handle_newlines caused string matrix column names removed. prevented paginated listing key column info repeated vertically spanning multiple pages. Minor bug fix paginate argument export_as_rtf function. Add round_type argument indicate iec (default) sas (nearest value, 5 goes ) rounding formatting machinery Added support new 2- 3-d formats","code":""},{"path":"https://insightsengineering.github.io/formatters/main/news/index.html","id":"formatters-0510","dir":"Changelog","previous_headings":"","what":"formatters 0.5.10","title":"formatters 0.5.10","text":"CRAN release: 2025-01-08 Fixed bug mf_update_cinfo causing error export_as_txt applied empty listings. Fixed bug mform_handle_newlines allow printing console table top left information, new lines column names contained one row. Fixed bug mform_handle_newlines allow empty strings present top left information. Fixed bug top left information printed lines present header lines.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/news/index.html","id":"formatters-059","dir":"Changelog","previous_headings":"","what":"formatters 0.5.9","title":"formatters 0.5.9","text":"CRAN release: 2024-09-12 Fixed bug format_value caused multiple NA values associated wrong na_str values.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/news/index.html","id":"formatters-058","dir":"Changelog","previous_headings":"","what":"formatters 0.5.8","title":"formatters 0.5.8","text":"CRAN release: 2024-06-19 Added TrueType font support pagination word-wrapping machinery @gmbecker. Fixed bug col_gap correctly taken account horizontal pagination (#249) @gmbecker. Improved clarity error messages returned format_value.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/news/index.html","id":"formatters-057","dir":"Changelog","previous_headings":"","what":"formatters 0.5.7","title":"formatters 0.5.7","text":"Added lifecycle badge files documentation. Fixed bug causing recursive appending page number text pagination. Deprecated width, height fontsize arguments export_as_pdf() using lifecycle package.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/news/index.html","id":"formatters-056","dir":"Changelog","previous_headings":"","what":"formatters 0.5.6","title":"formatters 0.5.6","text":"CRAN release: 2024-04-15 Added ‚ÄúN=xx‚Äù format unit test . Added error catch \\r recursive special character. Fixed pagination unexpected counts rlistings‚Äô pagination removing manual subsetting workaround fixing insightsengineering/rlistings#155. Fixed mismatch pagination exports regarding value assigned parameter max_width. Introduced general handler .handle_max_width pagination, exports, toString. Fixed bug format_value causing warning vectors containing NA non-NA values. Fixed issue var_label assignment needed non-named strings. Included indentation split rows LabelRow assignment basic_matrix_form. Allowed tables content rows end exported. Moved new line expansion decorations rtables‚Äô matrix_form formatters‚Äô constructor MatrixPrintForm cover also rlistings. Improved relevant information feedback pagination. Updated export_as_txt allow lists tables/listings input. enables listing pagination pages parameter. Removed possibility setting min_siblings > 0 dealing listings. allows smooth pagination 2 lines. Removed redundant references matrix_print_form constructor (now MatrixPrintForm).","code":""},{"path":"https://insightsengineering.github.io/formatters/main/news/index.html","id":"formatters-055","dir":"Changelog","previous_headings":"","what":"formatters 0.5.5","title":"formatters 0.5.5","text":"CRAN release: 2023-12-06 Applied styler resolved package lint. Changed default indentation 4 spaces 2. Added possibility setting general default using set_default_hsep() sets option getOption(\"formatters_default_hsep\"). Allowed section divider header table body. Added support combining duplicate referential footnotes. Migrated export_as_pdf rtables. Now using paginate_to_mpfs function. Made font_lcpi function internal. Fixed wrapping section dividers error. Fixed infinite loop wrap_string caused bug stringi::stri_wrap wrapping small strings dots spaces correctly.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/news/index.html","id":"formatters-054","dir":"Changelog","previous_headings":"","what":"formatters 0.5.4","title":"formatters 0.5.4","text":"Fixed bug paginate_to_mpfs() formatting listings key columns retained pagination insightsengineering/rlistings#155. Improved error message pagination cpp lpp small comparison column row widths. Added full support newline characters part rtables objects. Modified default vertical alignment top left information bottom. Rework wrap_string allow space characters used wrapped.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/news/index.html","id":"formatters-053","dir":"Changelog","previous_headings":"","what":"formatters 0.5.3","title":"formatters 0.5.3","text":"Decimal alignment now throws informative error scientific notation used. Specified minimal version package dependencies. Updated hex sticker logo.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/news/index.html","id":"formatters-052","dir":"Changelog","previous_headings":"","what":"formatters 0.5.2","title":"formatters 0.5.2","text":"CRAN release: 2023-08-25 paginate_to_mpfs can handle single column tables listings. Added decimal alignment support decimal, dec_right, dec_left. Updated export_as_txt pass rep_cols argument pagination function. Added list_valid_aligns() lists available alignments. Set default values na_str align NULL format configuration function fmt_config. Fixed bug threw warning prov_footer length greater 1 insightsengineering/rtables#705.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/news/index.html","id":"formatters-051","dir":"Changelog","previous_headings":"","what":"formatters 0.5.1","title":"formatters 0.5.1","text":"Updated export_as_txt print split label using page_by one level. Reduced amount spelling issues. New generic getter setter align (obj_align obj_align<-). New fmt_config class bundle together format, na_str, align instructions. Reverting default alignment (NULL center) na_str NULL \"NA\". affects rlistings, new default takes effect.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/news/index.html","id":"formatters-050","dir":"Changelog","previous_headings":"","what":"formatters 0.5.0","title":"formatters 0.5.0","text":"CRAN release: 2023-05-25 Fix bug MPF pagination (thus export_as_txt) column labels newlines (#150, insightsengineering/rtables#634) font_size now 8 consistently across pagination machinery. specified, margins inches (including default). Fix --one error pagination machinery certain cases. Refined informative messages pagination verbose (verbose = TRUE). Referential footnotes specified (non-number) symbols now printed per page regardless number elements page refer . New export_as_txt function operates now object applicable matrix_form method (including pagination). New paginate_indices paginate_to_mpfs functions. New diagnose_pagination function accepts arguments paginate_to_mpfs returns information pagination algorithm outcome row column positions. MatrixPrintForm objects now pay closer attention referential footnote information past. MatrixPrintForm objects infer detailed referential footnote information strings element backward compatibility. Fix test failed old Windows CRAN machine due imperfect UTF support . lpp cpp pagination exporter functions assigned NULL, pagination vertical horizontal direction happens, respectively. new default NA_integer_ lpp cpp now means values inferred page size. Added hexSticker logo.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/news/index.html","id":"formatters-040","dir":"Changelog","previous_headings":"","what":"formatters 0.4.0","title":"formatters 0.4.0","text":"CRAN release: 2023-03-02 Cell values row labels now word-wrapped based column widths (widths toString colwidths pagination exporters. New ‚ÄúN=xx (xx%)‚Äù format support (https://github.com/insightsengineering/rtables/issues/516). New generic getter setter na-string (obj_na_str obj_na_str<-, migrated rtables). MatrixPrintForm class now carries around has_topleft information explicitly, getter mf_has_topleft. Number header lines MatrixPrintForm object (mf_nlheader) now computed attribute rather stored one, mf_nlheader<- removed. New MatrixPrintForm accessor: mpf_has_rlabels determines whether MPF$strings column label rows (.e.¬†column index originating object). wrap_text wrap_string now accept hard argument (default FALSE) indicating whether ‚Äòhard‚Äô word-wrapping (.e.¬†explicit embedding newline characters) performed. vert_pag_indices now accepts rep_cols control many columns act ‚Äòrow-label-like‚Äô, required rlistings. Documentation pagination algorithm greatly expanded. Pagination verbose = TRUE now significantly informative. fix bug indenting correct row-labels word wrapped (#84, #85). fix bug portions table last section div (e.g., non-nested analyses) omitted (#77). fix bug mf_rinfo<- checked new value wrong dimensions. Fixed --one error basic pagination machinery. Fix bug position header separator columns word wrapping (#68). Bug rendering mf_lgrouping non-functional fixed.","code":""},{"path":"https://insightsengineering.github.io/formatters/main/news/index.html","id":"formatters-034","dir":"Changelog","previous_headings":"","what":"formatters 0.3.4","title":"formatters 0.3.4","text":"nlines now accepts colwidths max_width, defaulting NULL pag_indices_inner, find_pag valid_pag now accept have_col_fnotes div_height arguments fix bug lead insightsengineering/rtables#414 (nlines(\"\", <non-null>) threw error paginate related generics now accept max_width use ensuring pagination now takes word wrapping account titles footers. nlines character method changed, takes sum nlines elements instead max case vector length > 1 new wrap_title_footer function use everything implements generic interface design. export new page_dim function returns values page dims named type. tf_wrap functionality now breaks words large respect surrounding word wrapping. tf_wrap behavior longer emits warning breaking ‚Äòwords‚Äô larger max_width tf_wrap max_width = \"auto\" now sets max_width sum(widths) + table_inset(x) instead sum(widths) Experimental tf_wrap functionality added toString MatrixPrintForm method MatrixPrintForm class now includes table_inset element Add table_inset table_inset<- generics now exported toString now respects table_inset values set MatrixPrintForm object Use exact=TRUE calls attr accessor functions. length-zero values na_str now silently interpreted default value (\"NA\"), missing values na_str length > 0. adding wrapping titles, subtitles, footers. page_lcpp function now provided map page size font combinations lines characters per page. getters setters components MatrixPrintForm objects now exported (.e., mf_spans friends). na_str can now length >1, matched position NAs case. format_value now returns solely na_str value -NA values formatted certain formats (currently\"(N=xx)\", \">999.9\", \">999.99\", \"x.xxxx | (<0.0001)\")","code":""},{"path":"https://insightsengineering.github.io/formatters/main/news/index.html","id":"formatters-033","dir":"Changelog","previous_headings":"","what":"formatters 0.3.3","title":"formatters 0.3.3","text":"vert_pag_indices now accepts colwidths argument","code":""},{"path":"https://insightsengineering.github.io/formatters/main/news/index.html","id":"formatters-0325","dir":"Changelog","previous_headings":"","what":"formatters 0.3.2.5","title":"formatters 0.3.2.5","text":"label_vars<- now correctly adheres names value, even different order names(x). Fixes insightsengineering/rlistings#8","code":""},{"path":"https://insightsengineering.github.io/formatters/main/news/index.html","id":"formatters-0324","dir":"Changelog","previous_headings":"","what":"formatters 0.3.2.4","title":"formatters 0.3.2.4","text":"vert_pag_indices now accepts colwidths argument","code":""},{"path":"https://insightsengineering.github.io/formatters/main/news/index.html","id":"formatters-0323","dir":"Changelog","previous_headings":"","what":"formatters 0.3.2.3","title":"formatters 0.3.2.3","text":"fix regression caused 0.3.2.2 vert_pag_indices obj MatrixPrintForm object","code":""},{"path":"https://insightsengineering.github.io/formatters/main/news/index.html","id":"formatters-0322","dir":"Changelog","previous_headings":"","what":"formatters 0.3.2.2","title":"formatters 0.3.2.2","text":"Added support trailing_sep column row_info data.frames (e.g, pagdfrow constructor) trailing_sep info now used printing pagination col_gap now element MatrixPrintForm objects vert_pag_indices fixed correctly take gap printed columns account","code":""},{"path":"https://insightsengineering.github.io/formatters/main/news/index.html","id":"formatters-0321","dir":"Changelog","previous_headings":"","what":"formatters 0.3.2.1","title":"formatters 0.3.2.1","text":"calling var_labels data.frame columns longer error (insightsengineering/rtables#224)","code":""},{"path":"https://insightsengineering.github.io/formatters/main/news/index.html","id":"formatters-032","dir":"Changelog","previous_headings":"","what":"formatters 0.3.2","title":"formatters 0.3.2","text":"CRAN release: 2022-06-09 Change warning non-UTF line separator default used message, displays interactive sessions (per session).","code":""},{"path":"https://insightsengineering.github.io/formatters/main/news/index.html","id":"formatters-031","dir":"Changelog","previous_headings":"","what":"formatters 0.3.1","title":"formatters 0.3.1","text":"CRAN release: 2022-05-20 Released CRAN","code":""},{"path":"https://insightsengineering.github.io/formatters/main/news/index.html","id":"formatters-030","dir":"Changelog","previous_headings":"","what":"formatters 0.3.0","title":"formatters 0.3.0","text":"add exported default_hsep function use reverse-dependencies (incl rtables) format_value now respects na_str even format xx (previously returned \"NA\" always) rename linesep argument hsep toString generic signature add indent_size argument matrix_form generic signature add number \"__ (__)\" (pct) formats response #23 Switch testthat testing framework","code":""},{"path":"https://insightsengineering.github.io/formatters/main/news/index.html","id":"formatters-020","dir":"Changelog","previous_headings":"","what":"formatters 0.2.0","title":"formatters 0.2.0","text":"CRAN release: 2022-03-29 Updated Documentation Released CRAN","code":""},{"path":"https://insightsengineering.github.io/formatters/main/news/index.html","id":"formatters-0100003","dir":"Changelog","previous_headings":"","what":"formatters 0.1.0.0003","title":"formatters 0.1.0.0003","text":"Fix regression support new lines columns rtables","code":""},{"path":"https://insightsengineering.github.io/formatters/main/news/index.html","id":"formatters-0100002","dir":"Changelog","previous_headings":"","what":"formatters 0.1.0.0002","title":"formatters 0.1.0.0002","text":"Add formats argument matrix_form informal class/constructor use rtables::table_shell","code":""}]
